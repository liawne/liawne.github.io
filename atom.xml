<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="zh-CN"><title type="text">newiur</title><subtitle type="html">newiur's blog</subtitle><updated>2022-06-08T00:03:03+08:00</updated><id>https://ruisum.top/</id><link rel="alternate" type="text/html" href="https://ruisum.top/"/><link rel="self" type="application/atom+xml" href="https://ruisum.top/atom.xml"/><author><name>newiur</name><uri>https://ruisum.top/</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><generator uri="https://gohugo.io/" version="0.98.0">Hugo</generator><entry><title type="text">systemd介绍</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/boot_process/systemd%E4%BB%8B%E7%BB%8D/"/><id>https://ruisum.top/tech/basics/boot_process/systemd%E4%BB%8B%E7%BB%8D/</id><updated>2022-06-02T23:05:38+08:00</updated><published>2022-06-02T23:05:38+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">systemd是什么，systemd的构成</summary><content type="html">&lt;h2 id="-说明"># 说明&lt;/h2>
&lt;h3 id="-什么是-systemd"># 什么是 systemd&lt;/h3>
&lt;p>&lt;code>systemd&lt;/code> 是一个软件套件，它为 &lt;code>linux&lt;/code> 操作系统提供一系列系统组件。它的主要目标是统一 &lt;code>linux&lt;/code> 发行版中的服务配置和行为；它的主要组件是 &lt;code>system and service manager&lt;/code> —— 一个用于启动用户空间和管理用户进程的 &lt;code>init&lt;/code> 系统。它还提供各种守护程序和实用程序的替代品，包括设备管理（&lt;code>device management&lt;/code>）、登录管理（&lt;code>login management&lt;/code>）、网络连接管理（&lt;code>network connection management&lt;/code>）和事件日志记录（&lt;code>event logging&lt;/code>）。&lt;/p>
&lt;p>自 &lt;code>2015&lt;/code> 年以来，大多数 &lt;code>linux&lt;/code> 发行版都采用了 &lt;code>systemd&lt;/code>，取代了其他 &lt;code>init&lt;/code> 系统，例如 &lt;code>SysV init&lt;/code>。&lt;/p>
&lt;h3 id="-systemd的历史"># systemd的历史&lt;/h3>
&lt;p>最初开发 &lt;code>systemd&lt;/code> 是 &lt;code>Red Hat&lt;/code> 软件工程师 &lt;code>Lennart Poettering&lt;/code> 和 &lt;code>Kay Sievers&lt;/code> 于 &lt;code>2010&lt;/code> 年启动的一个项目，目的是用来取代 &lt;code>linux&lt;/code> 的传统 &lt;code>System V init&lt;/code>。&lt;code>Poettering&lt;/code> 在 &lt;code>2010 年 4 月&lt;/code>发表的一篇题 &lt;span style="border-bottom: #ffdd00 2px solid">
重新思考 PID 1
&lt;/span>的博客文章，引入了后来成为 systemd 的实验版本; 他们试图以多种方式超越 &lt;code>init&lt;/code> 守护进程的效率。他们希望改进表达依赖关系的软件框架，来允许在系统启动期间同时或并行完成更多任务。&lt;/p>
&lt;p>&lt;code>2011 年 5 月&lt;/code>，&lt;code>Fedora&lt;/code> 成为第一个默认启用 &lt;code>systemd&lt;/code> 的主要 &lt;code>linux&lt;/code> 发行版，取代了 &lt;code>SysVinit&lt;/code>。当时的理由是 &lt;code>systemd&lt;/code> 在启动期间提供了广泛的并行化、更好的流程管理以及总体上更理智、基于依赖关系的系统控制方法。&lt;/p>
&lt;p>&lt;code>2012 年 10 月&lt;/code>，&lt;code>Arch linux&lt;/code> 将 &lt;code>systemd&lt;/code> 设为默认值，也完成了从 &lt;code>SysVinit&lt;/code> 的切换。&lt;/p>
&lt;p>&lt;code>2013 年 10 月&lt;/code>至 &lt;code>2014 年 2 月&lt;/code> 期间，&lt;code>Debian&lt;/code> 技术委员会在经过长时间的辩论后，最终做出决定，在 &lt;code>Debian 8&amp;quot;jessie&amp;quot;&lt;/code>上使用 &lt;code>systemd&lt;/code>。&lt;/p>
&lt;p>&lt;code>2014 年 2 月&lt;/code>，在 &lt;code>Debian&lt;/code> 做出决定后，&lt;code>Mark Shuttleworth&lt;/code> 在他的博客上宣布 &lt;code>Ubuntu&lt;/code> 将跟随实施 &lt;code>systemd&lt;/code>，放弃自己的 &lt;code>Upstart&lt;/code>。&lt;/p>
&lt;h2 id="systemd的实现">systemd的实现&lt;/h2>
&lt;h3 id="-设计"># 设计&lt;/h3>
&lt;p>&lt;code>Poettering&lt;/code> 将 &lt;code>systemd&lt;/code> 开发描述为 &lt;code>never finished, never complete, but tracking progress of technology（远未完成、远未完美、只跟随技术进步）&lt;/code>。&lt;/p>
&lt;p>&lt;code>2014 年 5 月&lt;/code>，&lt;code>Poettering&lt;/code> 通过提供以下三个通用功能进一步将 &lt;code>systemd&lt;/code> 描述为&lt;code>pointless differences between distributions（版本之间无大差异）&lt;/code>：&lt;/p>
&lt;ul>
&lt;li>系统和服务管理器（通过应用各种配置来管理系统及其服务）&lt;/li>
&lt;li>软件平台（作为开发其他软件的基础）&lt;/li>
&lt;li>应用程序和内核之间的粘合剂（提供各种接口来暴露内核提供的功能）&lt;/li>
&lt;/ul>
&lt;p>&lt;code>systemd&lt;/code> 包括诸如按需&lt;code>启动守护进程&lt;/code>、&lt;code>快照支持&lt;/code>、&lt;code>进程跟踪&lt;/code>和&lt;code>抑制剂锁（Inhibitor Locks）&lt;/code>等功能。它不仅仅是&lt;code>systemd init daemon&lt;/code>的名字，还指代围绕它的整个软件包，除了&lt;code>systemd init&lt;/code>守护进程之外，还包括守护进程&lt;code>journald&lt;/code>、&lt;code>logind&lt;/code>和&lt;code>networkd&lt;/code>以及许多其他基础组件。&lt;/p>
&lt;p>&lt;code>2013 年 1 月&lt;/code>，&lt;code>Poettering&lt;/code> 将 &lt;code>systemd&lt;/code> 描述为不是一个程序，而是一个包含 &lt;code>69&lt;/code> 个单独二进制文件的大型软件套件。作为一个集成的软件套件，&lt;code>systemd&lt;/code> 取代了由传统 &lt;code>init&lt;/code> 守护进程控制的启动顺序和运行级别，以及在其控制下执行的 &lt;code>shell&lt;/code> 脚本。&lt;code>systemd&lt;/code> 还通过处理用户登录、系统控制台、设备热插拔（&lt;code>device hotplugging&lt;/code>）、计划执行（&lt;code>替换 cron&lt;/code>）、日志记录、主机名和语言环境来集成 &lt;code>Linux&lt;/code> 系统上常见的许多其他服务。&lt;/p>
&lt;p>与 &lt;code>init&lt;/code> 守护进程一样，&lt;code>systemd&lt;/code> 是一个管理其他守护进程的守护进程，这些守护进程包括 &lt;code>systemd&lt;/code> 本身都是后台进程。 &lt;code>systemd&lt;/code> 是在引导期间启动的第一个守护进程，也是在关机期间终止的最后一个守护进程。&lt;code>systemd&lt;/code> 守护进程充当用户空间进程树的根；第一个进程&lt;code>（PID 1）&lt;/code>在 &lt;code>Unix&lt;/code> 系统上具有特殊的作用，因为它会在原始父进程终止时替换进程的父进程，因此，第一个进程特别适合用于监控守护进程。&lt;/p>
&lt;p>&lt;code>systemd&lt;/code> 并行执行其启动序列的元素，这在理论上比传统的启动序列方法更快。对于进程间通信 (&lt;code>IPC&lt;/code>)，&lt;code>systemd&lt;/code> 使 &lt;code>Unix&lt;/code> 域套接字（&lt;code>Unix domain sockets&lt;/code>）和 &lt;code>D-Bus&lt;/code> 可用于正在运行的守护进程。 &lt;code>systemd&lt;/code> 本身的状态也可以保存在快照中以备将来调用。&lt;/p>
&lt;h3 id="-核心组件和库"># 核心组件和库&lt;/h3>
&lt;p>&lt;strong>systemd组件和库&lt;/strong>&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220605-1626.png" alt="systemd组件和库">
遵循 &lt;code>systemd&lt;/code> 的集成方法，&lt;code>systemd&lt;/code> 还提供各种守护程序和实用程序的替代品，包括启动 &lt;code>shell&lt;/code> 脚本、&lt;code>pm-utils&lt;/code>、&lt;code>inetd&lt;/code>、&lt;code>acpid&lt;/code>、&lt;code>syslog&lt;/code>、&lt;code>watchdog&lt;/code>、&lt;code>cron&lt;/code> 和 &lt;code>atd&lt;/code>。&lt;br>
systemd 的核心组件包括：&lt;/p>
&lt;ul>
&lt;li>&lt;code>systemd&lt;/code> 是 &lt;code>linux&lt;/code> 操作系统的系统和服务管理器。&lt;/li>
&lt;li>&lt;code>systemctl&lt;/code> 是一个自省和控制 &lt;code>systemd&lt;/code> 系统和服务管理器状态的命令(不要与 sysctl 混淆)。&lt;/li>
&lt;li>&lt;code>systemd-analyze&lt;/code> 可用于确定系统启动性能统计数据，并从系统和服务管理器检索其他状态和跟踪信息。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>systemd&lt;/code> 使用 &lt;code>linux&lt;/code> 内核的 &lt;code>cgroups&lt;/code> 子系统而不是使用&lt;code>进程标识符 (PID)&lt;/code> 来跟踪进程；因此，守护进程无法逃离 &lt;code>systemd&lt;/code>，即使是通过 &lt;code>double-forking&lt;/code> 也不行。&lt;br>
&lt;code>systemd&lt;/code> 不仅使用 &lt;code>cgroup&lt;/code>，还使用 &lt;code>systemd-nspawn&lt;/code> 和 &lt;code>machinectl&lt;/code> 来扩充它们，这两个实用程序有助于创建和管理 &lt;code>linux&lt;/code> 容器。&lt;br>
从&lt;code>版本 205&lt;/code> 开始，&lt;code>systemd&lt;/code> 还提供 &lt;code>ControlGroupInterface&lt;/code>，它是 &lt;code>linux&lt;/code> 内核 &lt;code>cgroups&lt;/code> 的 &lt;code>API&lt;/code>。&lt;code>linux&lt;/code> 内核 &lt;code>linux&lt;/code> 适用于支持 &lt;code>kernfs&lt;/code>，并且正在被修改以支持统一的层次结构。&lt;/p>
&lt;p>&lt;strong>统一层次的 &lt;code>cgroup&lt;/code> 将由 &lt;code>systemd&lt;/code> 通过 &lt;code>systemd-nspawn&lt;/code> 独占访问&lt;/strong>&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220605-1627.png" alt="systemd-nspawn">&lt;/p>
&lt;h3 id="-辅助组件"># 辅助组件&lt;/h3>
&lt;p>除了提供 &lt;code>linux&lt;/code> 初始化系统的主要目的之外，&lt;code>systemd&lt;/code> 套件还可以提供其他功能，包括以下组件：&lt;br>
&lt;strong>journald&lt;/strong>&lt;br>
&lt;code>systemd-journald&lt;/code> 是一个负责事件记录的守护进程，使用 &lt;code>append-only&lt;/code> 的二进制文件作为其日志文件。系统管理员可以选择是否使用 &lt;code>systemd-journald&lt;/code>、&lt;code>syslog-ng&lt;/code> 或 &lt;code>rsyslog&lt;/code> 记录系统事件。&lt;br>
&lt;strong>libudev&lt;/strong>&lt;br>
&lt;code>libudev&lt;/code> 是使用 &lt;code>udev&lt;/code> 的标准库，它允许第三方应用程序查询 &lt;code>udev&lt;/code> 资源。&lt;br>
&lt;strong>localed&lt;/strong>&lt;br>
负责系统语言环境和键盘布局&lt;br>
&lt;strong>logind&lt;/strong>&lt;br>
&lt;code>systemd-logind&lt;/code> 是一个以各种方式管理用户登录和席位的守护进程。它是一个集成的登录管理器，提供&lt;code>多席位（multiseat）&lt;/code>改进并取代不再维护的 &lt;code>ConsoleKit&lt;/code>。对于 &lt;code>X11&lt;/code> 显示管理器，切换到 &lt;code>logind&lt;/code> 需要很少的移植。 &lt;code>logind&lt;/code> 集成在 &lt;code>systemd version 30&lt;/code> 中。&lt;br>
&lt;strong>networkd&lt;/strong>&lt;br>
&lt;code>networkd&lt;/code> 是处理网络接口配置的守护进程；在 &lt;code>verion 209&lt;/code> 中，&lt;code>networkd&lt;/code> 首次被集成到&lt;code>systemd&lt;/code>，支持场景较少，仅限于静态分配的地址和对桥接配置的基本支持。&lt;code>2014 年 7 月&lt;/code>，&lt;code>systemd 版本 215&lt;/code> 发布，增加了 &lt;code>IPv4&lt;/code> 主机的 &lt;code>DHCP&lt;/code> 服务器和 &lt;code>VXLAN&lt;/code> 支持等新功能。&lt;code>networkctl&lt;/code> 可用于查看 &lt;code>systemd-networkd&lt;/code> 所看到的网络链接的状态。 必须在 /lib/systemd/network/ 下添加新接口的配置作为以 .network 扩展名结尾的新文件。要添加新接口的配置，必须在 &lt;code>/lib/systemd/network/&lt;/code> 新增以 &lt;code>.network&lt;/code> 扩展名结尾的新文件。&lt;br>
&lt;strong>resolved&lt;/strong>&lt;br>
&lt;strong>systemd-boot&lt;/strong>&lt;br>
&lt;code>systemd-boot&lt;/code> 是一个引导管理器，以前称为 &lt;code>gummiboot&lt;/code>。 &lt;code>Kay Sievers&lt;/code> 将其合并到 &lt;code>systemd with rev 220&lt;/code>。&lt;br>
&lt;strong>timedated&lt;/strong>&lt;br>
&lt;code>systemd-timedated&lt;/code> 是一个守护进程，可用于控制与时间相关的设置，例如系统时间、系统时区或 &lt;code>UTC&lt;/code> 和本地时区系统时钟之间的选择。&lt;code>timedated&lt;/code> 可以通过 &lt;code>D-Bus&lt;/code> 访问，在&lt;code>systemd 版本 30&lt;/code> 中被集成。&lt;br>
&lt;strong>timesyncd&lt;/strong>&lt;br>
&lt;strong>tmpfiles&lt;/strong>&lt;br>
&lt;code>systemd-tmpfiles&lt;/code> 是一个负责创建和清理临时文件和目录的实用程序。它通常在启动时运行一次，然后以指定的时间间隔运行。&lt;br>
&lt;strong>udevd&lt;/strong>&lt;br>
&lt;code>udev&lt;/code> 是 &lt;code>linux&lt;/code> 内核的设备管理器，它处理 &lt;code>/dev&lt;/code> 目录和添加/删除设备时的所有用户空间操作，包括固件加载。&lt;code>2012 年 4 月&lt;/code>，&lt;code>udev&lt;/code> 的源代码树被合并到 &lt;code>systemd&lt;/code> 源代码树中。
&lt;code>2014 年 5 月 29 日&lt;/code>，通过 &lt;code>udev&lt;/code> 加载固件的支持从 &lt;code>systemd&lt;/code> 中删除，应该由内核应该负责加载固件。&lt;/p>
&lt;h3 id="-systemd的配置"># systemd的配置&lt;/h3>
&lt;p>&lt;code>systemd&lt;/code> 仅通过纯文本文件进行配置。&lt;br>
&lt;code>systemd&lt;/code> 将每个守护进程的初始化指令记录在使用声明性语言的配置文件（称为&amp;quot;单元文件(unit file)&amp;quot;）中，替换传统上使用的每个守护进程启动 &lt;code>shell&lt;/code> 脚本。配置文件支持 &lt;code>crudini&lt;/code> 配置。&lt;/p>
&lt;p>&lt;code>单元文件（unit file）&lt;/code> 类型包括：&lt;/p>
&lt;ul>
&lt;li>&lt;code>.service&lt;/code>&lt;/li>
&lt;li>&lt;code>.socket&lt;/code>&lt;/li>
&lt;li>&lt;code>.device&lt;/code> (由 &lt;code>systemd&lt;/code> 自动启动)&lt;/li>
&lt;li>&lt;code>.mount&lt;/code>&lt;/li>
&lt;li>&lt;code>.automount&lt;/code>&lt;/li>
&lt;li>&lt;code>.swap&lt;/code>&lt;/li>
&lt;li>&lt;code>.target&lt;/code>&lt;/li>
&lt;li>&lt;code>.path&lt;/code>&lt;/li>
&lt;li>&lt;code>.timer&lt;/code> (可以用作类似 &lt;code>cron&lt;/code> 的作业调度程序)&lt;/li>
&lt;li>&lt;code>.snapshot&lt;/code>&lt;/li>
&lt;li>&lt;code>.slice&lt;/code> (用于对流程和资源进行分组和管理)&lt;/li>
&lt;li>&lt;code>.scope&lt;/code> (用于对工作进程进行分组，不打算通过单元文件进行配置)&lt;/li>
&lt;/ul>
&lt;h2 id="-其他"># 其他&lt;/h2>
&lt;h3 id="-参考内容"># 参考内容&lt;/h3>
&lt;p>&lt;strong>本文内容参考自：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Systemd">systemd&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/boot_process/" term="boot_process" label="boot_process"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/systemd/" term="systemd" label="systemd"/><category scheme="https://ruisum.top/tags/boot/" term="boot" label="boot"/></entry><entry><title type="text">grub2介绍</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/boot_process/grub2%E4%BB%8B%E7%BB%8D/"/><id>https://ruisum.top/tech/basics/boot_process/grub2%E4%BB%8B%E7%BB%8D/</id><updated>2022-06-02T22:56:20+08:00</updated><published>2022-06-02T22:56:20+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html"># 说明 bootloader 是计算机启动时运行的第一个软件程序，它负责加载并将控制权转移到操作系统内核，然后内核初始化操作系统的其余部分。 # 什么是 GRUB GNU GRUB 是一个非常强大的 bootloader（引导加载程序），它可以加载各种各样的开源操作系统，以及链式加载专有操作系统（如：windows） GRUB 旨在解决引导个人计算机的复杂性。……</summary><content type="html">&lt;h2 id="-说明"># 说明&lt;/h2>
&lt;p>&lt;code>bootloader&lt;/code> 是计算机启动时运行的第一个软件程序，它负责加载并将控制权转移到操作系统内核，然后内核初始化操作系统的其余部分。&lt;/p>
&lt;h3 id="-什么是-grub"># 什么是 GRUB&lt;/h3>
&lt;p>&lt;code>GNU GRUB&lt;/code> 是一个非常强大的 &lt;code>bootloader（引导加载程序）&lt;/code>，它可以加载各种各样的开源操作系统，以及链式加载专有操作系统（如：&lt;code>windows&lt;/code>）&lt;/p>
&lt;p>&lt;code>GRUB&lt;/code> 旨在解决引导个人计算机的复杂性。&lt;code>GRUB&lt;/code> 的重要特性之一是灵活性，&lt;code>GRUB&lt;/code> 了解文件系统和内核可执行格式，因此可以按照自己喜欢的方式加载任意操作系统，而无需记录内核在磁盘上的物理位置; 只需指定内核的文件名以及内核所在的驱动器和分区即可加载内核。&lt;/p>
&lt;p>使用 &lt;code>GRUB&lt;/code> 引导时，可以使用命令行界面或菜单界面的方式：&lt;/p>
&lt;ul>
&lt;li>使用命令行界面，可以手动键入内核的驱动器规格和文件名。&lt;/li>
&lt;li>选择菜单界面，可以使用箭头键选择一个操作系统。
&lt;ul>
&lt;li>该菜单基于预先准备的配置文件。&lt;/li>
&lt;li>在菜单中，可以切换到命令行模式，反之亦然。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="-grub2-和-grub-的异同"># GRUB2 和 GRUB 的异同&lt;/h3>
&lt;p>&lt;code>GRUB2&lt;/code> 是对 &lt;code>GRUB&lt;/code> 的重写，它与以前的版本（现在称为 &lt;code>GRUB Legacy&lt;/code>）的部分不同点如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>GRUB2&lt;/code> 配置文件不同，使用 &lt;code>grub.cfg&lt;/code> 而不是 &lt;code>GRUB&lt;/code> 的 &lt;code>menu.lst (grub.conf的软链接)&lt;/code>或 &lt;code>grub.conf&lt;/code>&lt;/li>
&lt;li>&lt;code>GRUB2&lt;/code> 设备名称中的分区号现在从 &lt;code>1&lt;/code> 开始，而不是 &lt;code>0&lt;/code>。&lt;/li>
&lt;li>&lt;code>GRUB2&lt;/code> 增添了许多语法，更接近于脚本语言，支持变量、条件判断、循环等。&lt;/li>
&lt;li>&lt;code>GRUB2&lt;/code> 使用 &lt;code>img&lt;/code> 文件，不再使用 &lt;code>GRUB&lt;/code> 中的 &lt;code>stage1、stage1.5和stage2&lt;/code>。&lt;/li>
&lt;/ul>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>更详细的内容可以查看：&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/Changes-from-GRUB-Legacy.html#Changes-from-GRUB-Legacy">Differences from previous versions&lt;/a>&lt;/p>
&lt;/div>
&lt;h2 id="-grub2-使用"># GRUB2 使用&lt;/h2>
&lt;h3 id="-grub2-的命名约定"># GRUB2 的命名约定&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>fd0&lt;span class="o">)&lt;/span> ：表示第一块软盘
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>hd0,msdos2&lt;span class="o">)&lt;/span> ：表示第一块硬盘的第二个mbr分区。grub2中分区从1开始编号，传统的grub是从0开始编号的
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>hd0,msdos5&lt;span class="o">)&lt;/span> ：表示第一块硬盘的第一个逻辑分区
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>hd0,gpt1&lt;span class="o">)&lt;/span> ：表示第一块硬盘的第一个gpt分区
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/boot/vmlinuz ：相对路径，基于根目录，表示根目录下的boot目录下的vmlinuz，
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ：如果设置了根目录变量root为&lt;span class="o">(&lt;/span>hd0,msdos1&lt;span class="o">)&lt;/span>，则表示&lt;span class="o">(&lt;/span>hd0,msdos1&lt;span class="o">)&lt;/span>/boot/vmlinuz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>hd0,msdos1&lt;span class="o">)&lt;/span>/boot/vmlinuz：绝对路径，表示第一硬盘第一分区的boot目录下的vmlinuz文件
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>更详细的内容可以查看：&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/Naming-convention.html#Naming-convention">Naming convention&lt;/a>&lt;/p>
&lt;/div>
&lt;h3 id="-如何引导操作系统"># 如何引导操作系统&lt;/h3>
&lt;p>&lt;code>GRUB&lt;/code> 有两种不同的引导方法。 一个是直接加载操作系统，另一种是链式加载另一个引导加载程序，然后再加载操作系统。&lt;br>
一般使用第一种方式，因为不需要安装或维护其他引导加载程序，而且 GRUB 足够灵活，可以从任意磁盘/分区加载操作系统，能够满足绝大部分场景。&lt;br>
有时需要后者，因为 &lt;code>GRUB&lt;/code> 本身并不支持所有现有的操作系统。&lt;/p>
&lt;ul>
&lt;li>&lt;code>直接引导(direct-load)&lt;/code>：直接通过默认的 &lt;code>grub2 boot loader&lt;/code> 来引导写在默认配置文件中的操作系统。&lt;/li>
&lt;li>&lt;code>链式引导(chain-load)&lt;/code>：使用默认 &lt;code>grub2 boot loader&lt;/code> 链式引导另一个&lt;code>bootloader&lt;/code>，该 &lt;code>bootloader&lt;/code> 将引导对应的操作系统。&lt;/li>
&lt;/ul>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>更详细的内容可以查看：&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/General-boot-methods.html#General-boot-methods">How to boot operating systems&lt;/a>&lt;/p>
&lt;/div>
&lt;p>&lt;strong>GRUB2 配置文件&lt;/strong>&lt;br>
&lt;code>GRUB2&lt;/code> 的配置文件（该文件包含菜单信息）：&lt;/p>
&lt;ul>
&lt;li>传统的基于 &lt;code>BIOS&lt;/code> 的机器： &lt;code>/boot/grub2/grub.cfg&lt;/code> 文件&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 机器： &lt;code>/boot/efi/EFI/redhat/grub.cfg&lt;/code> 文件&lt;/li>
&lt;/ul>
&lt;p>&lt;code>GRUB2&lt;/code> 的配置文件 &lt;code>grub.cfg&lt;/code> 是在系统安装期间，或通过调用 /usr/sbin/grub2-mkconfig 实用程序生成的，并且在每次安装新内核时由 &lt;code>grubby&lt;/code> 自动更新。&lt;/p>
&lt;blockquote>
&lt;p>grubby命令的使用可查看：&lt;a href="https://www.ruisum.top/tech/basics/grubby%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/">grubby命令的使用&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>当使用 &lt;code>grub2-mkconfig&lt;/code> 手动重新生成时，该文件是根据位于 &lt;code>/etc/grub.d/&lt;/code> 中的模板文件和 &lt;code>/etc/default/grub&lt;/code> 文件中的自定义设置生成的。每次使用 &lt;code>grub2-mkconfig&lt;/code> 重新生成文件时，对 &lt;code>grub.cfg&lt;/code> 的编辑都将丢失，因此要特别注意管控对 &lt;code>/etc/default/grub&lt;/code> 的任何更改。&lt;/p>
&lt;p>&lt;strong>GRUB2 配置文件的修改&lt;/strong>&lt;br>
对于 &lt;code>grub.cfg&lt;/code> 的正常操作，例如删除和添加新内核，应该使用 &lt;code>grubby&lt;/code> 工具完成，对于脚本，使用 &lt;code>new-kernel-pkg&lt;/code> 工具。&lt;/p>
&lt;h2 id="-其他"># 其他&lt;/h2>
&lt;h3 id="-参考内容"># 参考内容&lt;/h3>
&lt;p>本文内容参考自：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/Changes-from-GRUB-Legacy.html#Changes-from-GRUB-Legacy">Changes-from-GRUB-Legacy&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/Images.html#Images">grub images&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/f-ck-need-u/p/7094693.html">命名习惯和文件路径表示方式&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/software/grub/manual/grub/html_node/index.html#SEC_Contents">GNU GRUB手册&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.gnu.org/manual/manual.html">GUN 手册&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/boot_process/" term="boot_process" label="boot_process"/><category scheme="https://ruisum.top/tags/grub2/" term="grub2" label="grub2"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/grubby/" term="grubby" label="grubby"/></entry><entry><title type="text">uefi/bios，gpt/mbr的一些概念</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/boot_process/uefibiosgptmbr%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/"/><id>https://ruisum.top/tech/basics/boot_process/uefibiosgptmbr%E7%9A%84%E4%B8%80%E4%BA%9B%E6%A6%82%E5%BF%B5/</id><updated>2022-05-25T23:03:13+08:00</updated><published>2022-05-25T23:03:13+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">介绍uefi和bios的差别，gpt和mbr的差别，以及他们互相之间的关系</summary><content type="html">&lt;h2 id="-说明"># 说明&lt;/h2>
&lt;p>不清楚 &lt;code>legacy bios&lt;/code> 和 &lt;code>uefi&lt;/code>，&lt;code>gpt&lt;/code> 和 &lt;code>mbr&lt;/code> 的区别，理一下他们的来源和互相之间的关系&lt;/p>
&lt;h2 id="-bios-和-uefi"># BIOS 和 UEFI&lt;/h2>
&lt;p>&lt;code>BIOS&lt;/code> 和 &lt;code>UEFI&lt;/code> 是计算机的两个固件接口，它们充当操作系统和计算机固件之间的解释器。这两个接口都用于在计算机启动时初始化硬件组件并启动存储在硬盘驱动器上的操作系统。&lt;/p>
&lt;ul>
&lt;li>&lt;code>BIOS&lt;/code> 通过读取硬盘驱动器的第一个扇区来工作，该扇区存储了要初始化的下一个设备地址或要执行的代码。BIOS 还会选择启动操作系统时需要初始化的引导设备。&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 执行相同的任务，但实现略有不同。它将有关初始化和启动的所有信息存储在 &lt;code>.efi&lt;/code> 文件而不是固件中。此文件存储在名为 &lt;code>ESP&lt;/code> 的特殊分区内。ESP 分区还包含计算机上安装的操作系统的引导加载程序。&lt;/li>
&lt;/ul>
&lt;h3 id="-bios"># BIOS&lt;/h3>
&lt;p>&lt;strong>什么是 BIOS&lt;/strong>&lt;br>
&lt;code>BIOS&lt;/code> 是 &lt;code>Basic Input/Output System&lt;/code> 的简称，也称为&lt;code>系统 BIOS&lt;/code>、&lt;code>ROM BIOS&lt;/code> 或 &lt;code>PC BIOS&lt;/code>。它是嵌入在计算机主板芯片上的固件。&lt;br>
&lt;code>BIOS&lt;/code> 固件预装在 &lt;code>PC&lt;/code> 的主板上; 它是一个非易失性固件，这意味着它的设置即使在断电后也不会消失或改变。&lt;/p>
&lt;p>&lt;strong>BIOS 怎么工作&lt;/strong>&lt;br>
当计算机启动时，&lt;code>BIOS&lt;/code> 会加载并唤醒计算机的硬件组件，确保它们正常工作，然后加载引导加载程序来初始化已安装的操作系统。&lt;br>
&lt;code>BIOS&lt;/code> 必须在 &lt;code>16&lt;/code> 位处理器模式下运行，并且只有 &lt;code>1 MB&lt;/code> 的空间可以执行。在这种情况下，&lt;code>BIOS&lt;/code> 无法同时初始化多个硬件设备，从而导致初始化所有硬件接口和设备时时间更长，启动过程变慢。&lt;/p>
&lt;p>&lt;strong>选择 BIOS 的场景&lt;/strong>&lt;br>
用户选择 &lt;code>Legacy BIOS&lt;/code> 而不是 &lt;code>UEFI&lt;/code> 的一些可能的原因：&lt;/p>
&lt;ul>
&lt;li>如果不需要对计算机的运行方式进行精细控制，&lt;code>BIOS&lt;/code> 是理想的选择。&lt;/li>
&lt;li>如果只有小型驱动器或分区，&lt;code>BIOS&lt;/code> 也足够了。尽管许多较新的硬盘驱动器超过了 &lt;code>BIOS&lt;/code> 的 &lt;code>2 TB&lt;/code> 限制，但并非每个用户都需要这么大的空间。&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 的&lt;code>安全启动（secure boot）&lt;/code>功能可能会导致 &lt;code>OEM&lt;/code> 制造商阻止用户在其硬件上安装其他操作系统。如果使用 &lt;code>BIOS&lt;/code>，则可以回避这个问题。&lt;/li>
&lt;li>&lt;code>BIOS&lt;/code> 提供对接口中硬件信息的访问，但并非所有的 &lt;code>UEFI&lt;/code> 实现都可以这样做。可以在操作系统中访问硬件规格。&lt;/li>
&lt;/ul>
&lt;div class="notice tip" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/>&lt;/svg>&lt;/div>
&lt;p>一些计算机用户使用 UEFI 启动，但仍将其称为&amp;quot;BIOS&amp;quot;，这容易让人感到困惑。即使 PC 使用术语 &amp;quot;BIOS&amp;quot;，如今购买的大多数现代 PC 都使用 UEFI 固件而不是 BIOS。为了区分 UEFI 和 BIOS，也有人将 UEFI 固件称为 UEFI BIOS，而 BIOS 则称为 Legacy BIOS 或传统 BIOS。&lt;/p>
&lt;/div>
&lt;h3 id="-uefi"># UEFI&lt;/h3>
&lt;p>&lt;strong>什么是 UEFI&lt;/strong>&lt;br>
&lt;code>UEFI（Unified Extensible Firmware Interface）&lt;/code>：统一的可扩展固件接口，它是 &lt;code>EFI（Extensible Firmware Interface）&lt;/code> 的逻辑继承。&lt;/p>
&lt;p>&lt;strong>UEFI 发展历史&lt;/strong>&lt;br>
在90年代中期，英特尔意识到 &lt;code>IBM BIOS（Basic Input/Output System（基本输入/输出系统））&lt;/code> 样式固件接口有其固有的限制。这些限制并不影响普通用户，但它们使生产高性能服务器变得困难。于是，英特尔于1998年开始开发 &lt;code>EFI&lt;/code> 规范。2005年，英特尔停止了 &lt;code>EFI&lt;/code> 规范的开发，并在维持所有权的同时将其捐赠给了 &lt;code>Unified EFI Forum&lt;/code>。英特尔继续向供应商许可 &lt;code>EFI&lt;/code> 规范，但 &lt;code>UEFI&lt;/code> 规范归论坛所有。&lt;/p>
&lt;p>&lt;strong>UEFI 的优势&lt;/strong>&lt;br>
&lt;code>UEFI&lt;/code> 的设计目标是在未来完全替换传统 &lt;code>BIOS&lt;/code>，其具有许多传统 &lt;code>BIOS&lt;/code> 无法实现的新特性和优势，部分突出的优势如下：&lt;/p>
&lt;ul>
&lt;li>模块化设计&lt;/li>
&lt;li>同 &lt;code>CPU&lt;/code> 架构解偶（&lt;code>Itanium, x86, x86-64, ARM Arch32, Arm Arch64&lt;/code>）&lt;/li>
&lt;li>兼容 &lt;code>BIOS&lt;/code> 接口和传统启动方式&lt;/li>
&lt;li>从大于 &lt;code>2TiB&lt;/code> 的磁盘引导的能力（注意&lt;code>2TB&lt;/code>和&lt;code>2TiB&lt;/code>之间的差异）&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 支持超过 &lt;code>4&lt;/code> 个具有 &lt;code>GUID&lt;/code> 分区表的主分区。&lt;/li>
&lt;li>使用 &lt;code>UEFI&lt;/code> 固件的计算机的启动过程比 &lt;code>BIOS&lt;/code> 更快，&lt;code>UEFI&lt;/code> 中的各种优化和增强功能可以让系统更快地启动。&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 支持安全启动&lt;code>（secure boot）&lt;/code>，这意味着可以检查操作系统的有效性，以确保没有恶意软件篡改启动过程。&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 支持 &lt;code>UEFI&lt;/code> 固件本身的联网功能，有助于远程故障排除和 &lt;code>UEFI&lt;/code> 配置。&lt;/li>
&lt;li>&lt;code>UEFI&lt;/code> 具有更简单的图形用户界面，并且还具有比传统 &lt;code>BIOS&lt;/code> 更丰富的设置菜单。&lt;/li>
&lt;/ul>
&lt;p>&lt;code>EFI&lt;/code> 引导管理器和 &lt;code>EFI&lt;/code> 驱动程序之间的交互：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1516.png" alt="efi">&lt;/p>
&lt;div class="notice warning" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>并非所有计算机或设备都支持 &lt;code>UEFI&lt;/code>。要使用 &lt;code>UEFI&lt;/code> 固件，磁盘上的硬件必须支持 &lt;code>UEFI&lt;/code>。此外，系统盘需要是 &lt;code>GPT&lt;/code> 盘。&lt;/p>
&lt;/div>
&lt;p>&lt;strong>ESP 特殊分区&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>UEFI&lt;/code> 将有关初始化和启动的所有信息存储在 &lt;code>.efi&lt;/code> 文件中，该文件存储在称为 &lt;code>EFI 系统分区 (ESP(EFI System Partition))&lt;/code> 的特殊分区上。&lt;/li>
&lt;li>&lt;code>ESP&lt;/code> 分区包含计算机上安装的操作系统的引导加载程序。&lt;/li>
&lt;li>&lt;code>ESP&lt;/code> 分区使用 &lt;code>FAT32&lt;/code> 格式进行格式化，具有特定的分区类型代码 &lt;code>EF00&lt;/code>，而不是通常用于 &lt;code>FAT32&lt;/code> 驱动器的 &lt;code>0x0C&lt;/code>。&lt;/li>
&lt;li>许多操作系统会因为它被视为系统卷而将其隐藏。&lt;/li>
&lt;li>在启动时，主板上的 &lt;code>UEFI&lt;/code> 兼容固件会扫描所有磁盘以查找 &lt;code>ESP&lt;/code>，并在其中查找这些可执行文件，在此过程中，&lt;code>MBR&lt;/code> 的硬编码引导范例不再适用。&lt;/li>
&lt;li>正是因为有了这个分区，&lt;code>UEFI&lt;/code> 可以直接启动操作系统，省去 &lt;code>BIOS&lt;/code> 自检过程，这也是 &lt;code>UEFI&lt;/code> 启动速度更快的一个重要原因。&lt;/li>
&lt;/ul>
&lt;h2 id="-mbr-和-gpt"># MBR 和 GPT&lt;/h2>
&lt;p>&lt;code>MBR（主引导记录（Master Boot Record）)&lt;/code> 和 &lt;code>GPT（GUID 分区表（GUID Partition Table））&lt;/code> 是各种硬盘驱动器的两种分区方案，其中 &lt;code>GPT&lt;/code> 是较新的标准。对于这两种分区方案，引导结构和数据处理方式都是不同的，速度不同，使用要求也不同。&lt;/p>
&lt;h3 id="-mbr"># MBR&lt;/h3>
&lt;p>&lt;strong>什么是 MBR&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>MBR&lt;/code> 代表的是 &lt;code>Master Boot Record&lt;/code>，主引导分区的意思。&lt;/li>
&lt;li>&lt;code>MBR&lt;/code> 只是硬盘的一部分，在它上面可以找到有关磁盘的所有信息;。&lt;/li>
&lt;li>&lt;code>MBR&lt;/code> 存储在&lt;code>引导扇区（boot sector）&lt;/code>，它包含了分区类型的详细信息以及引导计算机操作系统时所需的代码。&lt;/li>
&lt;li>&lt;code>MBR&lt;/code> 可以有很多不同的形式，但所有这些形式的共同点是它们都具有 &lt;code>512&lt;/code> 字节的大小，都存储了分区表和引导代码（通常称为引导加载程序）。&lt;/li>
&lt;/ul>
&lt;div class="notice warning" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>1.MBR 不在分区中；它位于设备的第一个扇区，在第一个分区之前。&lt;br>2.存在于无分区设备或单个分区内的引导扇区称为卷引导记录 &lt;code>(VBR(volume boot record))&lt;/code>。&lt;/p>
&lt;/div>
&lt;p>&lt;strong>MBR 的特点&lt;/strong>&lt;br>
如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>MBR&lt;/code> 磁盘上可能的最大主分区数为 &lt;code>4&lt;/code>，其中每个分区需要 &lt;code>16&lt;/code> 字节空间，这使得所有分区总共需要 &lt;code>64&lt;/code> 字节空间。&lt;/li>
&lt;li>&lt;code>MBR&lt;/code> 分区可以分为三种类型——主分区、扩展分区和逻辑分区。如上所述，它只能有 4 个主分区。扩展分区和逻辑分区克服了这一限制。&lt;/li>
&lt;li>&lt;code>MBR&lt;/code> 中的分区表仅包含有关主分区和扩展分区的详细信息。此外，重要的是要了解数据不能直接保存在扩展分区上，因此需要创建逻辑分区。&lt;/li>
&lt;li>一些最新类型的 &lt;code>MBR&lt;/code> 还可能添加了磁盘签名、时间戳和有关磁盘格式化的详细信息。&lt;/li>
&lt;li>与可以支持四个分区的旧版本的 &lt;code>MBR&lt;/code> 不同，最新版本能够支持多达 &lt;code>16&lt;/code> 个分区。由于所有 &lt;code>MBR&lt;/code> 的大小不超过 &lt;code>512&lt;/code> 字节，因此使用 &lt;code>MBR&lt;/code> 格式化的磁盘有 &lt;code>2TB&lt;/code> 的可用磁盘空间上限（有些硬盘也有 &lt;code>1024&lt;/code> 字节或 &lt;code>2048&lt;/code> 字节扇区，但这会导致磁盘速度出现问题，因此不是明智的选择）。&lt;/li>
&lt;li>它兼容所有版本的 &lt;code>Windows（32 位和 64 位）&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>MBR 构成&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>传统&lt;code>MBR&lt;/code>构成图
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220526-2335.png" alt="classic MBR">&lt;/li>
&lt;li>以&lt;code>windows&lt;/code>上的&lt;code>MBR&lt;/code>为例说明扩展分区
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220528-1203.png" alt="扩展分区">&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>MBR 的限制&lt;/strong>
如下：&lt;/p>
&lt;ul>
&lt;li>&lt;code>MBR&lt;/code> 风格的分区只能使用不超过 &lt;code>2TB&lt;/code> 的磁盘空间。&lt;/li>
&lt;li>它最多只能有 &lt;code>4&lt;/code> 个主分区。如果创建主分区后有未分配的空间，我们可以通过创建扩展分区来使其可用，其中可以创建各种逻辑分区。&lt;/li>
&lt;/ul>
&lt;p>由于 &lt;code>MBR&lt;/code> 的这些限制，用户通常会选择不同的分区样式。除了 &lt;code>MBR&lt;/code> 之外，最常见的分区样式之一是 &lt;code>GPT&lt;/code>。&lt;/p>
&lt;h3 id="-gpt"># GPT&lt;/h3>
&lt;p>&lt;strong>GPT 的来源&lt;/strong>&lt;br>
同样的，英特尔对基于 &lt;code>BIOS&lt;/code> 和 &lt;code>MBR&lt;/code> 的引导模式不满意，于是开发了 &lt;code>GPT&lt;/code> 规范。&lt;/p>
&lt;p>&lt;strong>什么是 GPT&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>GPT&lt;/code> 代表的是 &lt;code>GUID（全局唯一标识符（globally unique identifier）） Partition Table&lt;/code>，&lt;code>GUID分区表&lt;/code>的意思。&lt;/li>
&lt;li>&lt;code>GPT&lt;/code> 是最新的磁盘分区方式，被称为 &lt;code>MBR&lt;/code> 的继承者。&lt;/li>
&lt;li>&lt;code>GPT&lt;/code> 在整个驱动器上维护有关分区组织和操作系统启动代码的数据。这样可以确保在任何分区损坏或删除的情况下，仍然可以检索数据，并且引导过程不会出现问题。这也是 GPT 优于 MBR 的原因之一。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>GPT 构成&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>纵向分布视图
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220526-2341.png" alt="GPT 构成1">&lt;/li>
&lt;li>横向视图
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220528-1212.png" alt="GPT 构成2">&lt;/li>
&lt;/ul>
&lt;p>通过以上图片，我们可以看到GPT磁盘分为三个部分：&lt;/p>
&lt;ul>
&lt;li>&lt;code>主分区表（Primary Partition Table）&lt;/code>：这是保护 MBR、GPT 标头分区和分区表所在的位置。&lt;/li>
&lt;li>&lt;code>普通数据分区（Normal Data Partition）&lt;/code>：这是用于存储个人数据的位置。&lt;/li>
&lt;li>&lt;code>备份分区表（Back up Partition Table）&lt;/code>：此位置用于存储 GPT 标头和分区表的备份数据。这在主分区表损坏的情况下很有用。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>GPT 的特点&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>与 &lt;code>MBR&lt;/code> 相比，&lt;code>GPT&lt;/code> 磁盘提供了更多的存储空间。用户可以创建多个分区。 &lt;code>GPT&lt;/code> 磁盘系统可以创建多达 &lt;code>128&lt;/code> 个分区。&lt;/li>
&lt;li>&lt;code>GPT&lt;/code> 格式的磁盘分区，分区表数据恢复更容易。&lt;/li>
&lt;li>&lt;code>GPT&lt;/code> 可以运行检查以确保数据安全。它使用 &lt;code>CRC&lt;/code> 值来检查数据的安全性。如果数据损坏，它可以检测损坏并尝试从磁盘上的其他位置检索损坏的数据。与 &lt;code>MBR&lt;/code> 相比，这使得 &lt;code>GPT&lt;/code> 成为更可靠的选择。&lt;/li>
&lt;li>&lt;code>GPT&lt;/code> 中包含的一项非常有趣的功能称为 &lt;code>保护性MBR(Protective MBR)&lt;/code>。此 &lt;code>MBR&lt;/code> 仅考虑整个驱动器上的一个分区。在这种情况下，当用户尝试借助旧工具管理 &lt;code>GPT&lt;/code> 时，该工具将读取分布在驱动器上的一个分区。这是保护性 MBR 确保旧工具不会认为 &lt;code>GPT&lt;/code> 驱动器没有分区，并防止旧工具使用新 &lt;code>MBR&lt;/code> 对 &lt;code>GPT&lt;/code> 数据造成任何损坏。保护性 &lt;code>MBR&lt;/code> 保护 &lt;code>GPT&lt;/code> 数据，使其不会被删除。&lt;/li>
&lt;li>与将一部分引导代码放入引导扇区的 &lt;code>MBR&lt;/code> 不同，&lt;code>GPT&lt;/code> 将引导代码和分区表分离了。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>GPT 的限制&lt;/strong>&lt;br>
如果必须将 &lt;code>GPT&lt;/code> 用作引导驱动器，则系统需要基于 &lt;code>UEFI&lt;/code>。在基于 &lt;code>BIOS&lt;/code> 的系统中，&lt;code>GPT&lt;/code> 驱动器不能用作主驱动器。&lt;/p>
&lt;p>用户选择 &lt;code>MBR&lt;/code> 而不是 &lt;code>GPT&lt;/code> 的唯一原因是当操作系统安装在基于 &lt;code>BIOS&lt;/code> 的系统上并且驱动器将用作引导驱动器时。&lt;/p>
&lt;h3 id="-gpt-vs-mbr"># GPT vs MBR&lt;/h3>
&lt;p>下面是 MBR 和 GPT 之间的综合比较表，该表突出显示了 MBR 和 GPT 之间的主要区别。 &lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;strong>比较点&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>MBR&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>GPT&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">主分区数&lt;/td>
&lt;td style="text-align:center">&lt;code>4&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>可达到128&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">最大分区大小&lt;/td>
&lt;td style="text-align:center">&lt;code>2 TB&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>18 EB&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">最大硬盘大小&lt;/td>
&lt;td style="text-align:center">&lt;code>2 TB&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>18 EB&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">安全性&lt;/td>
&lt;td style="text-align:center">&lt;code>无&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>CRC 值用于确保数据安全&lt;/code>&lt;br>&lt;code>备份 GUID 分区表&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">适用于&lt;/td>
&lt;td style="text-align:center">&lt;code>BIOS&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>UEFI&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">分区名称&lt;/td>
&lt;td style="text-align:center">&lt;code>存储在分区中&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>具有唯一的 GUID 和 36 个字符的名称&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">支持多重启动&lt;/td>
&lt;td style="text-align:center">&lt;code>支持较差&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>引导加载程序条目位于不同的分区中&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">数据还原&lt;/td>
&lt;td style="text-align:center">&lt;code>较难&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>相对简单&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">数据损坏&lt;/td>
&lt;td style="text-align:center">&lt;code>无法检测数据损坏&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>易于检测&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">分区寻址方法&lt;/td>
&lt;td style="text-align:center">&lt;code>CHS（Cylinder Head Cycle）&lt;/code>或&lt;br>&lt;code>LBS（逻辑块寻址 Logical Block Addressing）&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>LBA 是寻址分区的唯一方法&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">大小&lt;/td>
&lt;td style="text-align:center">&lt;code>512 字节&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>每个 LBA 512 字节&lt;/code>&lt;br>&lt;code>每个分区条目为 128 字节&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">分区类型代码&lt;/td>
&lt;td style="text-align:center">&lt;code>1字节&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>使用 16 字节 GUID&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">稳定性&lt;/td>
&lt;td style="text-align:center">&lt;code>与 GPT 相比，稳定性较差&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>提供更多安全性&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">可启动版本的操作系统&lt;/td>
&lt;td style="text-align:center">&lt;code>引导 32 位操作系统&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>引导 64 位操作系统&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">存储&lt;/td>
&lt;td style="text-align:center">&lt;code>只支持 2TB 的容量&lt;/code>&lt;br>&lt;code>磁盘大小 &amp;gt;2TB 被标记为未分配且无法使用&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>可支持容量达944万TB的磁盘&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">性能&lt;/td>
&lt;td style="text-align:center">&lt;code>与 GPT 相比，性能较低&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>如果支持 UEFI 引导，则提供卓越的性能&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>上表列出了 &lt;code>MBR&lt;/code> 与 &lt;code>GPT&lt;/code> 的性能。基于上述几点，如果支持 &lt;code>UEFI&lt;/code> 引导，&lt;code>GPT&lt;/code> 在性能方面要优越得多。它还提供了稳定性和速度的优势，并增强了硬件的性能，这主要归功于 &lt;code>UEFI&lt;/code> 的结构。&lt;/p>
&lt;h3 id="-一些疑问"># 一些疑问&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>MBR和GPT可以混用吗？&lt;/p>
&lt;blockquote>
&lt;p>只有在支持 &lt;code>GPT&lt;/code> 的系统上才能混用 &lt;code>MBR&lt;/code> 和 &lt;code>GPT&lt;/code>。&lt;br>
&lt;code>GPT&lt;/code> 需要 &lt;code>UEFI&lt;/code> 接口，当系统支持 &lt;code>UEFI&lt;/code> 时，引导分区必须位于 &lt;code>GPT&lt;/code> 磁盘上，这一点很重要;但是，其他硬盘可以是 &lt;code>MBR&lt;/code> 或 &lt;code>GPT&lt;/code>。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>UEFI 可以启动 MBR 吗？&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>UEFI&lt;/code> 可以同时支持 &lt;code>MBR&lt;/code> 和 &lt;code>GPT&lt;/code>。&lt;br>
&lt;code>UEFI&lt;/code> 与 &lt;code>GPT&lt;/code> 配合使用可以很好地摆脱 &lt;code>MBR&lt;/code> 的分区大小和数量限制。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>如果将 GPT 转换为 MBR，是否有可能丢失数据？&lt;/p>
&lt;blockquote>
&lt;p>如果通过工具将磁盘分区格式从 &lt;code>GPT&lt;/code> 转换为 &lt;code>MBR&lt;/code> 或从 &lt;code>MBR&lt;/code> 转换为 &lt;code>GPT&lt;/code>，则需要在转换前删除所有分区。&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="-相关名词解释"># 相关名词解释&lt;/h3>
&lt;p>&lt;strong>Secure Boot&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>安全启动&lt;code>（secure boot）&lt;/code>是什么：是可执行文件的签名，如果签名与已在 &lt;code>UEFI&lt;/code> 固件中注册的签名匹配，则主板将允许它启动; 否则不允许启动。&lt;/li>
&lt;/ul>
&lt;h3 id="-参考内容"># 参考内容&lt;/h3>
&lt;p>&lt;a href="https://fossbytes.com/uefi-bios-gpt-mbr-whats-difference/">https://fossbytes.com/uefi-bios-gpt-mbr-whats-difference/&lt;/a>&lt;br>
&lt;a href="https://www.partitionwizard.com/partitionmagic/uefi-vs-bios.html">https://www.partitionwizard.com/partitionmagic/uefi-vs-bios.html&lt;/a>&lt;br>
&lt;a href="https://www.freecodecamp.org/news/mbr-vs-gpt-whats-the-difference-between-an-mbr-partition-and-a-gpt-partition-solved/">https://www.freecodecamp.org/news/mbr-vs-gpt-whats-the-difference-between-an-mbr-partition-and-a-gpt-partition-solved/&lt;/a>&lt;br>
&lt;a href="https://www.maketecheasier.com/differences-between-uefi-and-bios/#:~:text=BIOS%20uses%20the%20Master%20Boot,physical%20partitions%20to%20only%204.">https://www.maketecheasier.com/differences-between-uefi-and-bios/#:~:text=BIOS%20uses%20the%20Master%20Boot,physical%20partitions%20to%20only%204.&lt;/a>&lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Master_boot_record">https://en.wikipedia.org/wiki/Master_boot_record&lt;/a>&lt;br>
&lt;a href="https://www.partitionwizard.com/partitionmagic/uefi-vs-bios.html">https://www.partitionwizard.com/partitionmagic/uefi-vs-bios.html&lt;/a>&lt;br>
&lt;a href="https://www.softwaretestinghelp.com/mbr-vs-gpt/">https://www.softwaretestinghelp.com/mbr-vs-gpt/&lt;/a>&lt;br>
&lt;a href="https://www.alphr.com/mbr-vs-gpt/#:~:text=The%20main%20difference%20between%20MBR,boot%20off%20of%20GPT%20drives.">https://www.alphr.com/mbr-vs-gpt/#:~:text=The%20main%20difference%20between%20MBR,boot%20off%20of%20GPT%20drives.&lt;/a>&lt;/p></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/boot_process/" term="boot_process" label="boot_process"/><category scheme="https://ruisum.top/tags/uefi/" term="uefi" label="uefi"/><category scheme="https://ruisum.top/tags/bios/" term="bios" label="bios"/><category scheme="https://ruisum.top/tags/gpt/" term="gpt" label="gpt"/><category scheme="https://ruisum.top/tags/mbr/" term="mbr" label="mbr"/></entry><entry><title type="text">linux系统启动流程</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/boot_process/linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/"/><id>https://ruisum.top/tech/basics/boot_process/linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</id><updated>2022-05-25T22:52:46+08:00</updated><published>2022-05-25T22:52:46+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">linux系统的启动流程和各个阶段</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;p>启动 &lt;code>linux&lt;/code> 计算机并使其可用需要分两个步骤：&lt;code>boot（引导）&lt;/code> 和 &lt;code>startup（启动）&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>boot&lt;/code> 流程在计算机开机时开始，在内核初始化和 &lt;code>systemd&lt;/code> 启动时完成。&lt;/li>
&lt;li>&lt;code>startup&lt;/code> 流程在 &lt;code>boot&lt;/code> 流程完成后开始，&lt;code>linux&lt;/code> 计算机进入运行状态时结束。&lt;/li>
&lt;/ul>
&lt;p>linux 引导和启动过程由以下步骤组成：&lt;/p>
&lt;ul>
&lt;li>&lt;code>BIOS/UEFI POST（power-on self-test）&lt;/code>&lt;/li>
&lt;li>&lt;code>boot loader (GRUB/GRUB2)&lt;/code>&lt;/li>
&lt;li>&lt;code>kernel initialization&lt;/code>（内核初始化）&lt;/li>
&lt;li>启动 &lt;code>systemd/init（所有进程的父进程）&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>详细流程如下图：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220529-2243.png" alt="">&lt;/p>
&lt;p>基于 &lt;code>BIOS&lt;/code> 的启动流程：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1442.png" alt="bios">&lt;/p>
&lt;p>基于 &lt;code>UEFI&lt;/code> 的启动流程：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1443.png" alt="uefi">&lt;/p>
&lt;h2 id="biosuefi-post-部分">BIOS/UEFI POST 部分&lt;/h2>
&lt;p>&lt;code>linux&lt;/code> 启动过程的第一步和 &lt;code>linux&lt;/code> 系统无关，这是引导过程的硬件部分，对于任何操作系统都是一样的。当计算机首次通电时，它会运行 &lt;code>POST&lt;/code>（开机自检）。&lt;code>POST&lt;/code> 是 &lt;code>BIOS/UEFI&lt;/code> 的一部分，其任务是确保计算机硬件正常运行。如果 &lt;code>POST&lt;/code> 失败，计算机可能无法使用，因此引导过程不会继续。&lt;/p>
&lt;p>&lt;strong>BIOS&lt;/strong>&lt;br>
&lt;code>BIOS POST&lt;/code> 检查硬件的基本可操作性，然后发出一个 &lt;code>BIOS&lt;/code> 中断 &lt;code>INT 13H&lt;/code>，它可以定位任何连接的可引导设备上的引导扇区。它将找到的包含有效引导记录的第一个引导扇区加载到 &lt;code>RAM&lt;/code> 中，然后将控制权转移到从引导扇区加载的代码。&lt;/p>
&lt;p>&lt;strong>UEFI&lt;/strong>&lt;br>
&lt;code>EFI&lt;/code> 引导过程不引用 &lt;code>MBR&lt;/code> 中的代码，通常也不使用分区引导扇区中的代码。相反，&lt;code>EFI&lt;/code> 加载由 &lt;code>EFI&lt;/code> 的内置引导管理器指定的引导加载程序，此处是 &lt;code>GRUB&lt;/code>。&lt;/p>
&lt;h2 id="grub-部分">GRUB 部分&lt;/h2>
&lt;p>MBR 分区表磁盘：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1120.png" alt="mbr grub">&lt;/p>
&lt;p>GPT 分区表磁盘：&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1054.png" alt="gpt grub">&lt;/p>
&lt;h3 id="grub2">GRUB2&lt;/h3>
&lt;p>&lt;strong>什么是 GRUB2&lt;/strong>&lt;br>
&lt;code>GRUB2&lt;/code> 代表 &lt;code>GRand Unified Bootloader version 2&lt;/code>，它是当前大多数 &lt;code>Linux&lt;/code> 发行版的主要引导加载程序&lt;/p>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>grub2介绍请查看：&lt;a href="https://www.ruisum.top/tech/basics/boot_process/grub2%E4%BB%8B%E7%BB%8D/">grub2介绍&lt;/a>&lt;/p>
&lt;/div>
&lt;h3 id="bios-下-grub-流程">BIOS 下 GRUB 流程&lt;/h3>
&lt;p>任一 &lt;code>GRUB&lt;/code> 的主要功能是将 &lt;code>linux&lt;/code> 内核加载到内存中并运行。两个 &lt;code>GRUB（grub 和 grub2）&lt;/code> 版本的工作方式基本相同，并且具有相同的三个阶段。 虽然官方并没有使用三个阶段来说明 &lt;code>GRUB&lt;/code> 的工作流程，但是这样理解会比较方便。&lt;/p>
&lt;p>&lt;strong>Stage 1&lt;/strong>&lt;br>
如 &lt;code>BIOS/UEFI POST&lt;/code> 部分所述，在 &lt;code>POST&lt;/code> 结束时，&lt;code>BIOS&lt;/code> 在连接的磁盘中搜索引导记录。引导记录通常位于&lt;code>主引导记录 (MBR) &lt;/code>中，它将找到的&lt;span style="border-bottom: #ffdd00 2px solid">
第一个
&lt;/span>记录加载到内存中，然后开始执行开机。&lt;code>引导代码（即 GRUB2 stage 1）&lt;/code>非常小，因为它必须与分区表一起放入硬盘驱动器上的第一个 &lt;code>512&lt;/code> 字节扇区。在经典通用 &lt;code>MBR&lt;/code> 中为实际引导代码分配的空间总量为 &lt;code>446&lt;/code> 字节。阶段 1 的 &lt;code>446&lt;/code> 字节文件名为 &lt;code>boot.img&lt;/code>，不包含单独添加到引导记录的分区表。&lt;/p>
&lt;p>因为引导记录如此之小，写不了多少代码，功能有限。因此 &lt;code>stage 1&lt;/code> 的唯一目的是定位和加载&lt;code>stage 1.5&lt;/code>。为了做到这一点，&lt;code>GRUB&lt;/code> 的 &lt;code>stage 1.5&lt;/code> 必须位于引导记录本身和驱动器上的第一个分区之间的空间中。将 &lt;code>GRUB stage 1.5&lt;/code> 加载到 &lt;code>RAM&lt;/code> 后，&lt;code>stage 1&lt;/code> 将控制权移交给&lt;code>stage 1.5&lt;/code>。&lt;/p>
&lt;p>&lt;strong>Stage 1.5&lt;/strong>&lt;br>
如上所述，&lt;code>GRUB&lt;/code> 的 &lt;code>stage 1.5&lt;/code> 必须位于引导记录本身和磁盘驱动器上的第一个分区之间的空间中。由于技术原因，这个空间在历史上一直未被使用。硬盘驱动器上的第一个分区从扇区 &lt;code>63&lt;/code> 开始，&lt;code>MBR&lt;/code> 在&lt;code>扇区 0&lt;/code>，剩下 &lt;code>62512&lt;/code> 字节扇区（31,744 字节）用于存储 &lt;code>GRUB stage 1.5&lt;/code> 的 &lt;code>core.img&lt;/code> 文件。&lt;code>core.img&lt;/code> 文件是 &lt;code>25,389&lt;/code> 字节，因此在 &lt;code>MBR&lt;/code> 和存储它的第一个磁盘分区之间有足够的空间。&lt;/p>
&lt;p>由于 &lt;code>stage 1.5&lt;/code> 可以容纳更多的代码，它可以有足够的代码来包含一些常见的文件系统驱动程序，例如标准 &lt;code>EXT&lt;/code> 和其他 &lt;code>Linux&lt;/code> 文件系统、&lt;code>FAT&lt;/code> 和 &lt;code>NTFS&lt;/code>。&lt;code>GRUB2 core.img&lt;/code> 比旧的 &lt;code>GRUB1 stage 1.5&lt;/code> 更复杂和更强大。这意味着 &lt;code>GRUB2 stage 2&lt;/code>可以位于标准 &lt;code>EXT&lt;/code> 文件系统上（不能位于lvm逻辑卷上）。所以&lt;code>stage 2&lt;/code>文件的标准位置是在 &lt;code>/boot&lt;/code> 文件系统中，特别是 &lt;code>/boot/grub2&lt;/code>。&lt;/p>
&lt;p>需要特别注意的是，&lt;code>/boot&lt;/code> 目录必须位于 &lt;code>GRUB&lt;/code> 支持的文件系统上，因为并非所有文件系统都是 &lt;code>GRUB&lt;/code> 支持的。&lt;code>stage 1.5&lt;/code> 的功能是从加载文件系统驱动程序开始，以在 &lt;code>/boot&lt;/code> 文件系统中定位 &lt;code>stage 2&lt;/code> 文件并加载所需的驱动程序。&lt;/p>
&lt;p>&lt;code>GRUB2 stage 1.5&lt;/code> 的功能是定位 &lt;code>Linux&lt;/code> 内核并加载到 &lt;code>RAM&lt;/code> 中，并将计算机的控制权交给内核，内核及其相关文件位于 &lt;code>/boot&lt;/code> 目录中。内核文件是可识别的，因为它们都以 &lt;code>vmlinuz&lt;/code> 开头。&lt;/p>
&lt;p>&lt;strong>Stage 2&lt;/strong>&lt;br>
&lt;code>GRUB2 stage 2&lt;/code>将选定的内核加载到内存中，并将计算机的控制权交给内核。&lt;/p>
&lt;h3 id="uefi-下-grub-的流程">UEFI 下 GRUB 的流程&lt;/h3>
&lt;p>/efi/&lt;distro>/grubx64.efi（&lt;code>x86-64 UEFI&lt;/code> 系统）作为文件安装在 &lt;code>EFI 系统分区(ESP)&lt;/code>中，并由固件直接引导，在 &lt;code>MBR 扇区 0&lt;/code> 中没有 &lt;code>boot.img&lt;/code>。此文件类似于 &lt;code>stage1&lt;/code> 和 &lt;code>stage 1.5&lt;/code>。&lt;/p>
&lt;p>对于 &lt;code>x86-64 UEFI&lt;/code> 系统，&lt;code>stage2&lt;/code> 是 &lt;code>/boot/grub/x86_64-efi/normal.mod&lt;/code> 文件和其他 &lt;code>/boot/grub/&lt;/code> 文件。&lt;/p>
&lt;h3 id="加载完-grub-后内容">加载完 GRUB 后内容&lt;/h3>
&lt;p>&lt;strong>菜单选择界面&lt;/strong>&lt;br>
&lt;code>GRUB&lt;/code> 提供一个菜单，用户可以在其中进行选择需要启动的操作系统。 &lt;code>GRUB&lt;/code> 可以配置超时后自动加载指定的操作系统。&lt;/p>
&lt;h2 id="kernel-部分">kernel 部分&lt;/h2>
&lt;p>所有内核都采用自解压压缩格式以节省空间。内核与初始 &lt;code>RAM disk image&lt;/code> 和硬盘驱动器的设备映射一起位于 &lt;code>/boot&lt;/code> 目录中。&lt;/p>
&lt;p>在选定的内核加载到内存并开始执行后，内核首先需要从文件的压缩版本中提取自身，然后才能执行其他工作内容。一旦内核解压了自己，它就会加载 &lt;code>systemd（旧 SysV init 程序的替代品）&lt;/code>，并将控制权交给它。&lt;/p>
&lt;p>到此 &lt;code>boot process&lt;/code>的结束。此时，&lt;code>linux&lt;/code> 内核和 &lt;code>systemd&lt;/code> 正在运行，但无法为用户执行任何任务，因为当前没有任何服务在运行。&lt;/p>
&lt;h2 id="startup-部分">startup 部分&lt;/h2>
&lt;p>&lt;code>startup process&lt;/code> 随着 &lt;code>boot process&lt;/code> 结束而开始，其作用是使 &lt;code>Linux&lt;/code> 计算机进入可用于生产性工作的运行状态。&lt;/p>
&lt;h3 id="systemd">systemd&lt;/h3>
&lt;p>&lt;code>systemd&lt;/code> 是所有进程之母，它负责将 &lt;code>Linux&lt;/code> 主机提升到可以完成生产性工作的状态。&lt;code>systemd&lt;/code> 的功能比旧的 &lt;code>init&lt;/code> 要广泛得多，可以管理运行中的 &lt;code>Linux&lt;/code> 主机的方方面面，包括挂载文件系统、启动和管理使 &lt;code>Linux&lt;/code> 主机高效工作所需的系统服务。&lt;/p>
&lt;p>&lt;code>systemd&lt;/code> 首先挂载 &lt;code>/etc/fstab&lt;/code> 定义的文件系统，可以包括任何交换文件或分区。此时，&lt;code>systemd&lt;/code> 可以访问位于 &lt;code>/etc&lt;/code> 中的配置文件，包括它自己的。&lt;br>
&lt;code>systemd&lt;/code> 使用其配置文件 &lt;code>/etc/systemd/system/default.target&lt;/code> 来确定应将主机引导到哪个状态或目标。&lt;code>default.target&lt;/code> 文件只是指向真正目标文件的符号链接。&lt;/p>
&lt;ul>
&lt;li>对于桌面环境，通常是 &lt;code>graphics.target&lt;/code>，相当于旧 &lt;code>SystemV init&lt;/code> 中的运行&lt;code>runlevel 5&lt;/code>。&lt;/li>
&lt;li>对于服务器，默认值更可能是 &lt;code>multi-user.target&lt;/code>，类似于 &lt;code>SystemV&lt;/code> 中的运行&lt;code>runlevel 3&lt;/code>。&lt;/li>
&lt;li>&lt;code>Emergency.target&lt;/code> 类似于单用户模式。&lt;/li>
&lt;/ul>
&lt;p>请注意，&lt;code>targets &lt;/code>和 &lt;code>service&lt;/code> 都是 &lt;code>systemd units&lt;/code>。&lt;/p>
&lt;p>下面的表 1 是 &lt;code>systemd target&lt;/code> 与旧 &lt;code>SystemV&lt;/code> 启动运行级别的比较。&lt;br>
&lt;code>systemd target alias&lt;/code> 由 &lt;code>systemd&lt;/code> 提供以实现向后兼容性。目标别名允许脚本使用 &lt;code>SystemV&lt;/code> 命令（如 &lt;code>init 3&lt;/code>）来更改运行级别，&lt;code>SystemV&lt;/code> 命令会被转发到 &lt;code>systemd&lt;/code> 进行解释和执行。
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220529-2315.png" alt="sysv和systemd对比">&lt;/p>
&lt;p>每个 &lt;code>target&lt;/code> 都有一组在其配置文件中描述的依赖项，&lt;code>systemd&lt;/code> 会启动所需的依赖项。这些依赖项是在特定功能级别上运行 &lt;code>Linux&lt;/code> 主机所需的服务。当目标配置文件中列出的所有依赖项都加载并运行时，系统就在该&lt;code>目标级别（target level）&lt;/code>运行。&lt;/p>
&lt;p>&lt;code>systemd&lt;/code> 还会查看旧的 &lt;code>SystemV&lt;/code> 初始化目录以查看那里是否存在任何启动文件。如果存在，&lt;code>systemd&lt;/code> 使用这些作为配置文件来启动文件描述的服务。&lt;/p>
&lt;p>下面的图 1 直接从 &lt;a href="http://man7.org/linux/man-pages/man7/bootup.7.html">bootup man page&lt;/a> 复制而来。它显示了 &lt;code>systemd&lt;/code> 启动期间事件的一般顺序以及确保成功启动的基本排序要求。&lt;/p>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>systemd 介绍请查看：&lt;a href="https://www.ruisum.top/tech/basics/boot_process/systemd%E4%BB%8B%E7%BB%8D/">systemd介绍&lt;/a>&lt;/p>
&lt;/div>
&lt;p>&lt;code>sysinit.target&lt;/code> 和 &lt;code>basic.target&lt;/code> &lt;code>target&lt;/code> 可以被视为启动过程中的检查点。尽管 &lt;code>systemd&lt;/code> 将并行启动系统服务作为其设计目标之一，但在启动其他&lt;code>services 和 targets&lt;/code>之前，仍然必须启动某些&lt;code>service&lt;/code>和功能&lt;code>target&lt;/code>。在满足该检查点所需的所有&lt;code>services 和 targets&lt;/code>之前，无法通过这些检查点。&lt;/p>
&lt;p>因此，当&lt;code>sysinit.target&lt;/code>所依赖的所有 &lt;code>units&lt;/code> 都启动完成时，就完成了 &lt;code>sysinit.target&lt;/code>的启动。所有这些&lt;code>units&lt;/code>：挂载文件系统、设置&lt;code>swap&lt;/code>、启动 &lt;code>udev&lt;/code>，设置&lt;code>random generator seed&lt;/code>，启动&lt;code>low-level services&lt;/code>、&lt;code>cryptographic服务&lt;/code>等必须完成，但在 &lt;code>sysinit.target&lt;/code> 中，这些任务可以并行执行。&lt;/p>
&lt;p>&lt;code>sysinit.target&lt;/code> 启动所有&lt;code>low-level services&lt;/code>和&lt;code>units&lt;/code>，系统需要这些&lt;code>services and units&lt;/code>才能正常运行，并且需要继续完成 &lt;code>basic.target&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"> local-fs-pre.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (various mounts and (various swap (various cryptsetup
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> fsck services...) devices...) devices...) (various low-level (various low-level
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | services: udevd, API VFS mounts:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v v v tmpfiles, random mqueue, configfs,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> local-fs.target swap.target cryptsetup.target seed, sysctl, ...) debugfs, ...)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \__________________|_________________ | ___________________|____________________/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \|/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> sysinit.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ____________________________________/|\________________________________________
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / | | | \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v v | v v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> (various (various | (various rescue.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> timers...) paths...) | sockets...) |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | | v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v v | v rescue.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> timers.target paths.target | sockets.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v \_________________ | ___________________/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \|/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> basic.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ____________________________________/| emergency.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | | v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v v v emergency.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> display- (various system (various system
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> manager.service services services)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | required for |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | graphical UIs) v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | multi-user.target
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | | |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \_________________ | _________________/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> \|/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> graphical.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完成 &lt;code>sysinit.target&lt;/code> 后，&lt;code>systemd&lt;/code> 接下来启动 &lt;code>basic.target&lt;/code>，启动完成它所需的所有&lt;code>units&lt;/code>。&lt;code>basic.target&lt;/code> 通过启动下一个 &lt;code>target&lt;/code> 所需的 &lt;code>units&lt;/code> 来提供一些附加功能。其中包括设置各种可执行目录、通信套接字和计时器的路径。&lt;/p>
&lt;p>最后，可以初始化用户级目标 &lt;code>multi-user.target&lt;/code> 或 &lt;code>graphics.target&lt;/code>。在满足 &lt;code>graphics.target&lt;/code> 依赖关系之前，必须达到 &lt;code>multi-user.target&lt;/code>。&lt;/p>
&lt;p>上面的文本图中，带下划线的 &lt;code>target&lt;/code> 是通常的 &lt;code>startup targets&lt;/code>。当达到这些 &lt;code>target&lt;/code> 之一时，&lt;code>startup 流程&lt;/code>就完成了。如果 &lt;code>multi-user.target&lt;/code> 是默认值，那应该会在控制台上看到文本登录界面。如果 &lt;code>graphics.target&lt;/code> 是默认值，那应该会看到图形登录界面。&lt;/p>
&lt;h2 id="结论">结论&lt;/h2>
&lt;p>&lt;code>GRUB2&lt;/code> 和 &lt;code>systemd init&lt;/code> 系统是大多数现代 &lt;code>Linux&lt;/code> 发行版的 &lt;code>boot&lt;/code> 和 &lt;code>startup&lt;/code> 阶段的关键组件。尽管围绕 &lt;code>systemd&lt;/code> 一直存在争议，但这两个组件可以顺利地协同工作，首先加载内核，然后启动 &lt;code>Linux&lt;/code> 系统所需的所有系统服务。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="-uefi-中的多重引导"># UEFI 中的多重引导&lt;/h3>
&lt;p>每个操作系统或 &lt;code>OEM&lt;/code> 供应商都可以在 &lt;code>ESP(EFI system partition)&lt;/code> 内维护自己的文件，而不会影响对方。因此使用 &lt;code>UEFI&lt;/code> 进行多重引导，只是启动与特定操作系统的引导加载程序相对应的不同 &lt;code>EFI&lt;/code> 应用程序的问题，不再需要依赖一个引导加载程序的链加载机制来加载另一个操作系统。&lt;/p>
&lt;h3 id="-什么是-bootloader"># 什么是 bootloader&lt;/h3>
&lt;p>&lt;code>bootloader（引导加载程序）&lt;/code> 是由固件（&lt;code>BIOS&lt;/code> 或 &lt;code>UEFI&lt;/code>）启动的软件。它负责使用所需的内核参数和相应的 &lt;code>initramfs&lt;/code> 映像来加载内核。 在 &lt;code>UEFI&lt;/code> 的情况下，内核本身可以由 &lt;code>UEFI&lt;/code> 使用 &lt;code>EFI 引导存根（ EFI boot stub）&lt;/code> 直接启动。&lt;br>
&lt;div class="notice warning" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>&lt;code>bootloader&lt;/code> 必须能够访问内核和 &lt;code>initramfs&lt;/code> 映像，否则系统将无法引导，因此在设置中，它必须支持访问 &lt;code>/boot&lt;/code>。这意味着 &lt;code>bootloader&lt;/code> 必须支持从块设备、堆叠块设备（&lt;code>LVM、RAID、dm-crypt、LUKS&lt;/code> 等）访问内核和 &lt;code>initramfs&lt;/code> 映像所在的文件系统的所有内容。&lt;/p>
&lt;/div>&lt;/p>
&lt;h3 id="-boot-sector"># boot sector&lt;/h3>
&lt;p>如下展示了分布在硬盘扇区上的 &lt;code>GNU GRUB&lt;/code> 的各种组件。当 &lt;code>GRUB&lt;/code> 安装在硬盘上时，&lt;code>boot.img&lt;/code> 会被写入该硬盘的引导扇区。 &lt;code>boot.img&lt;/code> 的大小只有 &lt;code>446&lt;/code> 字节。
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/06/20220603-1529.png" alt="boot sector构成">&lt;/p>
&lt;h3 id="-参考内容"># 参考内容&lt;/h3>
&lt;p>本文参考文章列表如下：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/ch-working_with_the_grub_2_boot_loader">Working with GRUB 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://opensource.com/article/17/2/linux-boot-and-startup">An introduction to the Linux boot and startup processes&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.freedesktop.org/software/systemd/man/bootup.html">linux system boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://askubuntu.com/questions/961086/trying-to-understand-the-boot-loader-process-grub">Trying to understand the boot loader process / GRUB?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://superuser.com/questions/1165557/how-grub2-works-on-a-mbr-partitioned-disk-and-gpt-partitioned-disk">How grub2 works on a MBR partitioned disk and GPT partitioned disk?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.jianshu.com/p/7276a98e74cf">启动流程、模块管理、BootLoader(Grub2)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://wiki.archlinux.org/title/Arch_boot_process">Arch boot process&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.cnblogs.com/JMLiu/p/10183948.html">Linux系统启动过程&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.rodsbooks.com/efi-bootloaders/principles.html">efi bootloaders and The EFI Boot Process&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/boot_process/" term="boot_process" label="boot_process"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/grub/" term="grub" label="grub"/><category scheme="https://ruisum.top/tags/boot/" term="boot" label="boot"/><category scheme="https://ruisum.top/tags/bootloader/" term="bootloader" label="bootloader"/></entry><entry><title type="text">grubby命令的使用</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/boot_process/grubby%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/"/><id>https://ruisum.top/tech/basics/boot_process/grubby%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BD%BF%E7%94%A8/</id><updated>2022-05-23T23:24:04+08:00</updated><published>2022-05-23T23:24:04+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">grubby：用于配置 bootloader 菜单条目的命令行工具</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;h3 id="-grubby-是什么"># grubby 是什么&lt;/h3>
&lt;p>&lt;code>grubby&lt;/code> 是一个可在不同架构下配置 &lt;code>bootloader&lt;/code> 菜单条目的命令行工具。&lt;/p>
&lt;h3 id="-详细内容"># 详细内容&lt;/h3>
&lt;p>&lt;code>grubby&lt;/code> 用于更新和显示在特定架构下的&lt;code>引导程序（bootloader）&lt;/code>配置文件信息。&lt;code>grubby&lt;/code> 是被设计给需要查找有关当前引导环境信息来安装新内核的脚本使用。&lt;/p>
&lt;h4 id="-支持的架构"># 支持的架构&lt;/h4>
&lt;ul>
&lt;li>支持在&lt;strong>x86_64&lt;/strong>系统上使用&lt;code>传统（legacy） BIOS&lt;/code>或者现代 &lt;code>UEFI&lt;/code> 固件的 &lt;code>GRUB2&lt;/code> 引导加载程序（grub2 bootloader）&lt;/li>
&lt;li>支持 &lt;code>ppc64&lt;/code> 和 &lt;code>ppc64le&lt;/code> 架构的硬件使用 &lt;code>OPAL&lt;/code> 或 &lt;code>SLOF&lt;/code> 作为固件的 &lt;code>GRUB2&lt;/code> 引导加载程序。&lt;/li>
&lt;li>支持 &lt;code>s390&lt;/code> 和 &lt;code>s390x&lt;/code> 架构及其 &lt;code>zipl&lt;/code> 引导加载程序（zipl bootloader）。&lt;/li>
&lt;li>不再支持 &lt;code>yaboot&lt;/code>，从 &lt;code>power8&lt;/code> 之后使用 &lt;code>grub2&lt;/code> 或 &lt;code>petitboot&lt;/code> 的 &lt;code>ppc&lt;/code> 架构的硬件都是使用 &lt;code>GRUB2&lt;/code> 配置文件格式。&lt;/li>
&lt;li>传统引导加载程序 &lt;code>LILO, SILO和 ELILO&lt;/code> 被弃用&lt;/li>
&lt;/ul>
&lt;h4 id="-默认行为"># 默认行为&lt;/h4>
&lt;p>默认的引导加载程序主要由构建 &lt;code>grubby&lt;/code> 的系统架构决定。每个系统架构都有一个首选的引导加载程序，每个引导加载程序都有其自己的配置文件; 如果没在命令行上配置选择 &lt;code>bootloader&lt;/code>，则 &lt;code>grubby&lt;/code> 将使用这些默认值来搜索现有配置; 如果找不到 &lt;code>bootloader&lt;/code> 配置文件，&lt;code>grubby&lt;/code> 将使用该系统架构的默认值, 这些默认值在下表中列出:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;strong>架构&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>bootloader&lt;/strong>&lt;/th>
&lt;th style="text-align:left">&lt;strong>配置文件&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>x86_64 [BIOS]&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>grub2&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/boot/grub2/grub.cfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>x86_64 [UEFI]&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>grub2&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/boot/efi/EFI/redhat/grub.cfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>i386&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>grub2&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/boot/grub2/grub.cfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>ia64&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>elilo&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/boot/efi/EFI/redhat/elilo.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>ppc [&amp;gt;=Power8]&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>grub2&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/boot/grub2/grub.cfg&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>ppc [&amp;lt;=Power7]&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>yaboot&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/etc/yaboot.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>s390&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>zipl&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/etc/zipl.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>s390x&lt;/code>&lt;/td>
&lt;td style="text-align:center">&lt;code>zipl&lt;/code>&lt;/td>
&lt;td style="text-align:left">&lt;code>/etc/zipl.conf&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="-名词解释"># 名词解释&lt;/h3>
&lt;p>&lt;strong>boot entry&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>引导条目（&lt;code>boot entry&lt;/code>）是一个选项的集合，该选项存储在配置文件中，并绑定到特定的内核版本。&lt;/li>
&lt;li>实际使用中，系统至少有与系统已安装内核一样多的引导条目。&lt;/li>
&lt;li>引导条目展示的文件名由存储在 &lt;code>/etc/machine-id&lt;/code> 文件中的机器 &lt;code>ID&lt;/code> 和内核版本组成。&lt;/li>
&lt;li>引导条目配置文件包含有关内核版本，初始 &lt;code>ramdisk image&lt;/code> 和 &lt;code>kernelopts（其中包含内核命令行参数）&lt;/code> 环境变量的信息。&lt;/li>
&lt;li>&lt;code>kernelopts&lt;/code> 环境变量在 &lt;code>/boot/grub2/grubenv&lt;/code> 文件中定义。&lt;/li>
&lt;li>引导条目配置文件位于 &lt;code>/boot/loader/entries/directory&lt;/code> 中，类似如下内容:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ cat /boot/grub/grub.cfg
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">### BEGIN /etc/grub.d/10_linux ### &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> menuentry &lt;span class="s1">&amp;#39;Manjaro Linux&amp;#39;&lt;/span> --class manjaro --class gnu-linux --class gnu --class os &lt;span class="nv">$menuentry_id_option&lt;/span> &lt;span class="s1">&amp;#39;gnulinux-simple-7afa0d3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s1"> 2-fd8d-44cc-8e4e-784f2493f4ca&amp;#39;&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> savedefault
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> load_video
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> &lt;span class="nv">gfxpayload&lt;/span>&lt;span class="o">=&lt;/span>keep
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> insmod gzio
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> insmod part_gpt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> insmod ext2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> search --no-floppy --fs-uuid --set&lt;span class="o">=&lt;/span>root 7afa0d32-fd8d-44cc-8e4e-784f2493f4ca
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> linux /boot/vmlinuz-5.15-x86_64 &lt;span class="nv">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">UUID&lt;/span>&lt;span class="o">=&lt;/span>7afa0d32-fd8d-44cc-8e4e-784f2493f4ca rw quiet &lt;span class="nv">apparmor&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="nv">security&lt;/span>&lt;span class="o">=&lt;/span>apparmor
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> udev.log_priority&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> initrd /boot/amd-ucode.img /boot/initramfs-5.15-x86_64.img
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="常用的-grubby-命令">常用的 grubby 命令&lt;/h2>
&lt;h3 id="-添加新内核条目"># 添加新内核条目&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 假设已经构建了自己的内核，该内核已安装在服务器上，并希望为此新内核添加自定义条目，可以使用如下命令：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --add-kernel&lt;span class="o">=&lt;/span>new_kernel --title&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;entry_title&amp;#34;&lt;/span> --initrd&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;new_initrd&amp;#34;&lt;/span> --copy-default
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 上一条命令使用了 --copy-default ，该参数会从我们的默认内核复制所有内核参数到此新内核条目，若要添加自己的自定义内核参数，可以使用：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --add-kernel&lt;span class="o">=&lt;/span>new_kernel --title&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;entry_title&amp;#34;&lt;/span> --initrd&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;new_initrd&amp;#34;&lt;/span> --args&lt;span class="o">=&lt;/span>kernel_args
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 示例命令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --grub2 --add-kernel&lt;span class="o">=&lt;/span>/boot/vmlinuz-4.18.0-193.el8.x86_64 --title&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Red Hat Enterprise 8 Test&amp;#34;&lt;/span> --initrd&lt;span class="o">=&lt;/span>/boot/initramfs-4.18.0-193.el8.x86_64.img --copy-default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-删除已有内核条目"># 删除已有内核条目&lt;/h3>
&lt;p>&lt;strong>请谨慎使用此命令&lt;/strong>，因为该命令会删除当前已有的内核的引导条目。如果删除了不正确内核的内核条目，系统可能无法启动，到时只能进入单用户模式修复损坏的服务器了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除内核条目&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --remove-kernel&lt;span class="o">=&lt;/span>old_kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 或者使用索引进行删除&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --remove-kernel&lt;span class="o">=&lt;/span>menu_index
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-添加新的内核参数"># 添加新的内核参数&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加新的内核参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>current_kernel --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel_args&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 具体命令示例&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>/boot/vmlinuz-&lt;span class="k">$(&lt;/span>uname -r&lt;span class="k">)&lt;/span> --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ipv6.disable=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 给当前所有可用内核统一添加内核参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>ALL --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel_args&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-删除已有的内核参数"># 删除已有的内核参数&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除已有的内核参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>current_kernel --remove-args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel_args&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 具体命令示例&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>/boot/vmlinuz-&lt;span class="k">$(&lt;/span>uname -r&lt;span class="k">)&lt;/span> --remove-args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ipv6.disable=1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 给当前所有可用内核统一删除内核参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>ALL --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel_args&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-删除并添加内核参数"># 删除并添加内核参数&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 删除和添加内核参数可以同时使用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --remove-args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel-args&amp;#34;&lt;/span> --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;kernel_args&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 具体命令示例&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --update-kernel&lt;span class="o">=&lt;/span>/boot/vmlinuz-&lt;span class="k">$(&lt;/span>uname -r&lt;span class="k">)&lt;/span> --remove-args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;quiet&amp;#34;&lt;/span> --args&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;console=ttsy0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-列出所有安装的内核"># 列出所有安装的内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 列出所有已经安装的内核&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --info&lt;span class="o">=&lt;/span>ALL &lt;span class="p">|&lt;/span> grep ^kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.14.3.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.1.2.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.el8.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-0-rescue-d88fa2c7ff574ae782ec8c4288de4e85&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-获取更多有关内核启动条目的信息"># 获取更多有关内核启动条目的信息&lt;/h3>
&lt;p>获取更多的内核引导条目的信息可以通过命令 &lt;code>grubby --info&lt;/code>，命令会提供诸如索引号，&lt;code>boot entry ID&lt;/code>，应用于内核的参数等信息&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ grubby --info&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-&lt;/span>&lt;span class="k">$(&lt;/span>uname -r&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.1.2.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">args&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;ro resume=/dev/mapper/rhel-swap rd.lvm.lv=rhel/root rd.lvm.lv=rhel/swap rhgb biosdevname=0 net.ifnames=0 enforcing=0 &lt;/span>&lt;span class="nv">$tuned_params&lt;/span>&lt;span class="s2"> console=ttsy0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">root&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/dev/mapper/rhel-root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">initrd&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/initramfs-4.18.0-193.1.2.el8_2.x86_64.img &lt;/span>&lt;span class="nv">$tuned_initrd&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">title&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;Red Hat Enterprise Linux (4.18.0-193.1.2.el8_2.x86_64) 8.2 (Ootpa)&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;d88fa2c7ff574ae782ec8c4288de4e85-4.18.0-193.1.2.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-列出默认内核的路径"># 列出默认内核的路径&lt;/h3>
&lt;p>默认内核是指系统启动时默认使用的内核&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ grubby --default-kernel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/boot/vmlinuz-4.18.0-193.el8.x86_64
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-列出默认内核在引导条目中的索引号"># 列出默认内核在引导条目中的索引号&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ grubby --default-index
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-列出默认内核在引导条目中的标题"># 列出默认内核在引导条目中的标题&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ grubby --default-title
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Red Hat Enterprise Linux &lt;span class="o">(&lt;/span>4.18.0-193.1.2.el8_2.x86_64&lt;span class="o">)&lt;/span> 8.2 &lt;span class="o">(&lt;/span>Ootpa&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-使用内核路径设置默认内核"># 使用内核路径设置默认内核&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 更改默认内核（更改系统启动默认使用的内核）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --set-default&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.1.2.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="-使用索引设置默认内核"># 使用索引设置默认内核&lt;/h3>
&lt;p>不使用内核 &lt;code>vmlinuz&lt;/code> 来设置默认启动内核，我们还可以通过提供索引号来更改默认内核。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取所有已安装内核的索引号&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --info&lt;span class="o">=&lt;/span>ALL &lt;span class="p">|&lt;/span> grep -E &lt;span class="s2">&amp;#34;^kernel|^index&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.14.3.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.1.2.el8_2.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.el8.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-4.18.0-193.el8.x86_64&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">index&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">kernel&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;/boot/vmlinuz-0-rescue-d88fa2c7ff574ae782ec8c4288de4e85&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 通过索引号设置默认内核&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ grubby --set-default-index&lt;span class="o">=&lt;/span>&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="-参考内容"># 参考内容&lt;/h3>
&lt;p>&lt;a href="https://www.systutorials.com/docs/linux/man/8-grubby/">https://www.systutorials.com/docs/linux/man/8-grubby/&lt;/a>
&lt;a href="https://www.golinuxcloud.com/grubby-command-examples/">https://www.golinuxcloud.com/grubby-command-examples/&lt;/a>&lt;/p></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/boot_process/" term="boot_process" label="boot_process"/><category scheme="https://ruisum.top/tags/grub/" term="grub" label="grub"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/basic/" term="basic" label="basic"/><category scheme="https://ruisum.top/tags/system/" term="system" label="system"/></entry><entry><title type="text">Manjaro系统初始化</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/miscell/manjaro%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96/"/><id>https://ruisum.top/tech/miscell/manjaro%E7%B3%BB%E7%BB%9F%E5%88%9D%E5%A7%8B%E5%8C%96/</id><updated>2022-04-09T14:47:28+08:00</updated><published>2022-04-09T14:47:28+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">manjaro 系统安装完成后的配置优化内容</summary><content type="html">&lt;h2 id="双系统安装配置">双系统安装配置&lt;/h2>
&lt;h3 id="-准备工作"># 准备工作&lt;/h3>
&lt;p>当前准备安装 &lt;code>manjaro&lt;/code> 的机器是联想小新pro, 已经装有正版 &lt;code>windows 11&lt;/code> 系统。考虑到平时也会有用到 &lt;code>windows&lt;/code> 办公的场景，所以准备安装双系统，日常使用 &lt;code>manjaro&lt;/code>，&lt;code>manjaro&lt;/code> 无法满足的场景再使用 &lt;code>windows&lt;/code>。&lt;/p>
&lt;ul>
&lt;li>刻录系统安装 &lt;code>U&lt;/code>盘&lt;br>
此操作比较简单，直接使用 &lt;code>dd&lt;/code> 命令刻录即可; 需要提前下载好 &lt;code>manjaro&lt;/code> 系统安装 &lt;code>iso&lt;/code> 文件
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 镜像放在当前目录下，U 盘插入刻录 iso 文件的 linux 系统，识别为 /dev/sdb; 如下命令操作&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ sudo dd &lt;span class="k">if&lt;/span>&lt;span class="o">=&lt;/span>./manjaro-kde-21.1.4-210927-linux513.iso &lt;span class="nv">of&lt;/span>&lt;span class="o">=&lt;/span>/dev/sdb &lt;span class="nv">status&lt;/span>&lt;span class="o">=&lt;/span>progress
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>设置 BIOS 中 &lt;code>secure boot&lt;/code> 为 &lt;code>disabled&lt;/code>&lt;br>
进入 &lt;code>BIOS&lt;/code> 设置，将 &lt;code>secure boot&lt;/code> 设置为 &lt;code>disabled&lt;/code>，否则无法使用 U 盘装机; 现象是可以选择通过 U 盘启动，但进不了装机界面&lt;/li>
&lt;/ul>
&lt;h3 id="-windows-操作内容"># windows 操作内容&lt;/h3>
&lt;p>&lt;code>windows&lt;/code> 默认把磁盘空间用完，需要在 &lt;code>windows&lt;/code> 系统上调整分区大小，分出一块空间给 &lt;code>manjaro&lt;/code> 使用&lt;/p>
&lt;ul>
&lt;li>进入磁盘管理&lt;br>
右键 &lt;code>windows&lt;/code> 图标，选择磁盘管理
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220503-2336.png" alt="磁盘管理">&lt;/li>
&lt;li>选择 D 盘进行缩容&lt;br>
C 盘空间不建议缩容，对 D 盘做缩容操作
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220503-2337.png" alt="d盘缩容">&lt;/li>
&lt;li>指定压缩卷空间大小即可&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220503-2340.png" alt="缩容1">&lt;/li>
&lt;li>缩容后显示&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220505-2236.png" alt="缩容2">&lt;/li>
&lt;/ul>
&lt;h3 id="-manjaro-系统安装"># manjaro 系统安装&lt;/h3>
&lt;p>&lt;code>manjaro&lt;/code> 安装后，需要保留 &lt;code>windows&lt;/code> 的启动入口; &lt;code>linux&lt;/code> 发行版安装系统时，默认会保留已有的 &lt;code>windows&lt;/code> 启动入口; 反过来，先安装了 &lt;code>linux&lt;/code> 发行版，再安装 &lt;code>windows&lt;/code> 则不会保留 &lt;code>linux&lt;/code> 的启动入口，需要自行修复。所以在给电脑安装双系统时，建议先装 &lt;code>windows&lt;/code> 系统，再装 &lt;code>linux&lt;/code> 系统。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>进入安装入口&lt;br>
此处选择了&lt;code>通过开源驱动&lt;/code>启动，下一项为&lt;code>通过专有驱动&lt;/code>启动，建议有特殊硬件的设备选择这一项&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220505-2244.jpg" alt="选择入口">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>磁盘分区选择&lt;br>
跳过前面的其他配置内容，磁盘分区需要细心配置，因为要保留 &lt;code>windows&lt;/code> 的相应分区，此处选择在 &lt;code>windows&lt;/code> 上缩容多出来的 &lt;code>free space&lt;/code> 可用空间。&lt;br>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>&lt;code>Partitions/Replace a partition&lt;/code> 选中 &lt;code>free space&lt;/code>的分区。&lt;/p>
&lt;/div>&lt;/p>
&lt;p>
&lt;div class="notice info" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M256 8a248 248 0 100 496 248 248 0 000-496zm0 110a42 42 0 110 84 42 42 0 010-84zm56 254c0 7-5 12-12 12h-88c-7 0-12-5-12-12v-24c0-7 5-12 12-12h12v-64h-12c-7 0-12-5-12-12v-24c0-7 5-12 12-12h64c7 0 12 5 12 12v100h12c7 0 12 5 12 12v24z"/>&lt;/svg>&lt;/div>
&lt;p>图片显示可以看出，&lt;code>manjaro&lt;/code> 使用的仍然是 &lt;code>nvme0n1p1&lt;/code> 分区作为 &lt;code>/boot/efi&lt;/code>的挂载分区，和 &lt;code>windows&lt;/code> 是共用的。&lt;/p>
&lt;/div>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220505-2247.jpg" alt="分区选择">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>分区完成
点击 &lt;code>next&lt;/code> 完成分区操作，然后点击 &lt;code>install&lt;/code> 完成系统安装
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220505-2301.jpg" alt="分区完成">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="基础配置">基础配置&lt;/h2>
&lt;h3 id="-pacman-源地址修改"># pacman 源地址修改&lt;/h3>
&lt;p>修改软件源，切换至国内，加快下载速度&lt;/p>
&lt;pre tabindex="0">&lt;code># 修改前备份
$ sudo cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup
# 更新镜像源排名
$ sudo pacman-mirrors -i -c China -m rank
$ sudo cp /etc/pacman.conf /etc/pacman.conf.backup
# 添加ArchLinux中文社区源
$ sudo vi /etc/pacman.conf
[archlinuxcn]
SigLevel = Optional TrustedOnly
# 清华源
Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch
# 中科大源
#Server = https://mirrors.ustc.edu.cn/archlinuxcn/$arch
# 使配置生效
$ sudo pacman-mirrors -g
# 更新 pacman 数据库全面更新系统并签名
$ sudo pacman -Syyu &amp;amp;&amp;amp; sudo pacman -S archlinuxcn-keyring
# 先安装一些包，后续其他需要配置的包单独说明
$ sudo pacman -S acpi vim yay
&lt;/code>&lt;/pre>&lt;h3 id="-系统更新"># 系统更新&lt;/h3>
&lt;p>使用 &lt;code>iso&lt;/code> 镜像装完了系统，系统软件有些滞后，进行后续配置前，先更新一下系统软件&lt;/p>
&lt;pre tabindex="0">&lt;code># 更新软件包
$ sudo pacman -Syyu
&lt;/code>&lt;/pre>&lt;h3 id="-sudo-配置免密"># sudo 配置免密&lt;/h3>
&lt;p>后续的很多配置都需要在命令行下操作，且需要 &lt;code>root&lt;/code> 权限，设置 &lt;code>sudo&lt;/code> 不需要输入密码，避免配置时总提示输入用户密码&lt;/p>
&lt;pre tabindex="0">&lt;code># 切换到root用户
$ sudo -i
# 只需要配置10-installer文件即可，查看配置后的内容
$ sudo cat /etc/sudoers.d/10-installer
%wheel ALL=(ALL) NOPASSWD: ALL
&lt;/code>&lt;/pre>&lt;h3 id="-git-配置"># git 配置&lt;/h3>
&lt;p>安装 git&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo pacman -S git
&lt;/code>&lt;/pre>&lt;p>配置git&lt;/p>
&lt;pre tabindex="0">&lt;code># 用户名
$ git config --global user.name &amp;#34;&amp;lt;username&amp;gt;&amp;#34;
# 邮箱
$ git config --global user.email &amp;#34;&amp;lt;mail-address&amp;gt;&amp;#34;
# 提交时转换为 LF，检出时不转换
$ git config --global core.autocrlf false
$ git config --global core.safecrlf false
$ git config --global core.autocrlf input
# 因为我的 trojan 代理 sock 端口是 1080
$ git config --global http.proxy socks5://127.0.0.1:7891
$ git config --global --add remote.origin.proxy &amp;#34;&amp;#34;
$ git config --global core.editor &amp;#34;vim&amp;#34;
&lt;/code>&lt;/pre>&lt;h3 id="-字体配置"># 字体配置&lt;/h3>
&lt;p>自己使用的系统语言配置是英文的，日常使用需要一些中文字体&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装中文字体
$ sudo pacman -S wqy-zenhei
$ sudo pacman -S wqy-bitmapfont
$ sudo pacman -S wqy-microhei
$ sudo pacman -S ttf-wps-fonts
$ sudo pacman -S adobe-source-han-sans-cn-fonts
$ sudo pacman -S adobe-source-han-serif-cn-fonts
&lt;/code>&lt;/pre>&lt;h3 id="-时间同步配置"># 时间同步配置&lt;/h3>
&lt;p>系统时区在系统安装时已经选择了，默认选择 &lt;code>Asia/Shanghai&lt;/code> 就可以&lt;/p>
&lt;pre tabindex="0">&lt;code># 若有调整需求，可以用下面命令调整，时区可以 tab tab 出来
$ timedatectl set-timezone Asia/Shanghai
&lt;/code>&lt;/pre>&lt;p>自己的电脑是 &lt;code>windows 11 + manjaro&lt;/code> 双系统，需要在 &lt;code>windows&lt;/code> 下配置，让 &lt;code>windows&lt;/code> 把硬件时间当作 &lt;code>UTC&lt;/code>，避免双系统切换导致的时间错乱。&lt;/p>
&lt;pre tabindex="0">&lt;code># Win + R 进入 cmd，以管理员身份运行后在命令行中输入下面命令并回车
&amp;lt;admin&amp;gt;# Reg add HKLM\SYSTEM\CurrentControlSet\Control\TimeZoneInformation /v RealTimeIsUniversal /t REG_DWORD /d 1
&lt;/code>&lt;/pre>&lt;p>在 &lt;code>manjaro&lt;/code> 下设置硬件时间同步 &lt;code>utc&lt;/code> 系统时间&lt;/p>
&lt;pre tabindex="0">&lt;code># 设置硬件时钟同步系统 utc 时间
$ sudo hwclock --systohc --utc
&lt;/code>&lt;/pre>&lt;p>UTC：&lt;code>Universal Time Coordinated&lt;/code>，协调世界时&lt;/p>
&lt;p>GMT：&lt;code>Greenwich Mean Time&lt;/code>，格林尼治平时&lt;/p>
&lt;p>&lt;code>windows&lt;/code> 与 &lt;code>linux&lt;/code> 缺省看待系统硬件时间的方式是不一样的：&lt;/p>
&lt;ul>
&lt;li>windows 把系统硬件时间当作本地时间(local time)，即操作系统中显示的时间跟 &lt;code>BIOS&lt;/code> 中显示的时间是一样的。&lt;/li>
&lt;li>linux/unix/mac 把硬件时间当作 UTC，操作系统中显示的时间是硬件时间经过换算得来的，比如说北京时间是GMT+8，则系统中显示时间是硬件时间+8。&lt;/li>
&lt;/ul>
&lt;h3 id="-中文输入法配置"># 中文输入法配置&lt;/h3>
&lt;p>使用 &lt;code>fcitx5&lt;/code>管理输入法&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 Fcitx5 主体、配置工具、输入法引擎及中文输入法模块
$ sudo pacman -S fcitx5-im fcitx5-chinese-addons fcitx5-qt fcitx5-gtk
# 配置用户家目录下 pam 环境变量文件，（为了对齐，中间是一个 Tab 键）
$ cat ~/.pam_environment
GTK_IM_MODULE DEFAULT=fcitx
QT_IM_MODULE DEFAULT=fcitx
XMODIFIERS DEFAULT=\@im=fcitx
INPUT_METHOD DEFAULT=fcitx
SDL_IM_MODULE DEFAULT=fcitx
&lt;/code>&lt;/pre>&lt;p>注销后登陆，输入法显示出来了，进入云拼音和标点符号的配置&lt;/p>
&lt;blockquote>
&lt;p>入口：system settings/regional settings/input method&lt;br>
或者直接在系统托盘的键盘图标右键点击配置&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/%E8%BF%9B%E5%85%A5%E4%BA%91%E6%8B%BC%E9%9F%B3%E9%85%8D%E7%BD%AE1" alt="配置输入法1">
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022-04-06_07-28.png" alt="配置输入法2">
调整云拼音的后端，也即云端词库，选择 &lt;code>Baidu&lt;/code> ，&lt;code>google&lt;/code> 不一定用的了
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022-04-06_07-28_1.png" alt="云拼音配置">
修改pinyin的切换候选词配置，默认是上下，需要调整配置到&lt;code>,/.&lt;/code>。
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022-04-09_11-43.png" alt="候选词切换1">
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022-04-09_11-44.png" alt="候选词切换2">&lt;/p>
&lt;h3 id="-命令历史记录配置"># 命令历史记录配置&lt;/h3>
&lt;p>终端上可能会同时开启几个 &lt;code>tab&lt;/code>,如果在多个 &lt;code>tab&lt;/code> 上都有执行命令的话，&lt;code>.bash_history&lt;/code> 不一定能保留所有的命令历史记录，需要单独配置来记录所有 &lt;code>tab&lt;/code> 上执行的命令&lt;/p>
&lt;pre tabindex="0">&lt;code># 在 /etc/profile 中添加如下内容
$ tail -2 /etc/profile
export HISTORY_FILE=&amp;#34;/var/log/CMD_all.log&amp;#34;
export PROMPT_COMMAND=&amp;#39;{ thisHistID=`history 1|awk &amp;#34;{print \\$1}&amp;#34;`;lastCommand=`history 1| awk &amp;#34;{\\$1=\&amp;#34;\&amp;#34; ;print}&amp;#34;`;user=`id -un`;whoStr=(`who -u am i`);realUser=${whoStr[0]};logMonth=${whoStr[2]};logDay=${whoStr[3]};pid=${whoStr[5]};ip=${whoStr[6]};if [ ${thisHistID}x != ${lastHistID}x ];then echo -E `date &amp;#34;+%Y/%m/%d %H:%M:%S&amp;#34;` $user\($realUser\)@$ip[Pid:$pid][LoginTime:$logMonth $logDay] ExecuteCommand: $lastCommand;fi; } &amp;gt;&amp;gt; $HISTORY_FILE&amp;#39;
# 先生成日志文件，并修改其权限配置
$ sudo touch /var/log/CMD_all.log
$ sudo chmod 666 /var/log/CMD_all.log
# 重新加载 /etc/profile 文件，使配置生效
$ source /etc/profile
# 后续需要查找之前执行的命令，可以直接执行命令
$ cat /var/log/CMD_all.log | grep &amp;lt;item&amp;gt;
&lt;/code>&lt;/pre>&lt;h2 id="软件的安装配置">软件的安装配置&lt;/h2>
&lt;h3 id="-安装配置-virtualbox"># 安装配置 virtualbox&lt;/h3>
&lt;pre tabindex="0">&lt;code># 获取当前内核版本
$ mhwd-kernel -li
Currently running: 5.15.28-1-MANJARO (linux515)
The following kernels are installed in your system:
* linux515
# 安装 virtualbox
$ sudo pacman -Syu virtualbox linux515-virtualbox-host-modules
# 自己下载镜像，在 virtualbox 上安装系统，保存快照，以后就可以基于快照生成虚拟机
&lt;/code>&lt;/pre>&lt;h3 id="-安装远程工具"># 安装远程工具&lt;/h3>
&lt;p>日常工作在 &lt;code>manjaro&lt;/code> 上，连接其他 &lt;code>windows&lt;/code> 主机或 &lt;code>linux&lt;/code> 主机，需要用到 &lt;code>vnc&lt;/code> 和 &lt;code>rdp&lt;/code> 工具&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 rdp 工具 remmina
$ sudo pacman -S remmina
# 安装 vnc 工具
$ yay -S realvnc-vnc-viewer
&lt;/code>&lt;/pre>&lt;h3 id="-安装下载工具"># 安装下载工具&lt;/h3>
&lt;p>日常下载工具，&lt;code>aria2c + uget&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo pacman -S aria2 uget
&lt;/code>&lt;/pre>&lt;h3 id="-安装笔记工具"># 安装笔记工具&lt;/h3>
&lt;p>日常笔记工具，&lt;code>trilium-bin&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>$ yay -S trilium-bin
&lt;/code>&lt;/pre>&lt;h3 id="-安装-chrome-浏览器"># 安装 chrome 浏览器&lt;/h3>
&lt;p>不是很习惯使用火狐，下载 &lt;code>google-chrome&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code>$ yay -S google-chrome
&lt;/code>&lt;/pre>&lt;p>安装 &lt;code>switchomega-proxy&lt;/code> 插件，登陆 google 帐号，开启同步功能后，会自动将 chrome 的配置和书签同步过来。&lt;/p>
&lt;p>登陆谷歌帐号需要翻墙，见下面翻墙配置内容&lt;/p>
&lt;h3 id="-安装配置-albert"># 安装配置 albert&lt;/h3>
&lt;p>&lt;code>albert&lt;/code> 是一个快速加载工具，开启相应支持后，可以很方便的打开文件、软件、链接等各种内容，功能类似于 &lt;code>windows&lt;/code> 上的 &lt;code>everything&lt;/code>; 可以简省很多快捷键配置、减少找文件的时间&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 albert
$ yay -S albert-bin
&lt;/code>&lt;/pre>&lt;p>安装完成后，打开 &lt;code>albert&lt;/code> 配置界面，设置快捷键、主题、开机自启、及开启各个插件支持，主题选择了&lt;code>spotlight dark&lt;/code>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/20220409213927.png" alt="配置albert">&lt;/p>
&lt;h3 id="-开发-ide"># 开发 IDE&lt;/h3>
&lt;p>日常使用到的有 &lt;code>vscode&lt;/code>，&lt;code>pycharm&lt;/code>，直接安装就好&lt;/p>
&lt;pre tabindex="0">&lt;code>$ yay -S pycharm-community-eap vscode
&lt;/code>&lt;/pre>&lt;h3 id="-安装-pyenv"># 安装 pyenv&lt;/h3>
&lt;p>&lt;code>pyenv&lt;/code> 可以在多个版本的 &lt;code>python&lt;/code> 之间轻松切换，日常使用如果同时要用到 &lt;code>python2&lt;/code> 和 &lt;code>python3&lt;/code>，安装配置 &lt;code>pyenv&lt;/code> 会很方便&lt;/p>
&lt;pre tabindex="0">&lt;code># 下载最新版的 pyenv 到家目录下
$ git clone https://github.com/pyenv/pyenv.git ~/.pyenv
# 进入家目录，进行编译
$ cd ~/.pyenv &amp;amp;&amp;amp; src/configure &amp;amp;&amp;amp; make -C src
# 添加相应的环境变量到 ～/.bashrc中
$ sed -Ei -e &amp;#39;/^([^#]|$)/ {a \
export PYENV_ROOT=&amp;#34;$HOME/.pyenv&amp;#34;
a \
export PATH=&amp;#34;$PYENV_ROOT/bin:$PATH&amp;#34;
a \
&amp;#39; -e &amp;#39;:a&amp;#39; -e &amp;#39;$!{n;ba};}&amp;#39; ~/.profile
$ echo &amp;#39;eval &amp;#34;$(pyenv init --path)&amp;#34;&amp;#39; &amp;gt;&amp;gt;~/.profile
$ echo &amp;#39;eval &amp;#34;$(pyenv init -)&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc
# 下载 virtualenv 插件到 pyenv 的插件目录下
$ git clone https://github.com/pyenv/pyenv-virtualenv.git $(pyenv root)/plugins/pyenv-virtualenv
# 添加环境变量到 ~/.bashrc 中
$ echo &amp;#39;eval &amp;#34;$(pyenv virtualenv-init -)&amp;#34;&amp;#39; &amp;gt;&amp;gt; ~/.bashrc
# 重启 bash，加载 virtualenv
$ exec $SHELL
&lt;/code>&lt;/pre>&lt;p>使用 &lt;code>pyenv&lt;/code> 管理多版本 &lt;code>python&lt;/code> 时可能用到的一些特殊变量：&lt;/p>
&lt;blockquote>
&lt;p>Special environment variables&lt;br>
You can set certain environment variables to control pyenv-virtualenv.&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>PYENV_VIRTUALENV_CACHE_PATH&lt;/strong>, if set, specifies a directory to use for caching downloaded package files.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>VIRTUALENV_VERSION&lt;/strong>, if set, forces pyenv-virtualenv to install the desired version of virtualenv. If virtualenv has not been installed, pyenv-virtualenv will try to install the given version of virtualenv.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>GET_PIP&lt;/strong>, if set and venv is preferred over virtualenv, use get_pip.py from the specified location.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>GET_PIP_URL&lt;/strong>, if set and venv is preferred over virtualenv, download get_pip.py from the specified URL.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>PIP_VERSION&lt;/strong>, if set and venv is preferred over virtualenv, install the specified version of pip.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>PYENV_VIRTUALENV_VERBOSE_ACTIVATE&lt;/strong>, if set, shows some verbose outputs on activation and deactivation&lt;/p>
&lt;p>安装和配置 &lt;code>virtualenv&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装指定版本的 python
$ pyenv install 2.7.15 -v
# 在 指定的目录下，使用基于指定 python 版本的 virtualenv
# 如下，会在目录 my-virtual-env-2.7.10 下创建一个基于 $(pyenv root)/versions 中 2.7.10 版本 python 的 virtualenv
$ pyenv virtualenv 2.7.10 my-virtual-env-2.7.10
# 从指定版本创建 virtualenv
$ pyenv virtualenv 2.7.16 py27
# 激活/释放 virtualenv
$ pyenv activate &amp;lt;name&amp;gt;
$ pyenv deactivate
# 删除 virtualenv
$ pyenv uninstall my-virtual-env
$ pyenv virtualenv-delete my-virtual-env
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h3 id="-博客使用"># 博客使用&lt;/h3>
&lt;p>日常写博客用的是 &lt;code>hugo&lt;/code>，图床用的是阿里云&lt;code>OSS&lt;/code>，图片上传到图床的工具用 &lt;code>picgo&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 hugo
$ sudo pacman -S hugo
# 安装 picgo
$ yay -S picgo
&lt;/code>&lt;/pre>&lt;p>markdown 文件中包含了中英文和数字，美观起见，互相之间应该加一个空格。除了在写的时候注意调整，还可以使用 &lt;code>textlint&lt;/code> 来检查和修改，如下方式进行配置：&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 textlint
$ npm install textlint --global
$ npm install textlint-rule-ja-space-between-half-and-full-width --global
$ cd ~ &amp;amp;&amp;amp; textlint --init
# 配置 .textlintrc 配置文件
$ cat .textlintrc
{
&amp;#34;filters&amp;#34;: {},
&amp;#34;rules&amp;#34;: {
&amp;#34;ja-space-between-half-and-full-width&amp;#34;: {
&amp;#34;space&amp;#34;: &amp;#34;always&amp;#34;
}
}
}
# 使用 textlint 检查
$ textlint *.md
# 使用 textlint 修复
$ textlint --fix *.md
&lt;/code>&lt;/pre>&lt;h3 id="-安装-wps"># 安装 wps&lt;/h3>
&lt;p>&lt;code>marjaro&lt;/code> 无法使用 &lt;code>office&lt;/code>套装（可能也可以，自己没找到可用的方式），&lt;code>libreoffice&lt;/code> 自己用的不习惯，选了 &lt;code>wps&lt;/code> 做替代&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 wps, 建议英文界面下安装 wps-office, 安装 wps-office-zh 后使用过程中碰到过一些报错
$ yay -S wps-office
&lt;/code>&lt;/pre>&lt;h3 id="-安装网易云音乐"># 安装网易云音乐&lt;/h3>
&lt;p>日常听歌使用&lt;/p>
&lt;pre tabindex="0">&lt;code>$ yay -S netease-cloud-music
&lt;/code>&lt;/pre>&lt;h3 id="-安装街机模拟器-mame"># 安装街机模拟器 mame&lt;/h3>
&lt;p>街机游戏&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo pacman -S mame
&lt;/code>&lt;/pre>&lt;h3 id="-安装-xmind-2020"># 安装 xmind-2020&lt;/h3>
&lt;p>思维导图使用&lt;/p>
&lt;pre tabindex="0">&lt;code># xmind-2020 需要使用 snap 进行安装，manjaro 系统安装完成后已经有 snap 了; 若没有，则按以下方式进行配置
$ sudo pacman -S snapd
$ sudo systemctl enable --now snapd.socket
$ sudo ln -s /var/lib/snapd/snap /snap
# 安装 xmind-2020
$ sudo snap install xmind
&lt;/code>&lt;/pre>&lt;p>&lt;code>xmind-2020&lt;/code> 个人使用可以不用激活，感觉没有增强功能也足够使用了&lt;/p>
&lt;h2 id="易用性界面优化">易用性/界面优化&lt;/h2>
&lt;p>&lt;strong>需要使用到的一些配置文件/工具，已经提前准备好，直接拷贝到机器上&lt;/strong>。包括有：&lt;/p>
&lt;ul>
&lt;li>配置文件
&lt;ul>
&lt;li>&lt;code>.bashrc&lt;/code>：个人用户使用的 &lt;code>bash&lt;/code> 配置文件，包括一些配置的别名、环境变量等&lt;/li>
&lt;li>&lt;code>.vimrc&lt;/code>：个人用户使用的 &lt;code>vim&lt;/code> 配置文件，包括缩进、语法高亮、插件、主题等&lt;/li>
&lt;li>&lt;code>.tmux.conf&lt;/code>：&lt;code>tmux&lt;/code> 的配置文件，&lt;code>tmux&lt;/code> 的一些配置&lt;/li>
&lt;li>&lt;code>shell_init.tar.gz&lt;/code>：自己使用的一些终端banner，可以不用管&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>需要网上找，直接本地备份的一些文件
&lt;ul>
&lt;li>&lt;code>Trojan-Qt5-Linux.AppImage&lt;/code>：trojan-qt5，服务器延迟不稳定但能使用，不是很适合&lt;code>clash&lt;/code>，还是用 &lt;code>trojan&lt;/code>了&lt;/li>
&lt;li>&lt;code>Proxy-SwitchyOmega-Chromium.crx&lt;/code>：&lt;code>chrome&lt;/code> 的代理插件&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="-yakuaketmuxbashvim-配置"># yakuake/tmux/bash/vim 配置&lt;/h3>
&lt;p>&lt;code>bash&lt;/code>/&lt;code>vim&lt;/code> 配置很简单，直接将 &lt;code>.bashrc&lt;/code> 和 &lt;code>.vimrc&lt;/code> 文件拷贝到用户家目录下即可。&lt;/p>
&lt;pre tabindex="0">&lt;code># shell_init.tar.gz是自己使用的一些内容，就不放出来了
$ tar xf ./shell_init.tar.gz
$ mv .english* ~/
$ mv ./{.vimrc,.bashrc} ~/
&lt;/code>&lt;/pre>&lt;p>配置 &lt;code>yakuake&lt;/code> 和 &lt;code>tmux&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code># yakuake 在 manjaro 安装时已经自带，可以不用安装;
# 安装 tmux
$ sudo pacman -S tmux
&lt;/code>&lt;/pre>&lt;p>将自己备份的 &lt;code>tmux.conf&lt;/code> 文件拷贝到用户家目录下，重命名为 &lt;code>.tmux.conf&lt;/code>。拷贝 &lt;code>tmux&lt;/code> 配置文件生效后，需要配置 &lt;code>yakuake&lt;/code>, 因为 &lt;code>tmux&lt;/code> 配置中 &lt;code>Alt + &amp;lt;num&amp;gt; &lt;/code> 的配置占用了yakuake的快捷键，不配置的话无法在 &lt;code>yakuake&lt;/code> 中切换 &lt;code>tab&lt;/code>。如下所示进行配置（&lt;code>yakuake/config keyboard shortcuts&lt;/code>）：
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022-04-09_11-48.png" alt="配置快捷键">&lt;/p>
&lt;p>顺带把 &lt;code>yakuake&lt;/code> 主题和边框都调整好&lt;/p>
&lt;h3 id="-调整终端的配置profile"># 调整终端的配置（profile）&lt;/h3>
&lt;p>&lt;code>manjaro&lt;/code> 安装完成后，终端默认的配置方案（profile）不是很喜欢，新增配置方案（最初默认的profile修改了不能保存），配置好后将其设置为默认的配置方案&lt;/p>
&lt;ul>
&lt;li>新建 &lt;code>profile&lt;/code>（&lt;code>konsole/settings/manage profiles/new&lt;/code>）
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/picgo//home/liawne/.config/picgo/20220409215624.png" alt="新建profile1">
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/20220409214802.png" alt="新建profile2">&lt;/li>
&lt;li>选择配置方案及字体
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/20220409215121.png" alt="字体及配色">&lt;/li>
&lt;li>鼠标选中复制
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/20220409215254.png" alt="鼠标选中复制">&lt;/li>
&lt;/ul>
&lt;h3 id="-配置翻墙"># 配置翻墙&lt;/h3>
&lt;p>翻墙软件自己使用的是 &lt;code>trojan-qt5&lt;/code> 的 &lt;code>AppImage&lt;/code> 版本，这个可以在网上自行搜索下载。不想配置全局代理，还可以安装 &lt;code>provixy&lt;/code>&lt;/p>
&lt;pre tabindex="0">&lt;code># 将下载的 appimage 文件放到 /tmp 下
$ mv Trojan-Qt5-Linux.AppImage /tmp
$ chmod +x /tmp/Trojan-Qt5-Linux.AppImage
# 创建自定义的 AppImage 存储目录
$ mkdir ~/.Applications
# 运行 AppImage
$ /tmp/Trojan-Qt5-Linux.AppImage
# 配置 trojan 开机自启，创建软链接
$ sudo ln -s /home/&amp;lt;username&amp;gt;/.Applications/Trojan-Qt5-Linux_cb059cf83989c64d7d13dd501bcd6b62.AppImage /usr/bin/trojan
# 配置 trojan 开机自启，生成 autostart 文件
$ cat /home/&amp;lt;username&amp;gt;/.config/autostart/trojan.desktop
[Desktop Entry]
Exec=/usr/bin/trojan
Icon=dialog-scripts
Name=trojan
Path=
Type=Application
X-KDE-AutostartScript=true
&lt;/code>&lt;/pre>&lt;p>第一次执行 &lt;code>AppImage&lt;/code> 时，会要求确认 &lt;code>applications&lt;/code> 存放的位置，设置存储路径到&lt;code>~/.Applications&lt;/code>。&lt;/p>
&lt;p>导入gui-config.json文件，配置 &lt;code>trojan&lt;/code>（&lt;code>settings/General settings&lt;/code>）&lt;/p>
&lt;ul>
&lt;li>常规设置
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/flameshot//home/liawne/Pictures/flameshot/2022-04-07_07-15.png" alt="常规设置">&lt;/li>
&lt;li>入站设置
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/flameshot//home/liawne/Pictures/flameshot/2022-04-07_07-16.png" alt="入站设置">&lt;/li>
&lt;li>出站设置
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/flameshot//home/liawne/Pictures/flameshot/2022-04-07_07-16_1.png" alt="">&lt;/li>
&lt;/ul>
&lt;p>配置完成后测试延迟，选择一个延迟较低的连接即可&lt;/p>
&lt;p>配置 switchomega-proxy 为socks5 监听端口1080
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/picgo//home/liawne/.config/picgo/20220409220852.png" alt="switchomega配置">&lt;/p>
&lt;p>安装并配置privoxy,启动服务&lt;/p>
&lt;pre tabindex="0">&lt;code># 安装 privoxy
$ sudo pacman -S privoxy
# 配置配置文件，trojan 监听的是1080端口，转发端口为 8118
$ grep &amp;#39;^forward-socket&amp;#39; /etc/privoxy/config
listen-address 127.0.0.1:8118
forward-socks5t / 127.0.0.1:1080 .
# 启动 privoxy，并设置开机自启
$ sudo systemctl start privoxy.service &amp;amp;&amp;amp; sudo systemctl enable privoxy.service
&lt;/code>&lt;/pre>&lt;p>上述内容配置完成后，&lt;code>chrome&lt;/code> 开启代理模式，然后登陆 &lt;code>google&lt;/code> 帐号，各项配置、插件、书签会自动同步&lt;/p>
&lt;h3 id="-安装wudao-dict"># 安装wudao-dict&lt;/h3>
&lt;p>&lt;code>wudao-dict&lt;/code> 是一个命令行下查单词的工具，日常看文档、wiki的时候有不清楚的单词，可以很方便的查询&lt;/p>
&lt;pre tabindex="0">&lt;code>$ cd ~/Downloads/linux
$ git clone https://github.com/chestnutheng/wudao-dict
$ cd ./wudao-dict/wudao-dict
$ sudo bash setup.sh
&lt;/code>&lt;/pre>&lt;h3 id="-界面优化"># 界面优化&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>配置系统托盘，在上尖点击右键，进入项目可以配置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>unpin&lt;/code> 所有托盘图标&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="-安装-numix-主题相关"># 安装 numix 主题相关&lt;/h3>
&lt;p>&lt;strong>numix 主题安装&lt;/strong>&lt;/p>
&lt;p>命令行下安装 &lt;code>numix-folders&lt;/code> 相关内容，可以调整 &lt;code>numix&lt;/code> 默认的棕红色&lt;/p>
&lt;pre tabindex="0">&lt;code>$ sudo pacman -S python-dulwich
$ pamac build numix-icon-theme-git
$ pamac build numix-square-icon-theme-git
$ pamac build numix-circle-icon-theme-git
$ pamac build numix-folders-git
&lt;/code>&lt;/pre>&lt;p>安装numix，进入终端，开启代理后再打开系统设置，不然可能下载不了 &lt;code>numix&lt;/code> 主题，下载界面会一直报错&lt;/p>
&lt;pre tabindex="0">&lt;code>$ export http_proxy=&amp;#39;http://127.0.0.1:8118&amp;#39;
# 打开界面后，进入主题安装，搜索 numix 进行安装
$ /usr/bin/systemsetting
&lt;/code>&lt;/pre>&lt;p>更改 &lt;code>numix&lt;/code> 默认的文件夹颜色&lt;/p>
&lt;pre tabindex="0">&lt;code># 打开界面后，自行选择颜色
$ sudo numix-folders
&lt;/code>&lt;/pre>&lt;p>&lt;strong>splash screen配置&lt;/strong>&lt;/p>
&lt;p>如下图，选择自己喜欢的安装即可
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220409-2228.png" alt="配置splash screen">&lt;/p>
&lt;p>&lt;strong>SDDM 配置&lt;/strong>&lt;/p>
&lt;p>如下图，选择自己喜欢的安装即可
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220409-2235.png" alt="sddm配置">&lt;/p>
&lt;p>&lt;strong>Plasma style配置&lt;/strong>&lt;/p>
&lt;p>如下图，选择自己喜欢的进行安装
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220410-2309.png" alt="plasma配置">&lt;/p>
&lt;p>&lt;strong>锁屏配置&lt;/strong>&lt;/p>
&lt;p>如下图，先安装 &lt;code>wallpaper plugin&lt;/code> &lt;code>flipclock&lt;/code>&lt;/p>
&lt;blockquote>
&lt;p>入口：桌面空白处右键/configure desktop and wallpaper/wallpaper type/get new plugins&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220508-2352.png" alt="flip插件安装">&lt;/p>
&lt;/blockquote>
&lt;p>如下图，配置锁屏界面&lt;/p>
&lt;blockquote>
&lt;p>入口：system settings/workspace behavior/screen locking/apperance/configure/wallpaper type/flipclock&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220508-2357.png" alt="配置锁屏">&lt;/p>
&lt;/blockquote>
&lt;h3 id="-语言设置"># 语言设置&lt;/h3>
&lt;p>切换默认语言，可以自行设置&lt;/p>
&lt;blockquote>
&lt;p>入口: &lt;code>system settings/regional settings/languages&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;ul>
&lt;li>要从中文切换为英文，添加语言选择 &lt;code>American English&lt;/code>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220409-2216.png" alt="配置语言">&lt;/li>
&lt;li>调整语言顺序
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220409-2218.png" alt="调整顺序">&lt;/li>
&lt;li>&lt;code>logout&lt;/code> 再登陆，配置生效&lt;/li>
&lt;/ul>
&lt;h3 id="-快捷键配置"># 快捷键配置&lt;/h3>
&lt;p>设置一些快捷键，方便日常使用&lt;/p>
&lt;blockquote>
&lt;p>入口：&lt;code>system settings/shortcuts/custom shortcuts/Edit/New/Global shortcuts/Commands URLs&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220409-2220.png" alt="配置快捷键">
这边添加的有：&lt;code>google-chrome&lt;/code>、&lt;code>kate&lt;/code>、&lt;code>virtualbox&lt;/code>、&lt;code>dolphin&lt;/code>&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>参考内容：&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://www.cnblogs.com/bluestorm/p/12466830.html">Windows + Linux 双系统时间同步问题解决&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://tech.shmily-qjj.top/3f34ebe3/">manjaro linux 界面优化&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pyenv/pyenv#prerequisites">pyenv安装&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/pyenv/pyenv-virtualenv">pyenv-virtualenv使用&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://forum.manjaro.org/t/root-tip-get-your-time-timezone-right-using-manjaro-windows-dual-boot/1167">Get your time/timezone right using Manjaro/Windows dual-boot&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://cloud.tencent.com/developer/article/1443927">Markdown 自动添加中英文空格&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/vinceliuice/grub2-themes">grub2-theme&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://easior.is-programmer.com/posts/214926.html">Linux上安装街机模拟器&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/miscell/" term="miscell" label="miscell"/><category scheme="https://ruisum.top/tags/manjaro/" term="manjaro" label="manjaro"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/" term="系统安装" label="系统安装"/></entry><entry><title type="text">ipmi的使用</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/ops/ipmi%E7%9A%84%E4%BD%BF%E7%94%A8/"/><id>https://ruisum.top/tech/ops/ipmi%E7%9A%84%E4%BD%BF%E7%94%A8/</id><updated>2022-04-01T22:55:50+08:00</updated><published>2022-04-01T22:55:50+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">ipmi的介绍和ipmitool工具的使用</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;p>日常工作内容，或多或少会包含部分运维相关内容，像：&lt;/p>
&lt;ul>
&lt;li>自测环境使用完成，需要重装&lt;/li>
&lt;li>服务器故障，宕机后无法进入系统定位故障原因&lt;/li>
&lt;li>修复操作系统，需要设定硬件服务器下次从光盘启动&lt;/li>
&lt;li>...&lt;/li>
&lt;/ul>
&lt;p>如果不具备一些基本条件，可能就需要蹲机房解决这些问题了。&lt;/p>
&lt;p>当硬件服务器的管理口有连接到交换机，并且在办公环境下能正常访问该交换机的话，上述的问题就比较好解决了，可以通过 &lt;code>ipmi&lt;/code> 来查看/管理服务器&lt;/p>
&lt;h3 id="什么是ipmi">什么是IPMI&lt;/h3>
&lt;p>&lt;code>IPMI&lt;/code> 的全称是 &lt;code>Intelligent Platform Management Interface&lt;/code>，智能平台管理接口的意思。&lt;/p>
&lt;p>&lt;code>IPMI&lt;/code> 原本是一种&lt;code>Intel&lt;/code>架构的企业系统的周边设备所采用的一种工业标准&lt;/p>
&lt;p>&lt;code>IPMI&lt;/code> 是一个开放的免费标准，用户无需支付额外的费用即可使用此标准。&lt;/p>
&lt;p>&lt;code>IPMI&lt;/code> 能够横跨不同的操作系统、固件和硬件平台，可以智能的监控、控制和自动上报大量服务器的运作状况，以降低服务器系统成本。&lt;/p>
&lt;h3 id="发展历史">发展历史&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>1998年&lt;code>Intel、DELL、HP&lt;/code>及&lt;code>NEC&lt;/code>共同提出&lt;code>IPMI&lt;/code>规格，可以透过网络远程控制温度、电压。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2001年IPMI从1.0版改版至1.5版，新增 PCI Management Bus等功能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2004年Intel发表了IPMI 2.0的规格，能够向下兼容IPMI 1.0及1.5的规格。新增了Console Redirection，并可以通过Port、Modem以及Lan远程管理服务器，并加强了安全、VLAN 和刀片服务器的支持性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>2014年2月11日，发表了v2.0 revision 1.1, 增加了IPv6的支持。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="ipmi-的特点">ipmi 的特点&lt;/h3>
&lt;ul>
&lt;li>&lt;code>IPMI&lt;/code> 独立于操作系统外自行运作，允许管理员在即使缺少操作系统或系统关机但有接电源的情况下，仍能远程管理系统。&lt;/li>
&lt;li>&lt;code>IPMI&lt;/code> 能在操作系统启动后活动，与系统管理功能一并使用时，还能提供加强功能（&lt;code>linux&lt;/code> 的 &lt;code>ipmi&lt;/code> 服务）。&lt;/li>
&lt;/ul>
&lt;h3 id="ipmi-的结构">ipmi 的结构&lt;/h3>
&lt;p>IPMI包含了一个以 &lt;code>基板管理控制器(BMC：baseboard management controller)&lt;/code> 为主的控制器和其他分布在不同系统模块（被称为“卫星”控制器）的管理控制器。&lt;/p>
&lt;p>同一机箱内的卫星控制器通过称为 &lt;code>智能平台管理总线（IPMB：Intelligent Platform Management Bus/Bridge）&lt;/code>的系统接口连接到BMC - 增强的&lt;code>I²C（Inter-Integrated Circuit）&lt;/code>的实现。&lt;/p>
&lt;p>BMC通过智能平台管理控制器（IPMC）总线连接到另一个机箱中的卫星控制器或其他BMC。&lt;/p>
&lt;p>它可以使用 &lt;code>远程管理控制协议（RMCP：Remote Management Control Protocol）&lt;/code> 进行管理，RMCP是该规范定义的专门电线协议。&lt;/p>
&lt;p>&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220516-2324.png" alt="ipmi结构">&lt;/p>
&lt;h3 id="bmc">BMC&lt;/h3>
&lt;p>&lt;code>IPMI&lt;/code> 的核心是 &lt;code>BMC&lt;/code>，&lt;code>BMC&lt;/code> 是一种专门的微控制器，该微控制器嵌入了计算机（通常是服务器）主板上。在工作时，所有的 &lt;code>IPMI&lt;/code> 功能都是向 &lt;code>BMC&lt;/code> 传送命令来完成的，命令使用 &lt;code>IPMI&lt;/code> 规范中规定的指令，&lt;code>BMC&lt;/code> 接收并在系統事件日志中记录事件信息。&lt;/p>
&lt;p>BMC管理系统管理软件和平台硬件之间的接口。BMC拥有专用的固件和RAM。&lt;/p>
&lt;p>计算机系统中内置的不同类型的传感器向BMC报告温度、冷却风扇速度、电源状态、操作系统（OS）状态等参数。BMC监视传感器，并可以通过网络向系统管理员发送警报，如果任何参数不在预设限制范围内，则表明系统的潜在故障。管理员还可以与BMC进行远程通信，来采取一些纠正措施，例如重置系统以使hang死的系统再次运行。这些能力降低了系统维护的成本。&lt;/p>
&lt;p>符合IPMI版本2.0的系统也可以通过LAN串行进行通信，从而可以在LAN上远程查看串行控制台输出。支持IPMI 2.0的系统通常还包括基于IP的KVM、远程虚拟媒体、嵌入式网络服务器接口功能，尽管严格地说，这些功能都不在IPMI接口标准范围内。&lt;/p>
&lt;h2 id="ipmitool-的使用">ipmitool 的使用&lt;/h2>
&lt;p>ipmitool 是一种可用在 linux 系统下的命令行方式的 ipmi 平台管理工具，它支持 ipmi 1.5 规范（最新的规范为 ipmi 2.0），通过它可以实现获取感测器的信息、显示系统日志内容、网路远程开关机等功能。&lt;/p>
&lt;h3 id="本地管理">本地管理&lt;/h3>
&lt;ul>
&lt;li>ipmitool 的安装&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装相应包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ yum install OpenIPMI OpenIPMI-tools
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动 ipmi 服务，才能在 linux 上使用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ systemctl &lt;span class="nb">enable&lt;/span> ipmi.service&lt;span class="p">;&lt;/span> systemctl start ipmi.service
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 要能够正常的使用 ipmi 功能，需要加载相应的 ipmi 模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe ipmi_msghandler
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe ipmi_devintf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe ipmi_si
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe ipmi_poweroff
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ modprobe ipmi_watchdog
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取信道信息（一般是信道1）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="k">for&lt;/span> i in &lt;span class="k">$(&lt;/span>seq &lt;span class="m">1&lt;/span> 14&lt;span class="k">)&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">do&lt;/span> ipmitool lan print &lt;span class="nv">$i&lt;/span> 2&amp;gt;/dev/null &lt;span class="p">|&lt;/span> grep -q ^Set &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> Channel &lt;span class="nv">$i&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">done&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Channel &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>查看固件版本&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ipmitool mc info
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>重置 &lt;code>MC（management controller）&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 两种方式，硬重置/软重置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool mc reset &lt;span class="o">[&lt;/span> warm &lt;span class="p">|&lt;/span> cold &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>输出传感器信息（sensor）&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ipmitool sdr list &lt;span class="c1"># list sensor&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sdr &lt;span class="nb">type&lt;/span> list
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sdr &lt;span class="nb">type&lt;/span> Temperature
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sdr &lt;span class="nb">type&lt;/span> Fan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sdr &lt;span class="nb">type&lt;/span> &lt;span class="s1">&amp;#39;Power Supply&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>chassis 相关命令&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ipmitool chassis status
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool chassis identify &lt;span class="o">[]&lt;/span> &lt;span class="c1"># turn on front panel identify light (default 15s) &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool &lt;span class="o">[&lt;/span>chassis&lt;span class="o">]&lt;/span> power soft &lt;span class="c1"># initiate a soft-shutdown via acpi &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool &lt;span class="o">[&lt;/span>chassis&lt;span class="o">]&lt;/span> power cycle &lt;span class="c1"># issue a hard power off, wait 1s, power on &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool &lt;span class="o">[&lt;/span>chassis&lt;span class="o">]&lt;/span> power off &lt;span class="c1"># issue a hard power off &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool &lt;span class="o">[&lt;/span>chassis&lt;span class="o">]&lt;/span> power on &lt;span class="c1"># issue a hard power on &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool &lt;span class="o">[&lt;/span>chassis&lt;span class="o">]&lt;/span> power reset &lt;span class="c1"># issue a hard reset&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>修改下一次系统启动的引导设备&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ipmitool chassis bootdev pxe &lt;span class="c1"># via pxe&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool chassis bootdev cdrom &lt;span class="c1"># via cdrom&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool chassis bootdev bios &lt;span class="c1"># into bios setup&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>日志相关&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ipmitool sel info
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sel list &lt;span class="c1"># show system event log&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sel elist &lt;span class="c1"># extended list (see manpage) &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool sel clear
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>用户配置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打印本机用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool user list &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool channel setaccess &lt;span class="m">1&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="nv">callin&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="nv">ipmi&lt;/span>&lt;span class="o">=&lt;/span>on &lt;span class="nv">link&lt;/span>&lt;span class="o">=&lt;/span>on &lt;span class="nv">privilege&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool user &lt;span class="nb">set&lt;/span> name &lt;span class="m">2&lt;/span> root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool user &lt;span class="nb">set&lt;/span> password &lt;span class="m">2&lt;/span> password@123
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>网络配置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 打印信道1上配置的 IP 信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool lan print &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置信道1的 IP 相关内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool lan &lt;span class="nb">set&lt;/span> &lt;span class="m">1&lt;/span> ipsrc &lt;span class="o">[&lt;/span> static &lt;span class="p">|&lt;/span> dhcp &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool lan &lt;span class="nb">set&lt;/span> &lt;span class="m">1&lt;/span> ipaddr &lt;span class="o">{&lt;/span>YOUR DESIRED IP&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool lan &lt;span class="nb">set&lt;/span> &lt;span class="m">1&lt;/span> netmask &lt;span class="o">{&lt;/span>YOUR NETMASK&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool lan &lt;span class="nb">set&lt;/span> &lt;span class="m">1&lt;/span> defgw ipaddr 10.0.1.1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool bmc reset cold
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="远程管理">远程管理&lt;/h3>
&lt;p>若需要使用 &lt;code>ipmi&lt;/code> 远程管理其他主机，则需要在 &lt;code>ILO&lt;/code> 或 &lt;code>DRAC&lt;/code> 卡或 &lt;code>ipmitool&lt;/code> 在 &lt;code>OS&lt;/code> 上配置用户和网络。&lt;/p>
&lt;p>配置 &lt;code>LAN&lt;/code> 设置后，就可以使用 &lt;code>ipmitool&lt;/code> 的 &lt;code>lan&lt;/code> 接口进行远程连接，管理其他同网段的服务器。&lt;/p>
&lt;ul>
&lt;li>ipmitool 远端管理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 远程管理机器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool -I lanplus -U &amp;lt;username&amp;gt; -P &amp;lt;password&amp;gt; -H &amp;lt;BMC_IP or Hostname&amp;gt; chassis power &amp;lt;status&lt;span class="p">|&lt;/span>on&lt;span class="p">|&lt;/span>off&lt;span class="p">|&lt;/span>cycle&lt;span class="p">|&lt;/span>reset&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重置 BMC&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool bmc reset cold
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 激活 SOL 系统控制台&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool -I lanplus -U &amp;lt;username&amp;gt; -P &amp;lt;password&amp;gt; -H &amp;lt;BMC_IP or Hostname&amp;gt; sol activate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 退出 SOL 系统控制台&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ipmitool -I lanplus -U &amp;lt;username&amp;gt; -P &amp;lt;password&amp;gt; -H &amp;lt;BMC_IP or Hostname&amp;gt; sol activate
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="共享口和独享口">共享口和独享口&lt;/h2>
&lt;p>物理服务器会有一个单独的 &lt;code>BMC&lt;/code> 管理口，一般是千兆网口; 进入 &lt;code>BIOS&lt;/code> 设置，配置 &lt;code>BMC IP&lt;/code>，IP 地址生效的网口就是这个管理口。
这个管理口在 &lt;code>BIOS&lt;/code> 中可以配置两种模式：共享模式、独享模式&lt;/p>
&lt;h3 id="共享模式">共享模式&lt;/h3>
&lt;p>共享模式可以在 &lt;code>BIOS&lt;/code> 中设置，要清楚共享模式的实现，需要先了解 &lt;code>网络控制器边带接口：NC-SI（network controller sideband interface）&lt;/code>，这一技术是用来实现 &lt;code>BMC&lt;/code> 芯片和以太网控制器之间信息传递的，它使得 &lt;code>BMC&lt;/code> 芯片能够像使用独立管理网口那样使用主板上的网络接口。&lt;br>
NC-SI 支持将 &lt;code>BMC(baseboard management controller)&lt;/code> 连接到服务器计算机系统中的一个或多个网络接口控制器 &lt;code>(NIC：network interface controllers)&lt;/code>，以实现带外系统管理。这使得对应网口除了常规的主机流量外，还可以接受 &lt;code>BMC&lt;/code> 的管理网流量。&lt;br>
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/05/20220518-2329.png" alt="NC-SI">&lt;/p>
&lt;p>简单理解：&lt;code>BMC&lt;/code> 其实是一个单片机，它有自己独立的 &lt;code>IO&lt;/code> 设备，而独立网口就是其中之一。将&lt;code>BMC&lt;/code>芯片和网络控制器之间互联，并通过 &lt;code>NC-SI&lt;/code> 技术使得 &lt;code>BMC&lt;/code> 芯片能够使用网络控制器上的接口。&lt;/p>
&lt;h4 id="共享模式优势">共享模式优势&lt;/h4>
&lt;p>如下几方面：&lt;/p>
&lt;ul>
&lt;li>减少物料成本：可以在物理机系统需要配置千兆网时，节省一根网线&lt;/li>
&lt;li>减少交换机投入：独立网口会多占用一个交换机端口，增加交换机采购数量，使用共享模式减少了这部分的支出和额外的交换机运维成本&lt;/li>
&lt;li>减少人力成本：如果业务网只需要接一根网线，共享方案可以减少一半的布线人力支出；&lt;/li>
&lt;/ul>
&lt;h4 id="共享模式潜在风险">共享模式潜在风险&lt;/h4>
&lt;p>如下：&lt;/p>
&lt;ul>
&lt;li>系统千兆网和 &lt;code>BMC&lt;/code> 管理网使用的是同一个物理网口，网口故障时，&lt;code>BMC&lt;/code> 和 千兆网将同时不可访问，单点故障&lt;/li>
&lt;/ul>
&lt;h4 id="共享模式配置">共享模式配置&lt;/h4>
&lt;p>不同型号硬件服务器界面可能不一样，实际的配置内容相同，都是通过 &lt;code>BIOS&lt;/code> 或者 &lt;code>BMC WEB界面&lt;/code> 将 &lt;code>IPMI&lt;/code> 访问方式修改为 &lt;code>share（共享模式）&lt;/code>。&lt;/p>
&lt;h3 id="独享模式">独享模式&lt;/h3>
&lt;p>独享模式是默认模式，&lt;code>BMC&lt;/code> 管理网单独使用一个网口，不和系统共用。&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;h3 id="python接口使用">python接口使用&lt;/h3>
&lt;p>&lt;code>ipmi&lt;/code> 的 &lt;code>python&lt;/code> 库是 &lt;code>python-ipmi&lt;/code>，具体内容可以参考：&lt;a href="https://github.com/kontron/python-ipmi">python-ipmi&lt;/a>&lt;/p>
&lt;ul>
&lt;li>使用 &lt;code>pip&lt;/code> 安装
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pip 直接安装&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ pip install python-ipmi
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>接口调用示例
如下示例，使用 &lt;code>ipmitool&lt;/code> 作为网络和串行接口的后端来设置接口和连接。
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pyipmi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pyipmi.interfaces&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Supported interface_types for ipmitool are: &amp;#39;lan&amp;#39; , &amp;#39;lanplus&amp;#39;, and &amp;#39;serial-terminal&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">interface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pyipmi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">interfaces&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_interface&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ipmitool&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">interface_type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;lan&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pyipmi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">interface&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pyipmi&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Target&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mh">0x82&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_routing&lt;/span>&lt;span class="p">([(&lt;/span>&lt;span class="mh">0x81&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">),(&lt;/span>&lt;span class="mh">0x20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mh">0x82&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">7&lt;/span>&lt;span class="p">)])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_session_type_rmcp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;10.0.0.1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">623&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">set_auth_type_user&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;admin&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">establish&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">connection&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get_device_id&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 对应的 ipmitool 命令： &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ipmitool -I lan -H 10.0.0.1 -p 623 -U &amp;#34;admin&amp;#34; -P &amp;#34;admin&amp;#34; -t 0x82 -b 0 -l 0 raw 0x06 0x01&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="服务器接线">服务器接线&lt;/h3>
&lt;p>需要使用到 &lt;code>PXE&lt;/code> 和 &lt;code>ipmi&lt;/code> 的几种常见接线方式：&lt;/p>
&lt;ul>
&lt;li>系统 &lt;code>PXE&lt;/code> 使用服务器 &lt;code>BMC&lt;/code> 管理口，&lt;code>BMC&lt;/code> 是共享模式，&lt;code>BMC&lt;/code> 和 &lt;code>PXE&lt;/code> 流量都要走同一个千兆交换机口&lt;/li>
&lt;li>系统 &lt;code>PXE&lt;/code> 使用服务器千兆口，&lt;code>BMC&lt;/code> 是独享模式，&lt;code>BMC&lt;/code> 和 &lt;code>PXE&lt;/code> 流量各走千兆交换机一个口&lt;/li>
&lt;li>系统 &lt;code>PXE&lt;/code> 使用服务器万兆口，&lt;code>BMC&lt;/code> 是独享模式，万兆网作为 &lt;code>PXE&lt;/code> 口&lt;/li>
&lt;/ul>
&lt;h3 id="参考链接">参考链接&lt;/h3>
&lt;p>参考内容：&lt;br>
&lt;a href="https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface">https://en.wikipedia.org/wiki/Intelligent_Platform_Management_Interface&lt;/a>&lt;br>
&lt;a href="https://www.easyatm.com.tw/wiki/ipmitool">https://www.easyatm.com.tw/wiki/ipmitool&lt;/a>&lt;br>
&lt;a href="https://www.ibm.com/docs/en/power9/0000-FUL?topic=msbui-common-ipmi-commands-2">https://www.ibm.com/docs/en/power9/0000-FUL?topic=msbui-common-ipmi-commands-2&lt;/a>&lt;br>
&lt;a href="https://serverfault.com/questions/259792/how-does-ipmi-sideband-share-the-ethernet-port-with-the-host">https://serverfault.com/questions/259792/how-does-ipmi-sideband-share-the-ethernet-port-with-the-host&lt;/a>&lt;br>
&lt;a href="https://developer.aliyun.com/article/544871">https://developer.aliyun.com/article/544871&lt;/a>&lt;br>
&lt;a href="https://github.com/kontron/python-ipmi">https://github.com/kontron/python-ipmi&lt;/a>&lt;/p></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/ops/" term="ops" label="ops"/><category scheme="https://ruisum.top/tags/ops/" term="ops" label="ops"/><category scheme="https://ruisum.top/tags/ipmi/" term="ipmi" label="ipmi"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/></entry><entry><title type="text">Openssl Toolkit使用</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/certificate/openssl-toolkit%E4%BD%BF%E7%94%A8/"/><id>https://ruisum.top/tech/basics/certificate/openssl-toolkit%E4%BD%BF%E7%94%A8/</id><updated>2022-03-24T22:37:26+08:00</updated><published>2022-03-24T22:37:26+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">一种openssl 工具集, 满足各种证书生成和转换需求</summary><content type="html">&lt;blockquote>
&lt;p>工具下载: &lt;a href="https://ruisum.top/uploads/openssl-toolkit.sh">openssl-toolkit&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="说明">说明&lt;/h2>
&lt;p>&lt;code>openssl-toolkit&lt;/code> 是一个封装好的 &lt;code>openssl&lt;/code> 命令行工具(&lt;code>shell&lt;/code> 脚本), 可以用来执行证书管理等相关任务.&lt;/p>
&lt;h2 id="工具使用">工具使用&lt;/h2>
&lt;p>下载完成后, 上传文件至可执行 &lt;code>shell&lt;/code> 脚本的环境&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 执行脚本, 查看帮助/说明内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ bash openssl-toolkit.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ____ __________ ______ ____ _ __
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / __ &lt;span class="se">\_&lt;/span>__ ___ ___ / __/ __/ / ___/_ __/__ ___ / / /__ &lt;span class="o">(&lt;/span>_&lt;span class="o">)&lt;/span> /_
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / /_/ / _ &lt;span class="se">\/&lt;/span> -_&lt;span class="o">)&lt;/span> _ &lt;span class="se">\_\ \_\ \/&lt;/span> /_/___// / / _ &lt;span class="se">\/&lt;/span> _ &lt;span class="se">\/&lt;/span> / &lt;span class="err">&amp;#39;&lt;/span>_// / __/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="se">\_&lt;/span>___/ .__/&lt;span class="se">\_&lt;/span>_/_//_/___/___/____/ /_/ &lt;span class="se">\_&lt;/span>__/&lt;span class="se">\_&lt;/span>__/_/_/&lt;span class="se">\_\/&lt;/span>_/&lt;span class="se">\_&lt;/span>_/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> /_/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Submenu options:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 1. Create certificates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 2. Convert certificates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 3. Locally verify certificates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 4. Externally verify certificates &lt;span class="o">(&lt;/span>s_client&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 5. Output certificate information
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> q. Quit
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Selection:
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="create-certificates创建证书">&lt;code>Create certificates&lt;/code>(&lt;strong>创建证书&lt;/strong>)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Self-Signed SSL Certificate (key, csr, crt)&lt;/p>
&lt;blockquote>
&lt;p>生成自签名 SSL 证书&lt;/p>
&lt;/blockquote>
&lt;p>自签名证书的优点:&lt;/p>
&lt;ul>
&lt;li>免费(自己生成)&lt;/li>
&lt;li>随时签发&lt;/li>
&lt;li>方便(证书过期处理)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为, 以下 ${pass} 为执行过程中需要手动输入的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl genrsa -passout pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span> -des3 -out server.key &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 生成密钥文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># genrsa : 生成一个 rsa key 文件, 也即密钥文件, 此处只会生成私钥文件, 不会生成公钥, 因为公钥提取自私钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -passout: 对生成的 RSA 秘钥文件施加密码保护, 结合 pass 使用&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pass:${pass} : ${pass} 为交互输入时给定的密码, 这里作用是设置私钥的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -des3: Triple-DES Cipher, 指定加密私钥文件用的算法, 三重数据加密算法的意思, 对私钥加密密码 ${pass} &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 应用三次DES加密算法&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2048: 指生成多少位的私钥, 还可以为512/1024等&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl req -sha256 -new -key server.key -out server.csr -passin pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 通过 server.key 私钥, 生成 server.csr 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果要一个 CA(Certificate Authority) 认证机构颁发 CRT 证书的话, 需要先提供&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 一个 CSR(Certificate Signing Request) 请求文件.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 这个 CSR 请求文件中, 会包含公钥(Public Key), 以及一些申请者信息 (DN Distingusied Name).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DN 信息中最重要的部分是 Common Name (CN), 需要与后续安放 CRT 证书的服务器 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># FQDN(Fully Qualified Domain Name) 完全一致才行. &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># openssl-toolkit 会在执行过程中要求输入 DN 信息, 请按实际情况填写相应内容.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># req: PKCS#10 X.509 CSR 管理相关&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -new: 生成一个新的 CSR 请求文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -key: 指定已有的私钥文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -passin: 指定私钥文件的加密密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -req -sha256 -days &lt;span class="nv">$certDays&lt;/span> -in &lt;span class="nv">$csr&lt;/span> -signkey &lt;span class="nv">$key&lt;/span> -out &lt;span class="nv">$crt&lt;/span> -passin pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 3. 根据已有的密钥文件 ${key} 和请求文件 ${csr} 来产生自签名 CRT(certificate) 证书文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -days: 指定生成的证书有效时间&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -in: 指定 CSR 请求文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -signkey: 指定私钥文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -out: 指定生生成的 CRT 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl rsa -in &lt;span class="nv">$key&lt;/span> -out nopassword.key -passin pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat nopassword.key &lt;span class="si">${&lt;/span>&lt;span class="nv">crt&lt;/span>&lt;span class="si">}&lt;/span> &amp;gt;&amp;gt; server.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -f nopassword.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 4. 生成 server.pem 文件, 保存不加密的私钥和 CRT 证书内容&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Private Key &amp;amp; Certificate Signing Request (key, csr)&lt;/p>
&lt;blockquote>
&lt;p>创建私钥和证书签名请求(&lt;code>CSR&lt;/code>)&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为, ${pass} 为执行时手动交互输入&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl genrsa -passout pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span> -des3 -out server.key &lt;span class="m">2048&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1. 生成密钥文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl req -sha256 -new -key server.key -out server.csr -passin pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 2. 通过 server.key 私钥, 生成 server.csr 文件, 需要交互输入 DN 内容&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>PEM with key and entire trust chain&lt;/p>
&lt;blockquote>
&lt;p>生成包含整个证书链和 &lt;code>key&lt;/code> 的 &lt;code>PEM&lt;/code> 文件&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成 server.pem 文件, 保存不加密的私钥和 CRT 证书内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 证书链有多少级, 则执行多少次如下内容, 注意区分每次的 ${key} 和 ${crt}: &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl rsa -in &lt;span class="nv">$key&lt;/span> -out nopassword.key -passin pass:&lt;span class="si">${&lt;/span>&lt;span class="nv">pass&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat nopassword.key &lt;span class="si">${&lt;/span>&lt;span class="nv">crt&lt;/span>&lt;span class="si">}&lt;/span> &amp;gt;&amp;gt; server.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rm -f nopassword.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="convert-certificates格式转换">&lt;code>Convert certificates&lt;/code>(&lt;strong>格式转换&lt;/strong>)&lt;/h3>
&lt;p>&lt;a href="need.todo2">不同格式证书说明&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>PEM -&amp;gt; DER&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>PEM&lt;/code> 转换为 &lt;code>DER&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -outform der -in server.pem -out server.der
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># x509: X.509证书数据管理&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>PEM -&amp;gt; P7B&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>PEM&lt;/code> 转换为 &lt;code>P7B&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl crl2pkcs7 -nocrl -certfile server.pem -out server.p7b
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crl2pkcs7: CRL to PKCS#7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -nocrl: 通常 CRL 包含在输出文件中. 使用此选项时, 输出文件中不会包含 CRL, 并且不会从输入文件中读取 CRL.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># crl: (Certificate Revocation List)证书吊销列表, 是 PKI 系统中的一个结构化数据文件, &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 该文件包含了证书颁发机构 (CA) 已经吊销的证书的序列号及其吊销日期. CRL 文件中还包含证书颁发机构信息、&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 吊销列表失效时间和下一次更新时间, 以及采用的签名算法等.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>PEM -&amp;gt; PFX&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>PEM&lt;/code> 转换为 &lt;code>PFX&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs12 -export -out server.pfx -inkey server.pem -in server.pem -certfile server.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pkcs12: PKCS#12 数据管理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 转换为 PFX 格式, 需要交互输入加密密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -inkey: 私钥文件, 此处即 server.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -in: 指定要解析的 PKCS＃12 文件的文件名, 此处为 server.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -certfile: 要从中读取其他证书的文件名, 此处仍是 server.pem&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>DER -&amp;gt; PEM&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>DER&lt;/code> 转换为 &lt;code>PEM&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -inform der -in server.der -out server.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># x509: X.509 证书数据管理&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>P7B -&amp;gt; PEM&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>P7B&lt;/code> 转换为 &lt;code>PEM&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs7 -print_certs -in server.p7b -out server.pem
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pkcs12: PKCS#7 数据管理&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -print_certs: 打印出文件中包含的任何证书或 CRL.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>P7B -&amp;gt; PFX&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>P7B&lt;/code> 转换为 &lt;code>PFX&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs7 -print_certs -in server.p7b -out server.pfx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>PFX -&amp;gt; PEM&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>PFX&lt;/code> 转换为 &lt;code>PEM&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs12 -in server.pfx -out server.pem -nodes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -nodes: 不加密私钥&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="verify-certificates证书校验">&lt;code>Verify certificates&lt;/code>(&lt;strong>证书校验&lt;/strong>)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>CSR is a public key from the private key&lt;/p>
&lt;blockquote>
&lt;p>校验 &lt;code>CSR&lt;/code> 是来自私钥的公钥&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -noout: 防止输出请求的编码版本.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -modules: 打印出请求中包含的公钥的模值.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl rsa -noout -modulus -in server.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl req -noout -modulus -in server.csr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Signed certificate is the public key from the private key&lt;/p>
&lt;blockquote>
&lt;p>校验签名证书是来自私钥的公钥&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -noout: 防止输出请求的编码版本.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -modules: 打印出请求中包含的公钥的模值.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -noout -modulus -in server.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl rsa -noout -modulus -in server.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Chain file applies to the signed certificate (complete ssl chain)&lt;/p>
&lt;blockquote>
&lt;p>校验证书链适用于签​​名证书（包含完整的 &lt;code>ssl&lt;/code> 链）&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># verify: 证书校验&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -purpose: 证书的预期用途. 如果未指定此选项, verify 将不会在链验证期间考虑证书用途.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 当前接受的用途是 sslclient、sslserver、nssslserver、smimesign、smimeencrypt.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl verify -verbose -purpose sslserver -CAfile server.pem server.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Check date validity of certificates&lt;/p>
&lt;blockquote>
&lt;p>检查证书的日期有效性&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -noout: 防止输出请求的编码版本.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -enddate: 打印出证书的到期日期, 即 notAfter 日期.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -checkend &lt;span class="m">7776000&lt;/span> -in server.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -noout -enddate -in server.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="test-ssl-server测试-ssl-服务器">&lt;code>Test ssl server&lt;/code>(&lt;strong>测试 &lt;code>ssl&lt;/code> 服务器&lt;/strong>)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>SSL Certificate handshake&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>SSL&lt;/code> 证书能否完成握手连接&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl s_client -connect &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$server&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>:&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$port&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>SSL Server date validity&lt;/p>
&lt;blockquote>
&lt;p>检查 &lt;code>SSL&lt;/code> 服务器日期有效性&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl s_client -connect &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$server&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> 2&amp;gt;&lt;span class="p">&amp;amp;&lt;/span>&lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> openssl x509 -text &lt;span class="p">|&lt;/span> grep -i -B1 -A3 validity
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Permitted Protocols&lt;/p>
&lt;blockquote>
&lt;p>检查允许的协议&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ timeout &lt;span class="m">3&lt;/span> openssl s_client -connect www.baidu.com:443 -no_ssl3 -no_tls1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ timeout &lt;span class="m">3&lt;/span> openssl s_client -connect www.baidu.com:443 -cipher NULL,LOW
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h3 id="output-certificate-information输出证书信息">&lt;code>Output certificate information&lt;/code>(&lt;strong>输出证书信息&lt;/strong>)&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>Output the details from a certifticate sign request&lt;/p>
&lt;blockquote>
&lt;p>从证书签名请求中(&lt;code>CSR&lt;/code>)输出详细信息&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl req -text -in &lt;span class="si">${&lt;/span>&lt;span class="nv">csr&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Output the details from a signed certificate&lt;/p>
&lt;blockquote>
&lt;p>从签名证书中输出详细信息&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 实际使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -text -in &lt;span class="si">${&lt;/span>&lt;span class="nv">crt&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="什么是-dn">什么是 &lt;code>DN&lt;/code>&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>什么是 &lt;code>DN&lt;/code>: &lt;code>Distingusied Name&lt;/code>
专有名称 (DN) 是描述证书中的标识信息的术语, 是证书本身的一部分.&lt;/p>
&lt;p>向不同的 &lt;code>CA&lt;/code> 申请证书, 对应要求的 &lt;code>DN&lt;/code> 信息不一样.&lt;/p>
&lt;p>每个 &lt;code>CA&lt;/code> 都有一个策略来确定 &lt;code>CA&lt;/code> 需要哪些识别信息来颁发证书. 像电子邮件地址这类需要的信息就很少, 其他的一些公共 &lt;code>CA&lt;/code> 可能需要更多的信息, 并在颁发证书之前要严格地证明该识别信息.&lt;/p>
&lt;p>&lt;strong>为任一类型的证书提供的 DN 信息包括：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Certificate owner's common name&lt;/li>
&lt;li>Organization&lt;/li>
&lt;li>Organizational unit&lt;/li>
&lt;li>Locality or city&lt;/li>
&lt;li>State or province&lt;/li>
&lt;li>Country or region&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>一些额外的 &lt;code>DN&lt;/code> 信息，包括：&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Version 4 or 6 IP address&lt;/li>
&lt;li>Fully qualified domain name&lt;/li>
&lt;li>E-mail address&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>以下列出一些 &lt;code>DN&lt;/code> 首选项&lt;/p>
&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:center">&lt;strong>DN&lt;/strong>&lt;/th>
&lt;th style="text-align:left">&lt;strong>信息&lt;/strong>&lt;/th>
&lt;th style="text-align:left">&lt;strong>描述&lt;/strong>&lt;/th>
&lt;th style="text-align:left">&lt;strong>示例&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:center">CN&lt;/td>
&lt;td style="text-align:left">Common Name&lt;/td>
&lt;td style="text-align:left">希望被保护的完全限定域名(&lt;code>FQDN&lt;/code>)&lt;/td>
&lt;td style="text-align:left">&lt;code>*.wikipedia.org&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">O&lt;/td>
&lt;td style="text-align:left">Organization Name&lt;/td>
&lt;td style="text-align:left">通常是公司或实体的法定名称，应包含任何后缀，例如 &lt;code>Ltd. Inc.&lt;/code> 或 &lt;code>Corp.&lt;/code>&lt;/td>
&lt;td style="text-align:left">Wikimedia Foundation, Inc.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">OU&lt;/td>
&lt;td style="text-align:left">Organizational Unit&lt;/td>
&lt;td style="text-align:left">内部组织部门/部门名称&lt;/td>
&lt;td style="text-align:left">&lt;code>IT&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">L&lt;/td>
&lt;td style="text-align:left">Locality&lt;/td>
&lt;td style="text-align:left">镇、市、村等的名称&lt;/td>
&lt;td style="text-align:left">&lt;code>ShenZhen&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">ST&lt;/td>
&lt;td style="text-align:left">State&lt;/td>
&lt;td style="text-align:left">省、地区、县或州, 不可以缩写&lt;/td>
&lt;td style="text-align:left">&lt;code>GuangDong&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">C&lt;/td>
&lt;td style="text-align:left">Country&lt;/td>
&lt;td style="text-align:left">组织所在国家/地区的两个字母 &lt;code>ISO&lt;/code> 代码&lt;/td>
&lt;td style="text-align:left">&lt;code>CN&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:center">EMAIL&lt;/td>
&lt;td style="text-align:left">Email Address&lt;/td>
&lt;td style="text-align:left">组织联系人，通常是证书管理员或 &lt;code>IT&lt;/code> 部门的联系人&lt;/td>
&lt;td style="text-align:left">&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="cacacrt单双向认证">&lt;code>CA&lt;/code>/&lt;code>ca.crt&lt;/code>/单双向认证&lt;/h2>
&lt;blockquote>
&lt;p>这一段是截取 &lt;a href="https://blog.csdn.net/espressif/article/details/78541410">SSL-TLS 双向认证：SSL-TLS 工作原理&lt;/a> 中的部分内容, 因为已经讲解的很清楚, 直接粘贴了&lt;/p>
&lt;/blockquote>
&lt;p>&lt;code>CA&lt;/code> 全称为 &lt;code>Certificate Authotiry&lt;/code>, 证书授权中心, 又被称为根证书. 它类似于工商管理局, 给公司企业颁发营业执照.
&lt;code>CA&lt;/code> 有两大主要特性：&lt;/p>
&lt;ul>
&lt;li>&lt;code>CA&lt;/code> 本身是受国际认可, 可以被信任的&lt;/li>
&lt;li>&lt;code>CA&lt;/code> 需要给信任的对象颁发证书&lt;/li>
&lt;/ul>
&lt;p>哪里可以查看证书:&lt;/p>
&lt;ul>
&lt;li>&lt;code>Chrome&lt;/code> 浏览器：设置 -&amp;gt; 高级 -&amp;gt; 管理证书 -&amp;gt; 授权中心&lt;/li>
&lt;li>&lt;code>Ubuntu&lt;/code>: &lt;code>/etc/ssl/certs&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;code>CA&lt;/code> 的证书 &lt;code>ca.crt&lt;/code> 与 &lt;code>SSL Server&lt;/code> 的证书 &lt;code>Server.crt&lt;/code> 的关系&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;code>SSL Server&lt;/code> 自己生成一个密钥 &lt;code>KEY&lt;/code>, 内置包含 &lt;code>Private Key/Public Key&lt;/code>, 私钥加密, 公钥解密.&lt;/li>
&lt;li>&lt;code>Server&lt;/code> 利用密钥生成一个请求文件 &lt;code>server.csr&lt;/code>, 请求文件中包含有 &lt;code>Server&lt;/code> 的一些信息, 如域名/申请者/公钥等.&lt;/li>
&lt;li>&lt;code>Server&lt;/code> 将请求文件 &lt;code>server.csr&lt;/code> 递交给 &lt;code>CA&lt;/code>, 然后 &lt;code>CA&lt;/code> 对其验明正身后, 将用 &lt;code>ca.key&lt;/code> 和 &lt;code>server.csr&lt;/code> 加密生成 &lt;code>server.crt&lt;/code> 证书.&lt;/li>
&lt;li>由于 &lt;code>ca.key&lt;/code> 和 &lt;code>ca.crt&lt;/code> 是一对, 于是以后客户端通过使用 &lt;code>ca.crt&lt;/code> 就可以解密认证 &lt;code>server.crt&lt;/code> 证书了.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>什么是 &lt;code>SSL/TLS&lt;/code> 单向认证/双向认证&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>单向认证, 指的是只有一个对象校验对端的证书合法性. 通常都是 &lt;code>client&lt;/code> 来校验服务器的合法性. 那么 &lt;code>client&lt;/code> 需要一个 &lt;code>ca.crt&lt;/code>, 服务器需要 &lt;code>server.crt，server.key&lt;/code>.&lt;/li>
&lt;li>双向认证, 指的是相互校验, 服务器需要校验每个 &lt;code>client&lt;/code>, &lt;code>client&lt;/code> 也需要校验服务器. &lt;code>server&lt;/code> 需要 &lt;code>server.key&lt;/code>,&lt;code>server.crt&lt;/code>,&lt;code>ca.crt&lt;/code>；&lt;code>client&lt;/code> 需要 &lt;code>client.key&lt;/code>, &lt;code>client.crt&lt;/code>, &lt;code>ca.crt&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>本文内容参考自:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://community.microfocus.com/cyberres/edirectory/w/edirectorytips/25358/openssl-toolkit">OpenSSL Toolkit&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.ibm.com/docs/en/i/7.1?topic=concepts-distinguished-name">Distinguished name&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://en.wikipedia.org/wiki/Certificate_signing_request">Certificate_signing_request&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://blog.csdn.net/espressif/article/details/78541410">SSL-TLS 双向认证：SSL-TLS 工作原理&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/certificate/" term="certificate" label="certificate"/><category scheme="https://ruisum.top/tags/openssl/" term="openssl" label="openssl"/><category scheme="https://ruisum.top/tags/%E8%AF%81%E4%B9%A6/" term="证书" label="证书"/><category scheme="https://ruisum.top/tags/ca/" term="CA" label="CA"/></entry><entry><title type="text">什么是PFX文件</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/certificate/%E4%BB%80%E4%B9%88%E6%98%AFpfx%E6%96%87%E4%BB%B6/"/><id>https://ruisum.top/tech/basics/certificate/%E4%BB%80%E4%B9%88%E6%98%AFpfx%E6%96%87%E4%BB%B6/</id><updated>2022-03-23T22:30:13+08:00</updated><published>2022-03-23T22:30:13+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">PFX 是什么, 我们日常有哪些场景会使用到</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;p>&lt;code>PFX&lt;/code> 文件是 &lt;code>PKCS#12&lt;/code> 格式的证书, 它包含 &lt;code>SSL&lt;/code> 证书（公钥）和相应的私钥.&lt;/p>
&lt;blockquote>
&lt;p>&lt;code>PKCS#12&lt;/code> 是一个容器标准, 它可以保存 &lt;code>X509&lt;/code> 客户端证书和相应的私钥, 以及（可选）签署 &lt;code>X509&lt;/code> 客户端证书的 &lt;code>CA&lt;/code> 的 &lt;code>X509&lt;/code> 证书&lt;/p>
&lt;/blockquote>
&lt;p>大多数证书颁发机构不会使用私钥颁发证书, 只会以 &lt;code>.cer、.crt &lt;/code>和&lt;code>.p7b&lt;/code>格式颁发或共享证书, 在绝大多数情况下, 这些格式的证书是不包含私钥的.&lt;/p>
&lt;p>在有些场景下, 包含了私钥的 &lt;code>.pfx&lt;/code> 格式证书才能满足需求, 比如: &lt;a href="https://need.todo1/">kubernetes 作为 slave 对接 jenkins&lt;/a>&lt;/p>
&lt;h2 id="证书和-pfx-文件的区别">证书和 PFX 文件的区别&lt;/h2>
&lt;ul>
&lt;li>证书名义上是公钥的容器. 证书内容包括公钥,服务器名称,有关服务器的一些额外信息及由证书颁发机构 (CA) 计算的签名. 当服务器将其公钥发送给客户端时, 实际上发送了它的证书和其他一些证书(包含签署其证书的 &lt;code>CA&lt;/code> 的公钥的证书, 以及签署 &lt;code>CA&lt;/code> 证书的 &lt;code>CA&lt;/code> 的证书, 依此类推). 证书本质上是公共对象.&lt;/li>
&lt;li>&lt;code>.pfx&lt;/code> 文件是一个 &lt;code>PKCS#12&lt;/code> 存档：一个可以包含许多对象的包, 并且带有可选的密码保护；通常情况下, &lt;code>PKCS#12&lt;/code> 存档包含证书（可能带有各种 CA 证书）和相应的私钥.&lt;/li>
&lt;/ul>
&lt;h2 id="pfx-的安全性">PFX 的安全性&lt;/h2>
&lt;p>因为 &lt;code>PFX&lt;/code> 包含了私钥, 在创建 &lt;code>PFX&lt;/code> 时, 需要确保&lt;code>PFX&lt;/code> 文件有设置密码, 避免证书被滥用. 设置的密码应该有一定复杂度, 不然设置了和没设置一样, 很容易被破解.&lt;/p>
&lt;h2 id="pfx-的一些操作">PFX 的一些操作&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用 &lt;code>openssl&lt;/code> 创建 &lt;code>PFX&lt;/code>&lt;/p>
&lt;p>todo: 在 &lt;code>openssl&lt;/code> 中, 必须在单个 &lt;code>PFX (PKCS#12)&lt;/code> 文件中使用单独存储的密钥, 如下将密钥加入 PFX：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 两次输入密码后, 将在当前目录中创建 output.pfx 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs12 -export -in linux_cert+ca.pem -inkey privateky.key -out output.pfx
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>从 &lt;code>pfx&lt;/code> 文件中提取内容&lt;/p>
&lt;p>可以从 &lt;code>pfx&lt;/code> 文件中提取出私钥等, 需要知道创建 &lt;code>pfx&lt;/code> 文件时设置的密码.
参数说明可以参考: &lt;a href="https://www.ruisum.top/tech/certificate/openssl-toolkit%E4%BD%BF%E7%94%A8">openssl-toolkit使用&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第一步, 提取私钥; 系统会再次提示我们提供新密码来保护正在创建的 .key 文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs12 -in output.pfx -nocerts -out private.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第二步, 提取证书&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl pkcs12 -in output.pfx -clcerts -nokeys -out certificate.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 第三步, 解密私钥；输入第一步中创建的用于保护私钥文件的密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl rsa -in private.key -out decrypted.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/certificate/" term="certificate" label="certificate"/><category scheme="https://ruisum.top/tags/pfx/" term="PFX" label="PFX"/><category scheme="https://ruisum.top/tags/%E8%AF%81%E4%B9%A6/" term="证书" label="证书"/><category scheme="https://ruisum.top/tags/openssl/" term="openssl" label="openssl"/><category scheme="https://ruisum.top/tags/ca/" term="CA" label="CA"/></entry><entry><title type="text">什么是PEM文件</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/certificate/%E4%BB%80%E4%B9%88%E6%98%AFpem%E6%96%87%E4%BB%B6/"/><id>https://ruisum.top/tech/basics/certificate/%E4%BB%80%E4%B9%88%E6%98%AFpem%E6%96%87%E4%BB%B6/</id><updated>2022-03-22T22:30:13+08:00</updated><published>2022-03-22T22:30:13+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">PEM 是什么, 我们有哪些日常使用的命令和 PEM 相关</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;p>PEM (&lt;code>Privacy Enhanced Mail&lt;/code>的缩写)文件最初是为了确保电子邮件安全而发明的, 现在它是一个互联网安全标准. PEM 文件是 X.509 证书、CSR(&lt;code>certificate signing request&lt;/code>) 和加密密钥的最常见格式.&lt;/p>
&lt;h2 id="什么是-pem-文件">什么是 PEM 文件&lt;/h2>
&lt;p>PEM 文件是一个文本文件, 文件中包含一个或多个采用 Base64 ASCII 编码的条目, 每个条目都有纯文本的页眉和页脚&lt;/p>
&lt;blockquote>
&lt;p>例如: &lt;code>--BEGIN CERTIFICATE--&lt;/code> 和 &lt;code>--END CERTIFICATE--&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;p>PEM 是一种容器格式, 可能只包括公共证书, 也可能包括整个证书链, 包括公钥、私钥和根证书.&lt;/p>
&lt;p>PEM可以有多种扩展名&lt;/p>
&lt;blockquote>
&lt;p>例如: .pem、.key、.cer、.cert 等&lt;/p>
&lt;/blockquote>
&lt;p>典型的 PEM 文件是：&lt;/p>
&lt;ul>
&lt;li>&lt;code>key.pem&lt;/code>: 包含私有加密密钥&lt;/li>
&lt;li>&lt;code>cert.pem&lt;/code>: 包含证书信息&lt;/li>
&lt;/ul>
&lt;h2 id="pem-文件格式">PEM 文件格式&lt;/h2>
&lt;p>页眉和页脚用于标识文件的类型, 但并非所有 PEM 文件都需要它们. 如下说明几种不同类型的PEM文件&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">&lt;strong>页眉页脚内容&lt;/strong>&lt;/th>
&lt;th style="text-align:center">&lt;strong>文件类型&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>—–BEGIN CERTIFICATE REQUEST—–&lt;/code>&lt;br>....&lt;br>&lt;code>—–END CERTIFICATE REQUEST—–&lt;/code>&lt;/td>
&lt;td style="text-align:center">CSR文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>—–BEGIN RSA PRIVATE KEY—–&lt;/code>&lt;br>....&lt;br>&lt;code>—–END RSA PRIVATE KEY—–&lt;/code>&lt;/td>
&lt;td style="text-align:center">私钥文件&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>—–BEGIN CERTIFICATE—–&lt;/code>&lt;br>....&lt;br>&lt;code>—–END CERTIFICATE—–&lt;/code>&lt;/td>
&lt;td style="text-align:center">证书文件&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>如果 PEM 文件包含 SSL 证书链, 则格式如下所示:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">—–BEGIN CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//end-user
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–END CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–BEGIN CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//intermediate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–END CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–BEGIN CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//root
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–END CERTIFICATE—–
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="文件示例">文件示例&lt;/h2>
&lt;p>如下示例是一个私钥 pem 文件:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl">—–BEGIN PRIVATE KEY—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBj08sp5++4anG
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmQxJjAkBgNVBAoTHVByb2dyZXNzIFNvZnR3YXJlIENvcnBvcmF0aW9uMSAwHgYD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">VQQDDBcqLmF3cy10ZXN0LnByb2dyZXNzLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">…
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bml6YXRpb252YWxzaGEyZzIuY3JsMIGgBggrBgEFBQcBAQSBkzCBkDBNBggrBgEF
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">BQcwAoZBaHR0cDovL3NlY3VyZS5nbG9iYWxzaWduLmNvbS9jYWNlcnQvZ3Nvcmdh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">z3P668YfhUbKdRF6S42Cg6zn
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–END PRIVATE KEY—–
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如下是根证书 pem 文件的示例:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-text" data-lang="text">&lt;span class="line">&lt;span class="cl"># Trust chain root certificate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–BEGIN CERTIFICATE—–
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">MIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">YWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">aWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">…
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">HMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">—–END CERTIFICATE—–
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="其他">其他&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>使用 &lt;code>openssl&lt;/code> 命令检查 PEM 证书文件&lt;/p>
&lt;p>&lt;code>openssl&lt;/code> 是一个开源命令行工具, 通常用于生成私钥、创建 CSR、安装我们的 SSL/TLS 证书以及识别证书信息.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 命令格式是: openssl x509 -text -in server.pem -noout&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 示例: &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ openssl x509 -in /etc/pki/fwupd/LVFS-CA.pem -text -noout
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Certificate:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Data:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Version: &lt;span class="m">3&lt;/span> &lt;span class="o">(&lt;/span>0x2&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Serial Number: &lt;span class="m">1&lt;/span> &lt;span class="o">(&lt;/span>0x1&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Signature Algorithm: sha256WithRSAEncryption
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Issuer: &lt;span class="nv">CN&lt;/span> &lt;span class="o">=&lt;/span> LVFS CA, &lt;span class="nv">O&lt;/span> &lt;span class="o">=&lt;/span> Linux Vendor Firmware Project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Validity
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Not Before: Aug &lt;span class="m">1&lt;/span> 00:00:00 &lt;span class="m">2017&lt;/span> GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Not After : Aug &lt;span class="m">1&lt;/span> 00:00:00 &lt;span class="m">2047&lt;/span> GMT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subject: &lt;span class="nv">CN&lt;/span> &lt;span class="o">=&lt;/span> LVFS CA, &lt;span class="nv">O&lt;/span> &lt;span class="o">=&lt;/span> Linux Vendor Firmware Project
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Subject Public Key Info:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Public Key Algorithm: rsaEncryption
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RSA Public-Key: &lt;span class="o">(&lt;/span>&lt;span class="m">3072&lt;/span> bit&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Modulus:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 00:b5:f5:17:1f:73:70:0c:9c:d6:ca:19:0f:c8:f7:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Exponent: &lt;span class="m">65537&lt;/span> &lt;span class="o">(&lt;/span>0x10001&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 extensions:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 Basic Constraints: critical
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> CA:TRUE, pathlen:1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 Subject Alternative Name:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> URI:http://www.fwupd.org/, email:sign@fwupd.org
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 Extended Key Usage:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Code Signing
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 Key Usage: critical
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Certificate Sign, CRL Sign
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 Subject Key Identifier:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> B1:8D:EA:E4:23:A7:7E:09:8E:B5:EE:31:E0:6A:DD:9E:34:37:65:AC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> X509v3 CRL Distribution Points:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Full Name:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> URI:http://www.fwupd.org/pki/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Signature Algorithm: sha256WithRSAEncryption
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;code>ssh&lt;/code> 使用的 PEM&lt;/p>
&lt;p>PEM 文件也用于 ssh, 如果我们执行过 &lt;code>ssh-keygen&lt;/code> 用来配置 &lt;code>ssh&lt;/code> 的免密, 则 &lt;code>~/.ssh/id_rsa&lt;/code> 就是一个 PEM 文件, 只是没有扩展名.&lt;/p>
&lt;p>我们可以在 &lt;code>ssh&lt;/code> 中使用 &lt;code>-i&lt;/code> 标志来指定我们要使用新密钥而不是 &lt;code>id_rsa&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成一对新公私钥对&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh-keygen -f ./test_rsa -t rsa -P &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Generating public/private rsa key pair.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your identification has been saved in ./test_rsa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in ./test_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The key fingerprint is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SHA256:r+NkIS+z7wZcjYjsQ1q/mWDkBkbSXjE1W7mS74W69AE liawne@ruiwen
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The key&lt;span class="err">&amp;#39;&lt;/span>s randomart image is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---&lt;span class="o">[&lt;/span>RSA 3072&lt;span class="o">]&lt;/span>----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> . ooo .. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>. o .. +. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> + o ..o + &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> + * + + . &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> . O oE+S. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> . B ++oo. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> o o+B&lt;span class="o">=&lt;/span>.. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> .&lt;span class="o">=&lt;/span>B+o &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> o**. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----&lt;span class="o">[&lt;/span>SHA256&lt;span class="o">]&lt;/span>-----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用新生成的密钥对配置免密&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh-copy-id -i ./test_rsa.pub pi@192.168.8.106
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/bin/ssh-copy-id: INFO: Source of key&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span> to be installed: &lt;span class="s2">&amp;#34;./test_rsa.pub&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key&lt;span class="o">(&lt;/span>s&lt;span class="o">)&lt;/span>, to filter out any that are already installed
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用对应的私钥连接服务器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh -i ./test_rsa pi@192.168.8.106
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Last login: Tue Mar &lt;span class="m">22&lt;/span> 23:10:35 &lt;span class="m">2022&lt;/span> from 192.168.8.102
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/certificate/" term="certificate" label="certificate"/><category scheme="https://ruisum.top/tags/pem/" term="PEM" label="PEM"/><category scheme="https://ruisum.top/tags/%E8%AF%81%E4%B9%A6/" term="证书" label="证书"/><category scheme="https://ruisum.top/tags/openssl/" term="openssl" label="openssl"/><category scheme="https://ruisum.top/tags/ca/" term="CA" label="CA"/></entry><entry><title type="text">几种不同的证书编码格式</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/certificate/x509%E5%87%A0%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E8%AF%81%E4%B9%A6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/"/><id>https://ruisum.top/tech/basics/certificate/x509%E5%87%A0%E7%A7%8D%E4%B8%8D%E5%90%8C%E7%9A%84%E8%AF%81%E4%B9%A6%E7%BC%96%E7%A0%81%E6%A0%BC%E5%BC%8F/</id><updated>2022-03-22T21:13:26+08:00</updated><published>2022-03-22T21:13:26+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">认识几种不同编码格式的X509证书,及使用openssl相互转换</summary><content type="html">&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>通常来说, 所有 &lt;code>SSL&lt;/code> 证书都被视为 &lt;code>X.509&lt;/code> 证书的类型. 这些数字证书具有不同的文件扩展名和格式.&lt;/p>
&lt;h2 id="分类">分类&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>Base64 (ASCII)&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>PEM&lt;/strong>: 由 &lt;code>RFC&lt;/code> 管理, 开源软件优先使用, 因为它是基于文本的, 因此不太容易出现翻译/传输错误. 可以有多种扩展名（&lt;code>.pem、.key、.cer、.cert&lt;/code> 等）
&lt;ul>
&lt;li>.pem&lt;/li>
&lt;li>.crt&lt;/li>
&lt;li>.ca-bundle&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>PKCS#7&lt;/strong>: &lt;code>Java&lt;/code> 使用并受 &lt;code>Windows&lt;/code> 支持的开放标准. 不包含私钥内容.
&lt;ul>
&lt;li>.p7b&lt;/li>
&lt;li>.p7s&lt;/li>
&lt;li>.p7c&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Binary&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>DER&lt;/strong>: &lt;code>PEM&lt;/code> 的父格式, 可以将其视为 &lt;code>base64&lt;/code> 编码的 &lt;code>PEM&lt;/code> 文件的二进制版本. 在 &lt;code>Windows&lt;/code> 之外不经常使用.
&lt;ul>
&lt;li>.der&lt;/li>
&lt;li>.cer&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>PKCS#12&lt;/strong>: 一种 &lt;code>Microsoft&lt;/code> 私有标准, 后被纳入 &lt;code>RFC&lt;/code>, 与纯文本 &lt;code>PEM&lt;/code> 格式相比, 安全性得到增强. 可以包含私钥和证书链内容. &lt;code>Windows&lt;/code> 系统优先使用, 可通过 &lt;code>openssl&lt;/code> 自由转换为PEM格式.
&lt;ul>
&lt;li>.pfx&lt;/li>
&lt;li>.p12&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="单独说明">单独说明&lt;/h2>
&lt;ul>
&lt;li>&lt;code>PEM&lt;/code> 格式: 查看&lt;a href="https://www.ruisum.top/tech/certificate/%E4%BB%80%E4%B9%88%E6%98%AFpem%E6%96%87%E4%BB%B6/">什么是PEM文件&lt;/a>&lt;/li>
&lt;li>&lt;code>P7B/PKCS#7&lt;/code> 格式: &lt;code>P7B/PKCS#7&lt;/code> 格式的证书以 &lt;code>Base64 ASCII&lt;/code> 编码进行编码, 它们通常具有 &lt;code>.p7b&lt;/code> 或 &lt;code>.p7c&lt;/code> 作为文件扩展名. 将 &lt;code>PKCS#7&lt;/code> 格式的证书分开的原因在于, 只有证书才能以这种格式存储, 而私钥则不能. 换句话说, 一个 &lt;code>P7B&lt;/code> 文件将只包含证书和链证书.
&lt;blockquote>
&lt;p>具有 &lt;code>P7B/PKCS#7&lt;/code> 格式的证书包含在&amp;quot;--BEGIN PKCS7--&amp;quot;和&amp;quot;--END PKCS7--&amp;quot;语句之间. &lt;code>Microsoft Windows&lt;/code> 和 &lt;code>Java Tomcat&lt;/code> 是使用这种格式的 &lt;code>SSL&lt;/code> 证书的最常见平台.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>&lt;code>DER&lt;/code> 格式: DER 证书格式代表 &lt;code>distinguished encoding rules&lt;/code>, 是 &lt;code>PEM&lt;/code> 格式证书的二进制形式. &lt;code>DER&lt;/code> 格式可以包含所有类型的证书和私钥, 大多使用 &lt;code>.cer&lt;/code> 和 &lt;code>.der&lt;/code> 扩展名. &lt;code>DER&lt;/code> 证书格式最常用于基于 &lt;code>Java&lt;/code> 的平台.&lt;/li>
&lt;li>&lt;code>PFX/P12/PKCS#12&lt;/code> 格式: 是一种受密码保护的容器格式, 包含公共和私有证书对. 和 &lt;code>.pem&lt;/code> 文件不同, 这个容器是完全加密的.&lt;code>PFX/P12/PKCS#12&lt;/code> 格式 —— 都是指个人信息交换格式 —— 是存储服务器证书的二进制格式. 这些文件通常在 &lt;code>Windows&lt;/code> 平台上使用，用来导入和导出证书及私钥.&lt;/li>
&lt;/ul>
&lt;h2 id="不同格式的转换">不同格式的转换&lt;/h2>
&lt;p>因为以下两个原因, 存在不同编码格式证书的互相转换需求:&lt;/p>
&lt;ul>
&lt;li>不同证书颁发机构以不同的格式颁发证书&lt;/li>
&lt;li>不同的服务器需要不同格式的证书&lt;/li>
&lt;/ul>
&lt;p>不同格式间的转换, 请查看: &lt;a href="https://www.ruisum.top/tech/certificate/openssl-toolkit%E4%BD%BF%E7%94%A8">openssl-toolkit使用&lt;/a>&lt;/p>
&lt;h2 id="其他">其他&lt;/h2>
&lt;p>一些名词的解释:&lt;/p>
&lt;ul>
&lt;li>&lt;code>SSL&lt;/code>: &lt;code>Secure Socket Layer&lt;/code> 安全套接字层&lt;/li>
&lt;li>&lt;code>TLS&lt;/code>: &lt;code>Transport Layer Security&lt;/code> 传输层安全协议&lt;/li>
&lt;li>&lt;code>CSR&lt;/code>: &lt;code>Certificate Signing Request&lt;/code> 证书签名请求, 实际格式是 &lt;a href="https://www.rfc-editor.org/rfc/rfc2986">RFC 2986&lt;/a> 中定义的 &lt;code>PKCS10&lt;/code>, 它包括所请求证书的部分/全部关键细节, 例如&lt;code>subject, organization, state&lt;/code>诸如此类, 以及要签署的证书的公钥. 这些由 CA 签名并返回证书, 返回的证书是公共证书（包括公钥但不包括私钥）,返回的证书可以有多种格式.&lt;/li>
&lt;li>&lt;code>key&lt;/code>: 这是一个（通常）&lt;code>PEM&lt;/code> 格式的文件, 仅包含特定证书的私钥, 并且只是一个惯用名称, 而不是标准化名称. 安装 &lt;code>apache&lt;/code> 相关软件时, 通常可以在 &lt;code>/etc/ssl/private&lt;/code> 中找到. 这些文件的权限非常重要, 如果设置错误, 有些程序会拒绝加载这些证书.&lt;/li>
&lt;li>&lt;code>PKCS&lt;/code>: &lt;code>Public-Key Cryptography Standards&lt;/code> 公钥密码标准&lt;/li>
&lt;li>&lt;code>CRL&lt;/code>: &lt;code>certificate revocation list&lt;/code> 证书吊销清单, 证书颁发机构生成这些内容作为证书到期前, 取消授权证书的一种方式.&lt;/li>
&lt;/ul>
&lt;p>本文内容参考自:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://comodosslstore.com/resources/a-ssl-certificate-file-extension-explanation-pem-pkcs7-der-and-pkcs12/">A SSL Certificate File Extension Explanation: PEM, PKCS7, DER, and PKCS#12
&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://serverfault.com/questions/9708/what-is-a-pem-file-and-how-does-it-differ-from-other-openssl-generated-key-file">What is a Pem file and how does it differ from other OpenSSL Generated Key File Formats?&lt;/a>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/certificate/" term="certificate" label="certificate"/><category scheme="https://ruisum.top/tags/x509/" term="X509" label="X509"/><category scheme="https://ruisum.top/tags/ca/" term="CA" label="CA"/><category scheme="https://ruisum.top/tags/%E8%AF%81%E4%B9%A6/" term="证书" label="证书"/><category scheme="https://ruisum.top/tags/%E5%8A%A0%E5%AF%86/" term="加密" label="加密"/></entry><entry><title type="text">vim 打开 txt 文件乱码</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/miscell/vim%E6%89%93%E5%BC%80txt%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81/"/><id>https://ruisum.top/tech/miscell/vim%E6%89%93%E5%BC%80txt%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81/</id><updated>2022-03-20T10:18:17+08:00</updated><published>2022-03-20T10:18:17+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">vim 打开 windows 上编辑的 txt 文件格式乱码</summary><content type="html">&lt;h2 id="背景">背景&lt;/h2>
&lt;p>使用 vim 打开 windows 上编辑的 txt 文件, 出现下面的乱码现象
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220403-2144.png" alt="vim显示乱码">
在 manjaro 的 kate 中打开, 可以正常显示
&lt;img src="https://ruisum.oss-cn-shenzhen.aliyuncs.com/img/2022/04/20220403-2145.png" alt="kate正常显示">&lt;/p>
&lt;h2 id="定位">定位&lt;/h2>
&lt;p>判断出 vim 编辑乱码的原因是因为 vim 的编码方式问题, 需要调整 vim 的相关配置&lt;/p>
&lt;p>对于 vim 的配置文件 ~/.vimrc 或者 /etc/vimrc, 若不清楚配置项的具体作用, 最好不要调整. 建议自行测试配置内容的作用, 确定最合适自己的配置.&lt;/p>
&lt;p>/etc/vimrc 是全局配置, ~/.vimrc 是用户配置, 我们只需要调整~/.vimrc 即可&lt;/p>
&lt;p>先了解一下 vimrc 中涉及到格式编码的几个配置项&lt;/p>
&lt;p>进入 vim 命令行界面, &lt;code>shift + :&lt;/code> 进入到 &lt;code>COMMAND mode&lt;/code>, 输入 &lt;code>help encoding&lt;/code> 查找编码相关的帮助内容 :&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-angular2" data-lang="angular2">&lt;span class="line">&lt;span class="cl">&lt;span class="x">$ vim
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">:help encoding
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="配置介绍">配置介绍&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">配置项&lt;/th>
&lt;th style="text-align:left">配置说明&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">encoding&lt;/td>
&lt;td style="text-align:left">vim 内部使用的字符编码方式, 主要包括 buffer, 寄存器, 表达式中的字符, 保存在viminfo中的内容等. 对 MS-windows 来说默认是 UTF-8, 对其他的系统则通过&lt;code>$LANG&lt;/code>读取或者是&lt;code>latin1&lt;/code>. 默认情况下, encoding 是设置成当前 &lt;code>locale&lt;/code> 的值, 如果 &lt;code>encoding&lt;/code> 没有设置成 &lt;code>locale&lt;/code> 的 &lt;code>$LANG&lt;/code>, 则 &lt;code>termencoding&lt;/code> 必须设置成 &lt;code>locale&lt;/code> 的 &lt;code>$LANG&lt;/code>用于转换终端显示的文本内容&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">fileencoding&lt;/td>
&lt;td style="text-align:left">设置当前打开文件的 &lt;code>buffer&lt;/code> 文件字符编码方式, 默认为空值；当 &lt;code>fileencoding&lt;/code> 的设置和 &lt;code>encoding&lt;/code> 设置值不一样时, vim 编辑后保存文件时会将文件保存为 &lt;code>fileencoding&lt;/code> 设置的字符编码方式；&lt;code>fileencoding&lt;/code>为空时, 使用&lt;code>encoding&lt;/code> 的编码方式保存文件. 当需要以特定编码方式读取一个文件时, 配置&lt;code>fileencoding&lt;/code>不生效, 需要使用&lt;code>++enc&lt;/code> 参数来设置, 也有一种特殊情况, 当&lt;code>fileencodings&lt;/code>的值是空时, &lt;code>fileencoding&lt;/code>的值才会被使用&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">fileencodings&lt;/td>
&lt;td style="text-align:left">vim设置fileencoding的顺序列表, 默认值为&lt;code>ucs-bom(Byte Order Mark)&lt;/code>, vim 打开文件时会按照&lt;code>fileencodings&lt;/code> 的内容, 依次检测罗列的字符编码方式, 当一项编码解析出现错误时, 会自动使用下一项进行探测. 最终确认一项可用时, 会将&lt;code>fileecoding&lt;/code> 设置为该值; 若都失败, &lt;code>fileencoding&lt;/code> 则设置为空, 则当前打开的缓冲文件使用默认的 &lt;code>encoding&lt;/code> 设置内容进行编码. &lt;code>fileencodings&lt;/code> 只对已存在文件生效, 新文件使用的是&lt;code>fileencoding&lt;/code>配置值, 也就是说新文件和空文件使用的编码方式可能是不一样的.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">termencoding&lt;/td>
&lt;td style="text-align:left">vim 所在的命令行终端的字符编码方式, 键盘打印输出和显示器显示内容的编码, 对 GUI 环境来说, 则只对 键盘产生的数据生效, GUI 使用&lt;code>encoding&lt;/code>的配置值; &lt;code>termencoding&lt;/code>的默认值是空值.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>相关参数罗列完成后, 整理一下 vim 打开文件的过程, 这几项参数在这个过程中的作用&lt;/p>
&lt;ul>
&lt;li>vim 使用配置文件(/etc/vimrc 或 ~/.vimrc)中 &lt;code>encoding&lt;/code> 配置的编码方式打开文件, 设置缓冲区文件, viminfo 文件, 寄存器等内容的编码方式&lt;/li>
&lt;li>因为是已经存在的文件, vim 加载&lt;code>fileencodings&lt;/code> 内容, 逐项检测配置的编码方式, 若存在无错误的项时, 分配该编码方式的值给&lt;code>fileencoding&lt;/code>&lt;/li>
&lt;li>对比&lt;code>encoding&lt;/code> 和 &lt;code>fileencoding&lt;/code> 的值, 若不相同, 则使用&lt;code>fileencoding&lt;/code> 的编码方式重新编码缓冲区文件内容, 最终体现为当前终端打开文件的显示内容. 转换的动作是由&lt;code>iconv()&lt;/code> 完成的, 或者在&lt;code>COMMAND mode&lt;/code>指定 &lt;code>charconvert&lt;/code> 进行转换&lt;/li>
&lt;li>编辑完文件后保存, 还是对比 &lt;code>encoding&lt;/code> 和 &lt;code>fileencoding&lt;/code> 的内容, 不一致就将缓存区文件内容以 &lt;code>fileencoding&lt;/code> 设置的编码方式更新到文件中&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;code>encoding&lt;/code> 和 &lt;code>fileencoding&lt;/code>的转换可能导致文件内容部分丢失, 当 &lt;code>encoding&lt;/code> 是 &lt;code>utf-8&lt;/code> 或者其他 &lt;code>Unicode&lt;/code> 编码, 转换的内容很大概率还是能够被反解析成相同的内容; 但当 &lt;code>encoding&lt;/code> 不是 &lt;code>utf-8&lt;/code>时, 一些字符可能在转换的过程丢失&lt;/p>
&lt;/blockquote>
&lt;h2 id="修复">修复&lt;/h2>
&lt;p>先确认当前文件的编码方式:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ chardetect make&lt;span class="se">\ &lt;/span>iso&lt;span class="se">\ &lt;/span>image.txt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make iso image.txt: GB2312 with confidence 0.99
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置文件增加相应的编码方式:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 编辑 ~/.vimrc, 增加相应的配置项&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ vim ~/.vimrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ cat ~/.vimrc &lt;span class="p">|&lt;/span> egrep &lt;span class="s1">&amp;#39;fileencoding|encoding&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">set&lt;/span> &lt;span class="nv">fileencodings&lt;/span>&lt;span class="o">=&lt;/span>utf-8,ucs-bom,gb2312,cp936
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>重新打开文件, 显示正常&lt;/p></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/miscell/" term="miscell" label="miscell"/><category scheme="https://ruisum.top/tags/vim/" term="vim" label="vim"/><category scheme="https://ruisum.top/tags/%E8%A7%A3%E7%A0%81/" term="解码" label="解码"/></entry><entry><title type="text">docker 使用到的 iptables 内容</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/docker/docker%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84iptables/"/><id>https://ruisum.top/tech/docker/docker%E4%BD%BF%E7%94%A8%E5%88%B0%E7%9A%84iptables/</id><updated>2022-03-13T22:58:17+08:00</updated><published>2022-03-13T22:58:17+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">安装并启动 docker 服务后, 服务器上自动增加 docker 相关的 iptables 规则和链, 他们的作用是什么</summary><content type="html">&lt;h2 id="说明">说明&lt;/h2>
&lt;p>在服务器上安装 &lt;code>docker&lt;/code> , 并启动 &lt;code>docker.service&lt;/code> 后会发现, &lt;code>iptables-save&lt;/code> 命令的输出增加一些 &lt;code>DOCKER&lt;/code> 相关的内容.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@c7u3test1 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables-save &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Generated by iptables-save v1.4.21 on Sun Aug 25 05:05:17 2019&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*nat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:PREROUTING ACCEPT &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:INPUT ACCEPT &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:OUTPUT ACCEPT &lt;span class="o">[&lt;/span>1:128&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:POSTROUTING ACCEPT &lt;span class="o">[&lt;/span>1:128&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:DOCKER - &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A DOCKER -i docker0 -j RETURN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COMMIT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Completed on Sun Aug 25 05:05:17 2019&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Generated by iptables-save v1.4.21 on Sun Aug 25 05:05:17 2019&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*filter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:INPUT ACCEPT &lt;span class="o">[&lt;/span>23:1592&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:FORWARD DROP &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:OUTPUT ACCEPT &lt;span class="o">[&lt;/span>12:1152&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:DOCKER - &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">:DOCKER-ISOLATION - &lt;span class="o">[&lt;/span>0:0&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A FORWARD -j DOCKER-ISOLATION
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A FORWARD -o docker0 -j DOCKER
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A FORWARD -i docker0 ! -o docker0 -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A FORWARD -i docker0 -o docker0 -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A DOCKER-ISOLATION -j RETURN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">COMMIT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Completed on Sun Aug 25 05:05:17 2019&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当使用&lt;code>-p&lt;/code>参数拉起一个容器时, 查看 &lt;code>iptables-save&lt;/code> 输出会发现多了一些规则, 其中的 &lt;code>IP&lt;/code> 地址就是新拉起容器的地址&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@c7u3test1 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># docker run -d -p 5000:5000 busybox sleep 10000&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e4d5f73de95ed178fb24b5068ded0478d957d94d88a3906d7a08c89aab79f339
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@c7u3test1 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># docker container ps -q&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">e4d5f73de95e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@c7u3test1 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># iptables-save &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Generated by iptables-save v1.4.21 on Tue Mar 29 11:06:18 2022&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*nat
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A POSTROUTING -s 172.17.0.2/32 -d 172.17.0.2/32 -p tcp -m tcp --dport &lt;span class="m">5000&lt;/span> -j MASQUERADE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">*filter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-A DOCKER -d 172.17.0.2/32 ! -i docker0 -o docker0 -p tcp -m tcp --dport &lt;span class="m">5000&lt;/span> -j ACCEPT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">......
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>iptables&lt;/code>的介绍请看这里: &lt;a href="https://need.todo3">iptables 简述&lt;/a>&lt;/p>
&lt;p>这篇文章简述&lt;code>iptables&lt;/code> 在 &lt;code>docker&lt;/code> 中常见的一些功能.&lt;/p>
&lt;h2 id="dasfdsadf">dasfdsadf&lt;/h2></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/docker/" term="docker" label="docker"/><category scheme="https://ruisum.top/tags/docker/" term="docker" label="docker"/><category scheme="https://ruisum.top/tags/iptables/" term="iptables" label="iptables"/><category scheme="https://ruisum.top/tags/network/" term="network" label="network"/></entry><entry><title type="text">hexo多设备管理</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/miscell/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/"/><id>https://ruisum.top/tech/miscell/hexo%E5%A4%9A%E8%AE%BE%E5%A4%87%E7%AE%A1%E7%90%86/</id><updated>2022-03-20T15:47:20+08:00</updated><published>2022-03-01T22:13:11+00:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">在新设备上准备hexo发布文章的配置过程</summary><content type="html">&lt;p>&lt;code>github+hexo+next搭建个人博客&lt;/code>已经完成,使用一段时间后,发现存在多处编辑提交的需求.
在网上查询相关方案后,决定采取广大网友建议的方式: 将平时需要修改的内容存储在 hexo 分支,hexo 基于更改内容生成的文件提交到 master 分支
下列内容记录在 raspberry 上配置实现 hexo 编辑提交内容的过程&lt;/p>
&lt;h3 id="1安装基础包">1.安装基础包&lt;/h3>
&lt;p>在新机器上安装基础包，当前机器为 raspberry，以该机器为例说明
raspberry 安装系统是&amp;quot;Raspbian GNU/Linux 10 (buster)&amp;quot;，基于 debian 的发行，用如下命令安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装nodejs、npm、git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt install nodejs npm git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2配置git及github">2.配置git及github&lt;/h3>
&lt;p>安装好基础包后，要配置 github 上&lt;strong>个人资料/settings/SSH and GPG keys/SSH keys&lt;/strong>,用于提交代码使用&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在raspberry上,使用pi用户生成公私钥对&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ ssh-keygen -t rsa -P &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Generating public/private rsa key pair.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Enter file in which to save the key &lt;span class="o">(&lt;/span>/home/pi/.ssh/id_rsa&lt;span class="o">)&lt;/span>: Your identification has been saved in /home/pi/.ssh/id_rsa.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in /home/pi/.ssh/id_rsa.pub.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The key fingerprint is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SHA256:5C2iM9maPY/n+2iDwmodQJOjxTq2ZJkwv0xBy4EG68E pi@raspberrypi
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">The keys randomart image is:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+---&lt;span class="o">[&lt;/span>RSA 2048&lt;span class="o">]&lt;/span>----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>o+o. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>&lt;span class="o">=&lt;/span>+Oo &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>+E&lt;span class="o">=&lt;/span>+ . &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>&lt;span class="o">=&lt;/span>*&lt;span class="o">=&lt;/span> o . &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span>+&lt;span class="o">=&lt;/span>.o . S . &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> .o .+ . . &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> &lt;span class="nv">o&lt;/span>&lt;span class="o">=&lt;/span>... &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> . +*o.+. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">|&lt;/span> ...o.o*&lt;span class="o">=&lt;/span>+. &lt;span class="p">|&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----&lt;span class="o">[&lt;/span>SHA256&lt;span class="o">]&lt;/span>-----+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># pi用户家目录下.ssh文件夹下新生成了id_rsa/id_rsa.pub文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ ls ~/.ssh -lrt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">total &lt;span class="m">16&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- &lt;span class="m">1&lt;/span> pi pi &lt;span class="m">444&lt;/span> Feb &lt;span class="m">27&lt;/span> 21:28 known_hosts
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw------- &lt;span class="m">1&lt;/span> pi pi &lt;span class="m">1366&lt;/span> Feb &lt;span class="m">28&lt;/span> 13:06 authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- &lt;span class="m">1&lt;/span> pi pi &lt;span class="m">396&lt;/span> Mar &lt;span class="m">1&lt;/span> 21:30 id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw------- &lt;span class="m">1&lt;/span> pi pi &lt;span class="m">1823&lt;/span> Mar &lt;span class="m">1&lt;/span> 21:30 id_rsa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 复制id_rsa.pub内容,在github上SSH keys界面上点击New SSH key,添加复制的公钥内容并命名&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ cat ~/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ssh-rsa AAAAB3NzaCxxxx.....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置本地 git&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置user.name和user.email&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ git config --global user.email &lt;span class="s2">&amp;#34;you@example.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ git config --global user.name &lt;span class="s2">&amp;#34;Your Name&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3npm安装hexo相关包">3.npm安装hexo相关包&lt;/h3>
&lt;p>配置好 github &lt;strong>SSH keys&lt;/strong>后,下载&lt;strong>yourname.github.io&lt;/strong>库到本地&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入相应的目录,下载hexo分支代码; 此处在家目录下新建了projects目录,进入projects目录进行操作&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ mkdir ~/projects &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> ~/projects
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># $yourname填写自己实际的名称&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ git clone git@github.com:&lt;span class="nv">$yourname&lt;/span>/&lt;span class="nv">$yourname&lt;/span>.github.io.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>下载完成后,进入&lt;strong>yourname.github.io&lt;/strong>目录,安装 npm 相关包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装hexo&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ &lt;span class="nb">cd&lt;/span> &lt;span class="nv">$yourname&lt;/span>.github.io &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> npm install hexo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 当前目录下已经包含package.json文件,直接安装相关包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ npm install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># hexo同步至github需要使用的包&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ npm install hexo-deployer-git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装完成后,需要将当前目录下node_modules/.bin加入到PATH中&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ &lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;export PATH=$PATH:/home/pi/projects/$yourname.github.io/node_modules/.bin&amp;#39;&lt;/span> &amp;gt;&amp;gt; ~/.bashrc
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ &lt;span class="nb">source&lt;/span> ~/.bashrc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="4测试发布新文章">4.测试发布新文章&lt;/h3>
&lt;p>上述内容配置完成后,在新机器上测试新文章发布&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 新增文章&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ hexo n &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 编辑source/_post/test.md内容,可以在typora等markdown写作软件上先完成内容后再粘贴&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ vim source/_post/test.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ hexo g
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 测试新文章内容,hexo s后访问localhost:4000查看文章效果&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ hexo s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 内容核对完成,发布到github yourname.github.io的master分支上&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">PI $ hexo d
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/miscell/" term="miscell" label="miscell"/><category scheme="https://ruisum.top/tags/hexo/" term="hexo" label="hexo"/></entry><entry><title type="text">Kubernetes学习笔记</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/cloud/kubernetes%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/><id>https://ruisum.top/tech/cloud/kubernetes%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id><updated>2021-09-13T22:04:30+08:00</updated><published>2021-09-13T22:04:30+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">k8s学习笔记记录</summary><content type="html">&lt;h2 id="devops核心要点及kubernetes架构概述">Devops核心要点及kubernetes架构概述&lt;/h2>
&lt;p>1, ansible:应用编排工具&lt;/p>
&lt;ul>
&lt;li>可以安装,配置应用&lt;/li>
&lt;li>可以依照playbook来配置有依赖关系的应用程序&lt;/li>
&lt;/ul>
&lt;p>2, docker的编排工具,docker的编排不能再采用传统意义应用的方式来编排,因为接口已经发生了变化&lt;/p>
&lt;ul>
&lt;li>docker呼唤面向容器的新式编排工具的实现
&lt;ul>
&lt;li>docker编排三剑客
1,docker compose(主要功能是编排,可以单机,可以资源池 )
2,docker swarm(跨机执行,能够将多个主机集成为一个资源池,可以算作一个集群管理工具 )
3,docker machine(新扩入集群的主机,能够将一个主机迅速初始化加入到一个docker swarm集群中)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>mesos: IDC的OS,能够将一个IDC所提供的所有硬件资源提供的计算资源统一分配,是一个资源分配工具
1,marathon: 提供面向容器编排的框架&lt;/li>
&lt;li>kubernetes,现有占据80%以上的份额&lt;/li>
&lt;/ul>
&lt;p>3, 新概念&lt;/p>
&lt;ul>
&lt;li>MicroServices: 微服务, 应用不再分层,将应用拆解成一个个的微服务,很可能当前使用的一个应用以- 微服务体现的话,需要拆解成上百个的微服务,彼此之间互相写作&lt;/li>
&lt;li>CI: continious intergration持续集成&lt;/li>
&lt;li>CD: continious delivery持续交付&lt;/li>
&lt;li>CD: continious deployment持续部署&lt;/li>
&lt;/ul>
&lt;p>4, 容器技术的出现,使得DevOps的落地实现成为了可能&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">trigger&lt;span class="o">(&lt;/span>commit, push and so on&lt;span class="o">)&lt;/span> --&amp;gt; CI --&amp;gt; CD&lt;span class="o">(&lt;/span>交付&lt;span class="o">)&lt;/span> --&amp;gt; CD&lt;span class="o">(&lt;/span>部署&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> DevOps progress
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--------------------------------------------------------------&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># DevOps中异构环境的问题,因为容器的出现而可以解决&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5, 容器编排的必要性&lt;/p>
&lt;ul>
&lt;li>通过微服务的方式来发布应用,一个应用几百个微服务构成,出故障是必然的,每天出现多少次,人为修复是不可能的,所以需要容器编排工具来完成这个工作&lt;/li>
&lt;li>因为容器技术的出现,使得DevOps得以落地; 因为DevOps的落地,使得容器编排技术成为一个底层技术&lt;/li>
&lt;li>devops是一种文化, 打破dev和ops的隔阂, 使传统手工方式自动化完成&lt;/li>
&lt;/ul>
&lt;p>6, openshift&lt;/p>
&lt;ul>
&lt;li>redhat使用的paas工具是openshift,&lt;/li>
&lt;li>openshift的核心是kubernetes, kubernetes还没达到paas这个层面;&lt;/li>
&lt;li>openshift可以理解为kubernetes的发行版(linux的发行版有ubuntu,redhat,debian等)&lt;/li>
&lt;li>kubernetes实现的东西很底层,如果要具有paas的功能,还需要自行安装很多工具;openshift则提供了一个完整的工具链供客户使用&lt;/li>
&lt;/ul>
&lt;p>7,kubernetes是站在borg肩膀上的开源软件&lt;/p>
&lt;ul>
&lt;li>kubernetes相关功能
&lt;ul>
&lt;li>自动装箱: 基于资源依赖及其他约束能够自动完成容器的部署而且不影响其可用性&lt;/li>
&lt;li>自动修复: 自我修复,自愈能力,容器的轻量,能够在挂掉之后很短的时间内拉起;
&lt;ul>
&lt;li>容器方式拉起的应用处理逻辑也发生了变化, 一个应用崩掉了, 可以直接kill掉容器进程, 然后重新拉起来&lt;/li>
&lt;li>有了k8s这种编排工具之后, 我们关注的更多的是群体, 而不再是个体了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自动实现水平扩展: 在资源足够的情况下,可以自动扩展节点&lt;/li>
&lt;li>服务发现和负载均衡:
&lt;ul>
&lt;li>当在k8s上运行了很多应用程序(微服务)后, 服务可以通过服务发现自动找到依赖到的服务&lt;/li>
&lt;li>每一种服务拉起来之后,自动做负载均衡&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自动发布和回滚&lt;/li>
&lt;li>密钥和配置管理&lt;/li>
&lt;li>存储编排: 使存储卷实现动态供给(某一个容器需要用到存储卷时,根据容器自身的需求创建能够满足其需要的存储卷)&lt;/li>
&lt;li>批处理执行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kubernetes就是一个集群, 组合多台主机的资源,组合成一个大的资源池,并统一对外提供存储,计算的集群&lt;/li>
&lt;li>kubernetes是一个有中心节点架构的集群系统, master-nodes模型&lt;/li>
&lt;/ul>
&lt;p>8, kubernetes编排的应用&lt;/p>
&lt;ul>
&lt;li>非云原生应用的启动方式: entrypoint中定义一个脚本,脚本能够接受用户传递给容器的参数,脚本将其转化为应用可读取的配置信息;应用再通过配置文件来读取配置&lt;/li>
&lt;li>云原声的启动方式: 基于环境变量的方式传递参数, 修改环境变量, 容器应用自动通过读取环境变量实现不同动作
&lt;ul>
&lt;li>通过kubernetes来编排的应用需要是云原声应用, 非云原声的应用可能会碰到各种各样的问题(比如配置文件保存在哪里等等)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>9, kubernetes工作&lt;/p>
&lt;ul>
&lt;li>用户在kubernetes上运行一个应用
&lt;ul>
&lt;li>客户的请求先发给master(启动容器的请求)&lt;/li>
&lt;li>master当中存在一个调度器,分析各个node现有的可用资源状态&lt;/li>
&lt;li>找出一个最佳适配运行客户容器的节点&lt;/li>
&lt;li>节点上的容器引擎来运行这个容器(先检查本地是否有镜像,没有镜像则从harbor上拉取镜像)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>怎样保证kubernetes实现自愈能力的
&lt;ul>
&lt;li>kubelet监控节点上应用容器的状态,确保容器应用的状态正常(节点正常的情况下)&lt;/li>
&lt;li>控制器确保容器是否正常,如果不正常,控制器上报给master,由master重新调度新的(节点宕机的场景);
&lt;ul>
&lt;li>kubernetes有一大堆的控制器来监控容器是否正常;&lt;/li>
&lt;li>控制器在本地不断的loop,来监控各个容器的状态; 确保处于用户期望的状态,或者说是移向用户期望的状态&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>控制器有问题了, 在master上有controller-manager,用来监控控制器的状态；控制器有冗余(3个master, 做了高可用, 三个节点中只有一个可用)&lt;/li>
&lt;li>master是整个集群的大脑, 有三个核心组件:
&lt;ul>
&lt;li>apiserver: 负责接受并处理请求的&lt;/li>
&lt;li>scheduler: 调度容器创建的请求&lt;/li>
&lt;li>controller-manager: 确保控制器状态正常(确保容器状态正常的控制器只是众多控制器中的一种)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kubernetes并不直接调度容器,调度的最小对象是pod(可以理解为容器的外壳,给容器做了一层抽象的封装)
&lt;ul>
&lt;li>kubernetes做了一个逻辑组件叫pod,在pod内用来运行容器
&lt;ul>
&lt;li>一个pod内可以包含多个容器,共享的namespace有NET,IPC,UTS,另外三个互相隔离(USER,MNT,PID)&lt;/li>
&lt;li>pod对外像一个虚拟机&lt;/li>
&lt;li>同一个pod中的容器共享存储卷; 存储卷可以理解为不属于容器, 而是属于pod&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kubernetes上运行的node, 负责运行由master指派的各种任务,最核心的就是一pod形式去运行容器的&lt;/li>
&lt;/ul>
&lt;p>10, kubernetes区分&lt;/p>
&lt;ul>
&lt;li>master:
&lt;ul>
&lt;li>apiserver&lt;/li>
&lt;li>scheduler&lt;/li>
&lt;li>controller manager&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>node:
&lt;ul>
&lt;li>kubelet: node的核心组件, 用来同集群交互, 尝试拉起容器等&lt;/li>
&lt;li>docker: 容器引擎,不一定是docker,只是docker最流畅&lt;/li>
&lt;li>kube-proxy: 随时与apiserver通信, 监控本地相关资源的情况,当发生变化通知到apiserver后,apiserver生成一个通知事件,可以被所有关联的组件接收到
&lt;ul>
&lt;li>service的创建需要kube-proxy生成相应规则&lt;/li>
&lt;li>service的更新,也需要kube-proxy更新相应的规则&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetes基础概念">kubernetes基础概念&lt;/h2>
&lt;p>1, pod说明&lt;/p>
&lt;ul>
&lt;li>pod:
&lt;ul>
&lt;li>kubernetes的最小调度单元&lt;/li>
&lt;li>pod很重要的一个属性: label,众多元数据中的一个,用于区分筛选pod,负责筛选的是label selector&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>人为分类(官方未做分类):
&lt;ul>
&lt;li>自主式pod: 由kubelet监控管理,在节点故障时,pod消失,无法再自动创建&lt;/li>
&lt;li>控制器管理的pod: 控制器存在多种&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>2, 控制器&lt;/p>
&lt;ul>
&lt;li>ReplicationController: 副本控制器&lt;/li>
&lt;li>ReplicaSet:&lt;/li>
&lt;li>Deployment:
&lt;ul>
&lt;li>HPA: 自动水平扩展功能(horizontal Pod Autoscaler), 通过监控当前CPU或者内存等资源的消耗情况(比如定义不能超过60%), 来自动添加pod, 当负载下降后还可以自动减少,但有一个最少值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>StatefulSet:&lt;/li>
&lt;li>DaemonSet:&lt;/li>
&lt;li>Job, cronjob&lt;/li>
&lt;/ul>
&lt;p>3, Service&lt;/p>
&lt;ul>
&lt;li>pod时时在变化,在容器时代,不能再按照以前通过写配置文件,固定IP地址或者主机名的方式来访问固定的Pod了; 客户端发送一个请求过来,路由到相应的pod是怎么实现的
&lt;ul>
&lt;li>在client和目标Pod之间,存在一个中间层,这个中间层就是service&lt;/li>
&lt;li>service固定IP地址或者端口, 在没有手动删除的情况下, service不会消失&lt;/li>
&lt;li>客户端访问service, service将相应的请求路由到后端对应的pod&lt;/li>
&lt;li>service通过label去匹配pod的&lt;/li>
&lt;li>service不是什么应用程序,也不是实体组件,是iptables的DNAT规则(现已修改为ipvs规则)&lt;/li>
&lt;li>客户端访问service名称,然后被kubernetes中的dns服务解析,得到service的地址,再由service的DNAT转发到相应的pod(现已修改为ipvs规则);&lt;/li>
&lt;li>service只是用来调度分配到各个pod上的流量的&lt;/li>
&lt;li>创建了service之后,其相应的iptables/ipvs规则会反映在所有的node主机上&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4, 云计算平台和kubernetes天生具有良好的兼容性&lt;/p>
&lt;ul>
&lt;li>物理机在kubernetes创建服务时,若需要对外提供服务,需要有loadbalance,但已经不属于kubernetes的管理范围&lt;/li>
&lt;li>云平台则不一样,aws,阿里云等可以提供lbaas的接口,在kubernetes需要创建对外提供服务的service时,可以通过调用云平台的lbaas接口来创建loadbalance&lt;/li>
&lt;/ul>
&lt;p>5, kubernetes涉及的网络&lt;/p>
&lt;ul>
&lt;li>三类网络
&lt;ul>
&lt;li>pod使用的网络(pod网络): 供pod通信使用,各个pod共享同一个network namespace,网络可以互相ping通,类似于一个正常的IP地址&lt;/li>
&lt;li>Service使用的网络(集群网络): 和pod的地址是不同网段的,虚拟的网络,只存在于iptables或者ipvs中&lt;/li>
&lt;li>各个node的网段(节点网络): 各个节点各自的IP地址&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>三类通信
&lt;ul>
&lt;li>同一个pod内的多个容器间通信: 直接是哟你lo就可以&lt;/li>
&lt;li>各个pod之间的通信: 与docker之间的网络通信实现方式不同(两层NAT转发实现跨主机的容器网络通信), kubernetes是直接通过pod地址来通信的(各个pod的地址唯一)
&lt;ul>
&lt;li>使用物理机桥接网络, 但当集群中pod数多起来之后,广播量太大,无法承受&lt;/li>
&lt;li>使用overlay network(叠加网络),使得虽然跨主机,但仍像工作在同一个二层网络中;叠加网络可以实现二层广播,也可以实现三层广播(隧道)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pod与service的通信:
&lt;ul>
&lt;li>service的iptables/ipvs规则是反映在所有的节点上的,当一个容器需要去访问一个service时,容器的请求转发给docker0网桥就可以了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>网络功能kubernetes不提供,需要依赖插件来完成
&lt;ul>
&lt;li>网络插件提供商最少要提供两个功能:节点网络, 集群网络&lt;/li>
&lt;li>kubernetes通过CNI插件体系来接入外部的网络服务解决方案
&lt;ul>
&lt;li>flannel: 支持网络配置,叠加网络实现,相对简单&lt;/li>
&lt;li>calico: 既支持网络配置,也支持网络策略,三层网络隧道实现,相对复杂&lt;/li>
&lt;li>canel: 这种方式是上面两种方式的折中&lt;/li>
&lt;li>各个CNI插件可以作为容器托管在集群上,也可以作为守护进程在各个节点上运行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>6, kubernetes使用到的证书&lt;/p>
&lt;ul>
&lt;li>etcd是整个集群的核心,整个集群的状态信息都在etcd当中存储,故etcd需要做高可用
&lt;ul>
&lt;li>etcd是restful风格的集群:通过http/https通信,kubernetes使用的是https方式&lt;/li>
&lt;li>etcd是一个端口用于集群内部通信,一个端口用于对客户端提供服务&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>证书使用
&lt;ul>
&lt;li>etcd集群内部通信,点对点通信https,需要使用一个证书&lt;/li>
&lt;li>etcd对客户端(集群中的apiserver)提供服务,使用另外一套证书(一套ca)&lt;/li>
&lt;li>kubernetes的apiserver需要使用https对外提供服务,一套证书(不要与etcd使用同一套ca来签署)&lt;/li>
&lt;li>apiserver与kubelet,kube-proxy等通信,每个组件需要单独的证书&lt;/li>
&lt;li>手动部署k8s集群,大概需要手动部署5套ca左右(etcd之间,apiserver访问etcd,client访问apiserver,apiserver与内部集群间的通信,还剩一个需要确认)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="使用kubeadm安装kubernetes">使用kubeadm安装kubernetes&lt;/h2>
&lt;ul>
&lt;li>常用kubernetes安装方式
&lt;ul>
&lt;li>使用rpm包的方式安装或者源码编译的方式安装: 这种方式很麻烦,为了提高安全性,需要手动提供很多套的ca和证书&lt;/li>
&lt;li>使用kubeadm部署
&lt;ul>
&lt;li>每个节点都需要安装docker和kubelet,并确保两个服务都已经运行起来&lt;/li>
&lt;li>选择一个节点初始化为master后, 将controller-manager,api-server,etcd,kube-schedule以pod的方式运行在master节点上&lt;/li>
&lt;li>其他node上以pod的方式运行kube-proxy服务&lt;/li>
&lt;li>所有的组件pod都是static pod(静态pod)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用kubeadm安装kubernetes的步骤
&lt;ul>
&lt;li>master, nodes:安装kubelet, kubeadm, docker&lt;/li>
&lt;li>在master节点上执行kubeadm init来完成集群初始化
&lt;ul>
&lt;li>先决条件预捡&lt;/li>
&lt;li>生成证书,私钥,配置文件&lt;/li>
&lt;li>生成每一个静态pod的清单文件&lt;/li>
&lt;li>完成部署addon&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>在各个node节点上执行kubeadm join
&lt;ul>
&lt;li>检查先决条件,看能否满足需求&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>查看github上kubeadm的designvx_xx.md文档说明即可&lt;/li>
&lt;li>解决docker下载kubernetes镜像需要翻墙的问题
&lt;ul>
&lt;li>在安装完docker之后,修改/usr/lib/systemd/system/docker.service文件, 增加一个Environment=&amp;quot;HTTPS_PROXY=http://www.ik8s.io:10080&amp;quot;&lt;/li>
&lt;li>在下载完kubernetes相关镜像之后,将上面的内容注释掉,正常使用国内源即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetes应用快速入门">kubernetes应用快速入门&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>kubectl就是apiserver的客户端程序&lt;/p>
&lt;ul>
&lt;li>通过连接master节点上的apiserver&lt;/li>
&lt;li>apiserver也是整个kubernetes集群的唯一管理入口,kubectl就是这个管理入口的客户端工具,完成kubernetes上各种对象的增删改查等基本操作&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>kubectl命令&lt;/p>
&lt;ul>
&lt;li>run子命令
&lt;ul>
&lt;li>通过run命令生成一个deployment或者job来管理相应容器
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">kubectl run nginx --image&lt;span class="o">=&lt;/span>nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl run nginx-deploy --image&lt;span class="o">=&lt;/span>nginx:1.14-alpine --port&lt;span class="o">=&lt;/span>&lt;span class="m">80&lt;/span> --replicas&lt;span class="o">=&lt;/span>&lt;span class="m">3&lt;/span> --dry-run&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>传递给pod的命令默认方式是后接--&lt;/li>
&lt;li>run命令是通过生成deployment或者job,再拉起pod,不是直接直接创建的pod&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>kubernetes网络分配&lt;/p>
&lt;ul>
&lt;li>pod可分配网段是10.244.0.0/16,各个节点分配一个24位掩码的子网,比如node2分配到的是10.244.2.0/24&lt;/li>
&lt;li>pod的客户端主要有两类: 其他pod,外部访问&lt;/li>
&lt;li>使用kubectl expose来创建service(视频是1.11版本的), 指定端口用于转发
&lt;pre tabindex="0">&lt;code>- 参考示例: kubectl expose deployment nginx-deploy --name=xxx --port=xxx --target-port=xxx --protocol=xxx
- 外部访问转发: --&amp;gt; service_ip:service_port --&amp;gt; pod_ip:pod_port
- 参数type:
ClusterIP:仅供集群内部使用,是默认的类型
NodePort:可用于将svc暴露给外部使用,默认会自动生成一个随机端口映射至内部各个节点,网关地址,外部访问时,可以随机使用任意一个node的该端口
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>service给有生命周期的pod提供了一个固定的访问入口
&lt;ul>
&lt;li>service是iptables或者ipvs规则&lt;/li>
&lt;li>访问svc的端口,都会被调度至该svc用Label Selector关联到的各个pod后端&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>命令使用&lt;/p>
&lt;ul>
&lt;li>使用watch方式监控资源变化
&lt;ul>
&lt;li>kubectl get pods -w&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>动态扩展pod数(也可以缩减)
&lt;ul>
&lt;li>kubectl scale --replicas=x TYPE NAME&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>动态更新容器镜像
&lt;ul>
&lt;li>kubectl set image TYPE NAME CONTAINER_NAME_1=CONTAINER_IMAGE_1 ...&lt;/li>
&lt;li>使用kubectl rollout status TYPE NAME 来查看滚动更新的状态&lt;/li>
&lt;li>使用kubectl rollout undo TYPE NAME来回滚更新&lt;/li>
&lt;li>kubectl rollout --help可以查看支持的各个命令&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>k8s支持自动扩缩容,但是需要有监控系统,这个需要单独部署&lt;/li>
&lt;li>kubectl run/expose只是一个简单的命令,用于测试学习等场景;因为这些单独的命令无法实现全部功能,无法实现全部定制,实际使用应该基于yaml的配置文件来实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="05-kubernetes资源清单定义入门">05-kubernetes资源清单定义入门&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>kubernetes有一个RESTful风格的API,把各种操作对象都一律当作资源来管理,通过标准的http请求方法(GET,PUT,POST,DELETE)_来完成操作&lt;/p>
&lt;ul>
&lt;li>但是通过相应的命令(kubectl run/expose/edit/get),反馈到命令行上&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>资源实例化之后变成对象&lt;/p>
&lt;ul>
&lt;li>工作资源负载型对象(workload): Pod, ReplicaSet, Deployment, StatefulSet, DaemonSet, Job, CronjobSet, Deployment, StatefulSet, DaemonSet, Job, Cronjob&lt;/li>
&lt;li>服务发现及服务均衡: Service, Ingress&lt;/li>
&lt;li>配置与存储: Volume(有状态的持久存储需求的应用必须要用到的),CSI(存储卷),
&lt;ul>
&lt;li>configmap:为了配置容器化应用必然会用到的&lt;/li>
&lt;li>secret:保存敏感数据&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>集群级资源:
&lt;ul>
&lt;li>namespace&lt;/li>
&lt;li>node&lt;/li>
&lt;li>role&lt;/li>
&lt;li>clusterrole&lt;/li>
&lt;li>rolebinding&lt;/li>
&lt;li>clusterrolebinding&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>元数据型资源
&lt;ul>
&lt;li>HPA&lt;/li>
&lt;li>Podtemplate&lt;/li>
&lt;li>LimitRange&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>资源清单定义&lt;/p>
&lt;ul>
&lt;li>运行中的pod为例,说明各个字段的作用
&lt;ul>
&lt;li>apiVersion定义,有两个部分组成,分别是group名+version(组名+版本号),如果group省略,则表示属于core(核心组)
&lt;ul>
&lt;li>apiVersion: v1 --&amp;gt; apiVersion: core/v1&lt;/li>
&lt;li>组管理的好处:某一组的改动,只改一组就行,不影响其他组的使用; 一个组的多个版本号还可以并存&lt;/li>
&lt;li>version一般有3个:alpha(内测版本), beta(公测版本), stable(稳定版本)
&lt;blockquote>
&lt;p>不同版本支持的可嵌套字段可能是不一样的&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kind定义,确定资源类别,用来指明实例化成一个资源对象时使用&lt;/li>
&lt;li>metadata,元数据,&lt;/li>
&lt;li>spec(specification):用来定义接下来需要创建的资源应该具有什么样的特性,或者应该满足什么样的规范;基本是一个资源对象中最重要的字段&lt;/li>
&lt;li>status,与spec对应,显示当前的状态,spec是预期值,status是实际值,当实际值与预期值不符时,会向预期值靠拢&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>apiversion仅接收json格式的资源定义,yaml格式提供配置清单,apiserver可自动将其转为json格式,而后再提交&lt;/p>
&lt;/li>
&lt;li>
&lt;p>大部分资源的配置清单组成有5部分(一级字段):&lt;/p>
&lt;ul>
&lt;li>apiversion
&lt;ul>
&lt;li>pod是最核心的资源,所以属于核心群组vxxxx;deployment,replicaset属于应用程序管理的核心资源,他们属于app/vxxxxx&lt;/li>
&lt;li>kubectl api-versions即可获取&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>kind:资源类别&lt;/li>
&lt;li>metadata:元数据
&lt;ul>
&lt;li>name: 在同一类别中,那么必须是唯一的,同一命名空间中&lt;/li>
&lt;li>namespace: name需要受限于namespace,是kubernetes的概念,和操作系统的namespace要区分好&lt;/li>
&lt;li>labels: 标签&lt;/li>
&lt;li>annotations: 资源注解&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>spec:最重要的一个字段,定义期望状态(desired state)
&lt;ul>
&lt;li>不同资源类型,spec部分需要嵌套的内容不同&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>status:当前状态(current state),本字段由kubernetes集群维护,不能人为定义&lt;/li>
&lt;li>各个字段的man文档可以使用如下命令查看:
&lt;pre tabindex="0">&lt;code>kubectl explain KIND.OBJECT.xxx.xxx --&amp;gt; kubectl explain pod.metadata/pod.spec.containers.livenessprobe
# explain输出的内容中,设定格式有
# &amp;lt;string&amp;gt;: 字串
# &amp;lt;[]string&amp;gt;: 字串列表,字串类型的数组
# &amp;lt;Object&amp;gt;: 嵌套类型的三级字段
# &amp;lt;map[string]string&amp;gt;: 键值组成的映射
# &amp;lt;[]Object&amp;gt;: 对象列表
# -required-: 表示该字段必须存在
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>每个资源的引用PATH:&lt;/p>
&lt;ul>
&lt;li>/api/GROUP/VERSION/namespaces/NAMESPACE/TYPE/NAME&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>一个pod定义的yaml文件示例&lt;/p>
&lt;pre tabindex="0">&lt;code>pod-demo.yaml:
--------------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
name: pod-demo
namespace: default
labels: ---&amp;gt; labels字段是属于map(kv字典), 这里也可以写成labels: {&amp;#34;app:myapp&amp;#34;, &amp;#34;tire:frontend&amp;#34;}
app: myapp
tire: frontend ---&amp;gt; labels字段可以有多个label map
spec:
containers: ---&amp;gt; containers是对象列表格式
- name: myapp
image: ikubernetes/myapp:v1
- name: busybox ---&amp;gt; 多个容器存在于一个pod中, 用于辅助主容器工作, 这种方式称为边车模型
image: busybox:latest
command: ---&amp;gt; command字段属于列表, 这里也可以写成command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;sleep 3600&amp;#34;]; command用于覆盖容器的默认命令
- &amp;#34;/bin/sh&amp;#34;
- &amp;#34;-c&amp;#34;
- &amp;#34;sleep 3600&amp;#34;
--------------------------------------------------------------
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>基于这个yaml文件可对资源进行管理
&lt;ul>
&lt;li>kubectl create -f pod-demo.yaml: 根据这个文件内容,创建相应的资源&lt;/li>
&lt;li>kubectl delete -f pod-demo.yaml: 根据yaml文件内容,删除相应的资源&lt;/li>
&lt;li>kubectl apply -f pod-demo.yaml: 根据yaml修改内容,滚动更新相应的资源&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>问题:
&lt;ul>
&lt;li>使用pod-demo.yaml文件定义的pod,没有控制器被创建,都是我们自己去控制了,这种形式的pod称之为&amp;lt;自主式Pod资源&amp;gt;
&lt;ul>
&lt;li>有控制器的pod,一删除会被自动创建&lt;/li>
&lt;li>我们这里创建的这个pod,一删除就被删除了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>在定义pod资源时, spec字段常用的字段有哪些&lt;/p>
&lt;ul>
&lt;li>spec.containers: &amp;lt;[]object&amp;gt;
&lt;ul>
&lt;li>name: &lt;string>&lt;/li>
&lt;li>image: &lt;string>&lt;/li>
&lt;li>imagePullPolicy: &lt;string>,有Always,Never,IfNotPresent这几个值可选择;
&lt;ul>
&lt;li>如果镜像标签选择了latest,则使用的是Always&lt;/li>
&lt;li>其他策略时默认为IfNotPresent;&lt;/li>
&lt;li>该字段不能更改&lt;/li>
&lt;li>各个策略的优缺点:
&lt;ul>
&lt;li>always(好处是可以一直拿到最新的镜像,确保拿到最新的发布镜像;缺点是会占用带宽,而且拉起时间长);&lt;/li>
&lt;li>never: 可以节省带宽和时间,但可能本地就有的基础镜像是被修改过的,有问题的,也无法被更新&lt;/li>
&lt;li>ifnotpresent: 折中的一种方式,当不可用的时候才去拿镜像&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ports: &amp;lt;[]object&amp;gt;,informational功能,只是提供信息而已,和docker中的暴露端口不一样
&lt;ul>
&lt;li>containerPort可以有多个&lt;/li>
&lt;li>containerPort以列表的方式展示&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>command/args: &amp;lt;[]string&amp;gt;
&lt;ul>
&lt;li>args:entrypoint arguments;
&lt;ul>
&lt;li>当这个参数没有提供时,容器镜像的默认ENTRYPOINT会被使用&lt;/li>
&lt;li>变量引用的格式是$(variable_name),需要特别注意;若自己需要使用命令替换方式,则格式为$$(variable_name),作为逃逸&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>command:entrypoint array;
&lt;ul>
&lt;li>当这儿参数没有被使用时,容器镜像的默认CMD会被使用&lt;/li>
&lt;li>给定的内容不会在shell中执行,所以若需要在shell中执行内容,需要自己在内容中增加'/bin/sh', '-c', 'contents'&lt;/li>
&lt;li>变量引用的格式是$(variable_name),需要特别注意;若自己需要使用命令替换方式,则格式为$$(variable_name),作为逃逸&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker中entrypoint/cmd和k8s中command/args的结合使用
&lt;pre tabindex="0">&lt;code>------------------------------------------------------------------------------------------------------------------------
| 描述 | Docker filed name | Kubernetes field name |
------------------------------------------------------------------------------------------------------------------------
| The command run by the container | Entrypoint | command |
------------------------------------------------------------------------------------------------------------------------
| The arguements passwd to the command | Cmd | args |
------------------------------------------------------------------------------------------------------------------------
# 资源清单中没有给容器提供command和args,则容器镜像的默认entrypoint和cmd生效
# 资源清单中给容器提供了command但没有args时,则仅仅command生效,容器镜像默认的entrypoint和cmd被忽略
# 资源清单中给容器提供了args但没有command时,则容器镜像的Entrypoint使用给定的args
# 资源清单中给容器提供了command和args,则command使用给定的args生效
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>有些字段是可以被修改,而且改完之后能即时生效的;有些字段不能修改&lt;/li>
&lt;li>docker中如果同时存在entrypoint和cmd时,cmd将作为参数被传递给entrypoint&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>使用kubectl管理资源有三种用法&lt;/p>
&lt;ul>
&lt;li>命令式用法: kubectl run/expose/edit xxxx&lt;/li>
&lt;li>配置清单式用法: 本章讲解的内容(命令式资源清单)&lt;/li>
&lt;li>也是使用命令清单,但用法不同(声明式资源清单)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetes-pod控制器应用进一">kubernetes Pod控制器应用进(一)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>label是kubernetes上很有特色的一个功能&lt;/p>
&lt;ul>
&lt;li>提升资源管理效率,在同一套集群中,k8s的资源量上去后,需要被管理的资源通过label可以被快速识别&lt;/li>
&lt;li>当给资源配置了label之后,还可以通过label来查看,删除等管理操作&lt;/li>
&lt;li>所谓的label就是附加在对象上的一个键值对&lt;/li>
&lt;li>一个资源上可以存在多个label,每个label都可以被标签选择器进行匹配度检查,从而完成资源挑选&lt;/li>
&lt;li>标签可以在资源创建时配置,也可以在资源创建之后配置&lt;/li>
&lt;li>key=value,键值对的长度都不能超过63个字符
&lt;pre tabindex="0">&lt;code># key:字母,数字,_,-,.
# value:可以为空,只能字母或数字开头及结尾
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>直接给资源打标签
&lt;pre tabindex="0">&lt;code># kubectl label pods pod-demo release=canary
# kubectl label pods pod-demo release=stable --overwrite
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>标签选择器的类型&lt;/p>
&lt;ul>
&lt;li>等值关系的标签选择器,可以使用'=','==','!='
&lt;pre tabindex="0">&lt;code>kubectl get pods -l release=canary
kubectl get pods -l release=stable
kubectl get pods -l release!=stable(没有相应的键同样包含在条件内)
kubectl get pods -l release=stable,app=myapp
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>集合关系的标签选择器
&lt;pre tabindex="0">&lt;code># KEY in (VALUE1,VALUE2,...)
kubectl get pods -l &amp;#34;release in (canary,alpha,beta)&amp;#34;
# KEY notin (VALUE1,VALUE2,...)
kubectl get pods -l &amp;#34;release notin (canary,alpha,beta)&amp;#34;
# KEY(存在某个键)
# !KEY(不存在某个键)
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>deployment,service等资源通常支持通过以下字段来匹配相应的标签&lt;/p>
&lt;pre tabindex="0">&lt;code># matchLabels: 直接给定键值
# matchExpression: 基于给定的表达式来定义使用标签选择器
#
# 方式为:{key: &amp;#34;KEY&amp;#34;, operator:&amp;#34;OPERATOR&amp;#34;, values:[VAL1,VAL2,...]}
# 操作符常用的有:
# In, Notin: values字段的值必须为非空列表
# Exists, NotExists: value字段的值必须为空列表
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>node也可以打标签&lt;/p>
&lt;ul>
&lt;li>创建pod时,有一个字段叫做nodeSelector&amp;lt;map[string]string&amp;gt;(节点标签选择器),可以用来选择在哪些标签节点上运行
&lt;pre tabindex="0">&lt;code> - spec:
containers:
- xxx
- xxx
选择节点可以有以下方式:
----------------
nodeSelector:
disktype: ssd
----------------
nodeName:
node02
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>annotation:&lt;/p>
&lt;ul>
&lt;li>与labels的区别在于,他不能用于挑选资源对象,仅用于为对象提供&amp;quot;元数据&amp;quot;;
&lt;ul>
&lt;li>这些&amp;quot;元数据&amp;quot;在某些时候可能被某些程序用到,并且很重要&lt;/li>
&lt;li>annotation中键值的大小可大可小,不再受字符的限制&lt;/li>
&lt;li>查看annotations可以通过describe来查看&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>pod的生命周期:&lt;/p>
&lt;ul>
&lt;li>如下图:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> --------------------------------------------------------------------
| Pod |
--------------------------------------------------------------------
a--&amp;gt;| -------- |
| |init c| |
| -------- |
| -------- |
| |init c| |
| -------- |
| -------- |
| |init c| |
| -------- |
| | -----------------
| | |liveness probe |
| | -----------------
| | -----------------
| | |readiness probe|
| | -----------------
| | ------------ ----------
| | |post start| |pre stop|
| | ------------ ----------
| b |
|&amp;lt;--------------------------&amp;gt;| --------------------------------
| | | main container |
| | --------------------------------
| |&amp;lt;---------------------------------
| | c
| |
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>各个阶段说明&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code> 1,a是pod中创建容器前的初始化动作(entrypoint中定义的初始化动作内容),这里需要一点时间,时间可能比较短,可以忽略
2,在主容器启动前,可能需要做一些环境设定和配置,此处有一系列的init container,专门用于给主容器做环境初始化动作(初始化容器是需要串行执行的)
3,等所有的初始化容器完成之后,拉起主容器
4,主容器退出,pod的生命周期结束
5,在主容器的启停前后,可以存在两个分别称为post start和pre stop的
- post start:在启动完执行一次后自动退出
- pre stop: 在结束前执行一次的动作
- 钩子触发,用于开始前的预设,结束前的清理
6,还可以做health check,一般来说,在post start执行完成之后,可以做两类检测(k8s支持两类)
- liveness probe : 存活状态检测,检测主进程是否还在运行(避免已经进入死循环还不退出的情况),主容器是否处于运行状态
- readiness probe: 就绪状态检测,容器中的主进程是否已经准备就绪并可以对外提供服务
- 两种probe都支持三种探测行为:
a,执行自定义命令
b,向指定的套接字发请求(向指定端口发请求)
c,向指定的http发请求(向指定url发送GET请求)
- kubernetes和docker的探测差别:docker不需要探测liveness,因为只有一个容器,kubernetes需要,因为一个pod中可能有多个容器存在
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>pod的各种状态:
&lt;ul>
&lt;li>pending:挂起,启动条件没满足,调度未完成(比如已经创建,但没有适合运行的节点,即没有符合nodeselector或者nodename的节点)&lt;/li>
&lt;li>running:运行中&lt;/li>
&lt;li>failed:失败&lt;/li>
&lt;li>succeed:成功,存在时间很短&lt;/li>
&lt;li>unknown:所有信息的获取都是apiserver和各个节点上的kubelet交互获取的,如果kubelet出故障了,就有可能出现unknown的状态&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>用户创建pod时会经历哪些阶段:
&lt;ul>
&lt;li>用户创建pod时,发送请求给到apiserver&lt;/li>
&lt;li>apiserveri将创建请求的目标状态保存到etcd中&lt;/li>
&lt;li>apiserver请求schedule,进行调度,并将调度的结果保存到etcd中(运行在哪个节点上)&lt;/li>
&lt;li>etcd状态信息更新后,调度节点上的kubelet通过与apiserver通信,获取到有一些任务给到自己了&lt;/li>
&lt;li>此时此kubelet通过apiserver拿到此前用户提交的创建清单,根据清单在当前节点上运行这个pod&lt;/li>
&lt;li>启动后,pod有一个当前状态,再将当前pod状态发回给apiserver&lt;/li>
&lt;li>apiserver再次将该信息存入etcd中&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pod生命周期中的重要行为:
&lt;ul>
&lt;li>初始化容器&lt;/li>
&lt;li>容器探测
&lt;ul>
&lt;li>liveness probe&lt;/li>
&lt;li>readiness probe&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>pod在kubernetes上代表的是运行的程序或者进程,给用户提供服务的主要单位,当pod发生故障时,需要让其平滑终止,才能确保数据不会丢失
&lt;ul>
&lt;li>在给pod发送delete请求时,pod给各个容器发送TERM信号,容器自己停止(给予一个宽限期)&lt;/li>
&lt;li>超过宽限期后,发送kill信号,杀掉进程&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>restartPolicy:
&lt;ul>
&lt;li>Always: 总是重启&lt;/li>
&lt;li>OnFailure: 只有状态为错误时才重启&lt;/li>
&lt;li>Never: 从不重启&lt;/li>
&lt;li>一旦一个pod被调度到某个节点以后,只要这个节点在,这个pod就不会被重新调度了;pod里面的容器只会被重启,如果容器不满足启动条件,则容器会一直在那不断重启(取决于策略定义)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="kubernetes-pod控制器应用进阶二">kubernetes Pod控制器应用进阶(二)&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>探针(kubectl explain pods.spec.containers.livenessProbe)&lt;/p>
&lt;pre tabindex="0">&lt;code># a, ExecAction
# b, TCPSocketAction
# c, HTTPGetAction
------------------------------------------------------------------------
Exec:
------------------------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
name: liveness-probe-pod
namespace: default
spec:
containers:
- name: liveness-probe-container
image: busybox:latest
imagePullPolicy: IfNotPresent
command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;touch /tmp/healthy; sleep 30; rm -f /tmp/healthy; sleep 3600&amp;#34;]
livenessProbe:
exec:
command: [&amp;#34;test&amp;#34;, &amp;#34;-e&amp;#34;, &amp;#34;/tmp/healthy&amp;#34;]
initialDelaySeconds: 1
periodSeconds: 3
------------------------------------------------------------------------
TCPSocket:
------------------------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
name: liveness-httpget-pod
namespace: default
spec:
containers:
- name: liveness-httpget-container
image: ikubernetes/myapp:v1
imagePullPolicy: IfNotPresent
ports:
- name: http
containerPort: 80
livenessProbe:
httpGet:
port: http
path: /index.html
initialDelaySeconds: 1
periodSeconds: 3
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>就绪性探测使用的场景&lt;/p>
&lt;ul>
&lt;li>pod提供的服务是通过war来展开的
&lt;ul>
&lt;li>war包很大,容器运行之后,war包展开还需要10s钟时间&lt;/li>
&lt;li>容器运行之后,service作为服务入口,通过标签选择器已经关联到该pod了(请求可以调度到该pod了)&lt;/li>
&lt;li>新分配到这个pod的请求因还未准备好,所以会出现请求失败的情况&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>使用pod提供服务,必须要用到liveness probe和readiness probe&lt;/p>
&lt;pre tabindex="0">&lt;code># readiness probe
------------------------------------------------------------------------
TCPSocket:
------------------------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
name: readiness-probe-pod
namespace: default
containers:
- name: readiness-probe-container
image: ikubernetes/myapp:v1
imagePullPolicy: IfNotPresent
ports:
- name: http
containerPort: 80
readinessProbe:
httpGet:
port: http
path: /index.html
indexDelaySeconds: 1
periodSeconds: 3
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>lifecycle(postStart,preStop)字段,启动停止钩子函数&lt;/p>
&lt;pre tabindex="0">&lt;code># a, ExecAction
# b, TCPSocketAction
# c, HTTPGetAction
------------------------------------------------------------------------
postStart:
------------------------------------------------------------------------
apiVersion: v1
kind: Pod
metadata:
name: poststart-pod
namespace: default
spec:
containers:
- name: poststart-container
image: ikubernetes/myapp:v1
imagePullPolicy: IfNotPresent
lifecycle:
postStart:
exec:
command: [&amp;#34;/bin/sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;sed -i &amp;#39;s/MyApp/Home_Page/&amp;#39; /usr/share/nginx/html/index.html&amp;#34;]
command: [&amp;#34;nginx&amp;#34;]
args: [&amp;#34;-g&amp;#34;, &amp;#34;daemon off&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;/etc/nginx/nginx.conf&amp;#34;] -----------&amp;gt;注意不要和lifecycle的command有强依赖
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/cloud/" term="cloud" label="cloud"/><category scheme="https://ruisum.top/tags/cloud/" term="cloud" label="cloud"/><category scheme="https://ruisum.top/tags/docker/" term="docker" label="docker"/><category scheme="https://ruisum.top/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/" term="云原生" label="云原生"/><category scheme="https://ruisum.top/tags/kubernetes/" term="kubernetes" label="kubernetes"/></entry><entry><title type="text">docker学习</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/cloud/docker%E5%AD%A6%E4%B9%A0/"/><id>https://ruisum.top/tech/cloud/docker%E5%AD%A6%E4%B9%A0/</id><updated>2022-04-26T23:15:07+08:00</updated><published>2021-08-10T22:01:26+00:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">介绍容器的实现,讲解docker常用命令和Dockerfile的使用</summary><content type="html">&lt;h2 id="-容器是什么">#. 容器是什么&lt;/h2>
&lt;p>1, LXC(linux container): linux容器&lt;/p>
&lt;p>2, 虚拟化类型:&lt;/p>
&lt;ul>
&lt;li>主机级虚拟化:
Type-I: 直接在硬件上安装一个hypervisor,再在hypervisor上使用虚拟机
Type-II: virtualbox,vmware workstation,kvm等;先存在一个宿主机,安装好host os,在host os上再安装vmm(virtual machine manager),vmm上再启动虚拟机,还需要自己安装操作系统&lt;/li>
&lt;li>容器级虚拟化: 所有的用户空间不再分属于不同内核,从属于同一内核
&lt;ul>
&lt;li>主机级虚拟化可以在创建时就天然限制资源(CPU,MEM)&lt;/li>
&lt;li>CPU资源属于可压缩资源,MEM不属于,当进程申请MEM时没有,则会触发OOM&lt;/li>
&lt;li>内核级必须实现一种功能,来限制用户空间中每一个进程所有可用资源总量
&lt;ul>
&lt;li>可以实现在整体资源上按比例分配,也可以在单一用户空间上,实现做核心绑定,通过CGrouop(control group)来实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3, 内核和用户空间&lt;/p>
&lt;ul>
&lt;li>能够有产出的都是用户空间的应用程序,像部署一个nginx服务,http服务,再对外提供服务&lt;/li>
&lt;li>内核是协调资源的作用,出于通用目的而设计的资源管理平台&lt;/li>
&lt;li>现代软件基本都是对内核的系统调用和库调用,应用程序依赖着内核和操作系统&lt;/li>
&lt;/ul>
&lt;p>4, kvm等虚拟化&lt;/p>
&lt;ul>
&lt;li>资源需要经过两层调度,虚拟机操作系统层面是一层,宿主机层面又是一层,浪费,存在额外的开销,效率低&lt;/li>
&lt;li>优点是资源隔离彻底,某台虚拟机出现问题,不要影响到其他的虚拟机&lt;/li>
&lt;li>提高效率的方式: 减少中间层&lt;/li>
&lt;/ul>
&lt;p>5, 容器最早出现的形式是freebsd里面的jail,迁移到linux中后,变成了vserver(chroot)&lt;/p>
&lt;p>6, 用户空间的隔离类型,都是在内核级别实现的&lt;/p>
&lt;ul>
&lt;li>UTS: CLONE_NEWUTS,2.6.19之后支持;主机名和域名,在内核当中以名称命名,并且单独隔离开;可以分别各自使用,而不影响主的,真正的命名空间&lt;/li>
&lt;li>Mount: CLONE_NEWNS,2.4.19之后支持;文件系统&lt;/li>
&lt;li>IPC: CLONE_NEWIPC,2.6.19之后支持;信号量,消息队列和共享内存,进程间通信&lt;/li>
&lt;li>PID: CLONE_NEWPID,2.6.24之后支持;进程号&lt;/li>
&lt;li>User: CLONE_NEWUSER,3.8之后支持;用户(组)等相关信息也要做隔离,以root用户说明,只在容器内部是root用户,在宿主机上实际是普通用户&lt;/li>
&lt;li>Net:CLONE_NEWNET,2.6.29之后支持;网络设备,网络栈,端口等,有自己专有的TCP/IP协议栈&lt;/li>
&lt;/ul>
&lt;p>7, 一个操作系统运行存在两棵树: 进程树,文件系统树&lt;/p>
&lt;ul>
&lt;li>进程管理从来都是白发人送黑发人,父进程只有把所有子进程,子进程的子进程...都送完才能放心离开&lt;/li>
&lt;li>每个用户空间都有一个init进程(docker中自己定义),当init进程结束时,docker容器实例也停止&lt;/li>
&lt;li>一个docker容器中可以存在多个进程,但需要是由同一个最原始的init进程生成&lt;/li>
&lt;/ul>
&lt;p>8, linux现已在内核中原生支持名称空间(namespaces),并且通过系统调用向外输出&lt;/p>
&lt;ul>
&lt;li>clone()&lt;/li>
&lt;li>setns(): 进程创建完成后放到某个命名空间中去&lt;/li>
&lt;li>unshare(): 将进程从某个命名空间中拿出来&lt;/li>
&lt;/ul>
&lt;p>9, 要想使用容器,得靠用于支撑用户空间的内核级的内核资源的名称空间隔离来实现&lt;/p>
&lt;p>10, CGroup(control group)控制组:
把系统资源分为多个组,然后把每个组的资源指派或者分配到特定的用户空间的进程上去,分类如下:&lt;/p>
&lt;ul>
&lt;li>blkio: 块设备IO&lt;/li>
&lt;li>cpu: CPU&lt;/li>
&lt;li>cpuacct: CPU资源使用报告&lt;/li>
&lt;li>cpuset: 多处理器平台上的CPU集合&lt;/li>
&lt;li>devices: 设备访问&lt;/li>
&lt;li>freezer: 挂起或恢复任务&lt;/li>
&lt;li>memory: 内存使用量及报告&lt;/li>
&lt;li>perf_event: 对cgroup中的任务进行统一性能测试&lt;/li>
&lt;li>net_cls: cgroup中的任务创建的数据报文的类别标识符&lt;/li>
&lt;/ul>
&lt;p>11, 可以给一个系统上所有运行的进程分门别类的进行分类,每个类就是一个组,叫做控制组&lt;/p>
&lt;ul>
&lt;li>每个控制组内部还可以继续进行划分,分配完成后,每个子组当中的进程自动拥有该控制组分配的资源,除非进一步对子组进行分类&lt;/li>
&lt;/ul>
&lt;p>12, 容器级虚拟化相对主机级虚拟化,安全隔离相差很多,相应的为了防止利用漏洞使用其他用户空间的资源,docker也相应的做了一些加固&lt;/p>
&lt;ul>
&lt;li>结合selinux使用&lt;/li>
&lt;/ul>
&lt;p>13, 容器实现的三个核心技术:&lt;/p>
&lt;ul>
&lt;li>chroot&lt;/li>
&lt;li>namespaces&lt;/li>
&lt;li>cgroups&lt;/li>
&lt;/ul>
&lt;p>14, 一个容器只运行一个主进程,相应的优缺点&lt;/p>
&lt;ul>
&lt;li>缺点:
&lt;ul>
&lt;li>空间占用更多&lt;/li>
&lt;li>工具不能共用了,如果需要调试工具,需要在容器中安装&lt;/li>
&lt;li>不方便运维,需要专门的编排,不然使用容器部署应用比单独安装服务更麻烦&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>优点:
&lt;ul>
&lt;li>方便研发,一次打包,到处运行&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>15, docker分层构建,联合挂载&lt;/p>
&lt;ul>
&lt;li>每一个镜像都是只读的,多层联合挂载后提供的视图就是当前使用的镜像&lt;/li>
&lt;li>每一个容器有一个自己的可写层,在联合挂载的最顶层附加一个新层,能读能写,容器专有的
&lt;ul>
&lt;li>如果要删除一个文件,且刚好属于上一层镜像中的文件,实现方式为标记为不可见&lt;/li>
&lt;li>需要修改一个文件,该文件属于上一层或多层的文件,则通过写时复制的方式实现&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>持久化使用的数据,通过在容器外部挂载一个共享存储(ceph,glusterfs,iscsi等)实现&lt;/li>
&lt;/ul>
&lt;p>16, 在docker的基础之上,能够把这些应用程序之间的依赖关系,从属关系,隶属关系等等反映在启动,关闭时的次序和管理逻辑中,这种功能叫做容器编排&lt;/p>
&lt;ul>
&lt;li>docker-compose(单机),docker-swarm(多机集群),docker-machine&lt;/li>
&lt;li>mesos+marathon&lt;/li>
&lt;li>kubernetes --&amp;gt; k8s&lt;/li>
&lt;/ul>
&lt;p>17, docker后面研发libcontainer,替换了lxc,后面libcontainer进化为runc(run container)&lt;/p>
&lt;ul>
&lt;li>lxc(linux container) --&amp;gt; libcontainer --&amp;gt; runc&lt;/li>
&lt;li>为了标准化容器相关(容器引擎,容器底层镜像格式)&lt;/li>
&lt;li>runc,容器运行时的环境标准&lt;/li>
&lt;li>容器镜像格式标准OCF(open container format),事实上的工业标准&lt;/li>
&lt;/ul>
&lt;p>18, iaas, paas, saas 的差别&lt;/p>
&lt;pre tabindex="0">&lt;code>------------------ S
| Application | |
------------------ |
| Data | |
------------------ P |
| Runtime | | |
------------------ | |
| Middleware | | |
------------------ | |
| OS | | |
------------------ I | |
| Virtualization | | | |
------------------ | | |
| Servers | | | |
------------------ | | |
| Storage | | | |
------------------ | | |
| Networking | | | |
------------------
&lt;/code>&lt;/pre>&lt;h2 id="-docker基础用法">#. docker基础用法&lt;/h2>
&lt;p>1, 相关名词&lt;/p>
&lt;ul>
&lt;li>OCI(open container initiative),开放容器协会,主要目的是围绕容器格式和运行时制定一个开放的工业化标准,由两部分组成:
&lt;ul>
&lt;li>runtime-spec(The Runtime Specification): 运行时标准&lt;/li>
&lt;li>image-spec(The Image Specification): 镜像格式标准&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>OCF(open container format),开放容器镜像格式&lt;/li>
&lt;li>runC是一个cli工具,依照OCI标准来运行容器
&lt;ul>
&lt;li>容器以runC子程序的方式启动,可以被集成到各种不同的操作系统,而且可以不需要守护进程存在&lt;/li>
&lt;li>runC是从libcontainer发展而来的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>2, docker架构,由一下几部分组成&lt;/p>
&lt;p>docker可以认为是一个C/S的架构,无论时server端还是client端,都是由一个docker程序来提供,这个docker程序有很多子程序&lt;/p>
&lt;ul>
&lt;li>docker client
&lt;ul>
&lt;li>docker pull&lt;/li>
&lt;li>docker build&lt;/li>
&lt;li>docker run&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker host
&lt;ul>
&lt;li>docker daemon: docker众多子程序中的一个,运行为daemon,即守护进程
&lt;ul>
&lt;li>mysql接入用户请求一般有两种方式,分别是:
a,标准的TCP/IP协议,IP+端口的方式
b,使用socket文件,在本机接入&lt;/li>
&lt;li>类似于mysql监听,docker也监听在套接字上,为了安全起见,默认时只监听本机,支持三种套接字
a,ipv4套接字(ipv4地址+端口)
b,ipv6套接字(ipv6地址+端口)
c,unix socket file,监听在本机的一个文件上,上面两个没有放开的话,就会只监听本机(127.0.0.1)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker containers
&lt;ul>
&lt;li>启动容器时,就是基于镜像来启动,在已有的镜像之上,为一个容器启动一个专用的可写层&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker images
&lt;ul>
&lt;li>不确定要用哪些,具体要用的时候再下载&lt;/li>
&lt;li>要用的时候就必须要加载到本地&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker registry(docker镜像仓库,默认就是dockerhub)
&lt;ul>
&lt;li>支持http/https,默认必须使用https,为了安全&lt;/li>
&lt;li>要使用http,必须在配置文件中明确定义,才能正常使用&lt;/li>
&lt;li>registry而不是repository,因为registry有三个功能
&lt;ul>
&lt;li>repository: 存储镜像的仓库&lt;/li>
&lt;li>auth: 用于认证&lt;/li>
&lt;li>catalog: 提供已有镜像的索引,即仓库名(nginx) + tag(1.10)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3, docker支持restful风格的调用,docker中的资源对象&lt;/p>
&lt;ul>
&lt;li>images和containers的关系可以类比与程序(software)和进程(process),镜像是静态的,容器是动态的,存在生命周期&lt;/li>
&lt;li>restful风格的资源对象都是可以增删改查的
&lt;ul>
&lt;li>images&lt;/li>
&lt;li>containers&lt;/li>
&lt;li>networks&lt;/li>
&lt;li>volumes&lt;/li>
&lt;li>plugins&lt;/li>
&lt;li>other objects&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4, docker的安装使用&lt;/p>
&lt;ul>
&lt;li>为了能够正常使用docker,要求环境的内核版本必须要在3.10以上(user namespace是在3.8之后才支持的)&lt;/li>
&lt;li>红帽在2.6.32之后可以安装docker,打了补丁补进去了(但还有很多不确定与因素,建议不要跑在centos6上)&lt;/li>
&lt;li>建议不要使用Centos-Base.repo这个源中的docker,因为版本较老,有很多软件要求使用新版本docker的特性,但也不要使用最新的docker版本(k8s不支持最新版),使用docker-ce.repo中stable版&lt;/li>
&lt;li>当前docker的配置文件是/etc/docker/daemon.json
&lt;ul>
&lt;li>使用images时,建议使用加速器(docker cn/阿里云)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>需要查看当前docker的详细信息,可以使用docker version来查看
&lt;ul>
&lt;li>docker info输出中的Storage Drive这项很重要
a,docker镜像需要使用到多层构建,联合挂载,这两项要求必须使用特殊的文件系统才能实现,专用的文件驱动
b,一般包含overlay2和aufs;centos7.4之前没有使用可能和内核版本有关系,之前的还不支持
c,centos7之前还有使用到dm(弱爆了),就是lvm的实现,使用dm的方式,docker的性能很差,而且还不稳定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>5, docker镜像及容器&lt;/p>
&lt;ul>
&lt;li>alpine: 专门用于构建非常小的镜像文件的一个微型发行版,能够给程序提供运行环境,但体积非常小(缺少相应的调试工具)&lt;/li>
&lt;li>停掉一个容器的方式有:
&lt;ul>
&lt;li>stop: 相当于sigterm&lt;/li>
&lt;li>kill: 相当于sitkill&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>启动一个容器时,不能让其跑在后台,不然启动就会停止(一个容器就是为了一个进程,如果跑后台,终端没有任何程序,那docker就认为已经结束了)&lt;/li>
&lt;/ul>
&lt;h2 id="-docker镜像管理基础">#. docker镜像管理基础&lt;/h2>
&lt;p>1, docker镜像含有启动容器所需要的文件系统及其内容,容器镜像用于创建并启动docker容器&lt;/p>
&lt;ul>
&lt;li>采用分层构建的机制,最底层为bootfs,其次为rootfs
&lt;ul>
&lt;li>bootfs: 用于系统引导的文件系统,包括bootloader和kernel,容器启动完成后会被卸载以节约内存资源
&lt;ul>
&lt;li>bootfs只在容器启动的时候存在,当容器已经挂载了rootfs后,bootfs层将会被卸载(不是被删除)&lt;/li>
&lt;li>存在一个问题,如果存在bootfs这一层,那是否拉起的容器可以支持宿主机内核不支持的特性?&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>rootfs: 位于bootfs之上,表现为docker容器的根文件系统
&lt;ul>
&lt;li>传统模式中,系统启动时,内核挂载rootfs时会首先将其挂载为只读模式,完整性自检完成后将其重新挂载为读写模式&lt;/li>
&lt;li>docker中,rootfs由内核挂载为'只读'模式,而后通过联合挂载技术而外挂载成一个'可写'层&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>最上层为'可读写'层,其下的均为'只读'层
&lt;ul>
&lt;li>容器启动后,所有的写操作都是在最上一层的'可读写'层完成的,当删除一个容器时,可读写层一并被释放&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>2, 联合挂载文件系统分类&lt;/p>
&lt;ul>
&lt;li>aufs(advanced multi-layered unification filesystem): 高级多层统一文件系统
&lt;ul>
&lt;li>用于为linux文件系统实现'联合挂载'&lt;/li>
&lt;li>aufs是之前的UnionFS的重新实现,但未能整合到linux内核中(据说是代码很烂),所以如果需要使用,需要给内核打补丁(redhat系不支持,因为不允许)&lt;/li>
&lt;li>docker最初使用aufs作为容器文件系统层,目前仍作为存储后端之一来支持&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>aufs的竞争产品为overlay,从3.18版本开始被合并到linux内核中&lt;/li>
&lt;li>docker的分层镜像,除了aufs,docker还支持btrfs,devicemapper和vfs等
&lt;ul>
&lt;li>在ubuntu系统下,docker默认ubuntu的aufs&lt;/li>
&lt;li>在centos7上,用的时devicemapper(性能差还不稳定)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>目前推荐使用overlay2
&lt;ul>
&lt;li>overlay是抽象文件系统,属于二级文件系统,需要先有一层文件系统(xfs,ext...)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3,docker registry分类&lt;/p>
&lt;ul>
&lt;li>registry 用于保存docker镜像,包括镜像的层次结构和元数据&lt;/li>
&lt;li>用户可以自建registry,也可以使用官方的dockerhub&lt;/li>
&lt;li>分类:
&lt;ul>
&lt;li>sponsor registry: 第三方registry,供客户和docker社区使用&lt;/li>
&lt;li>mirror registry: 第三方registry,供客户使用&lt;/li>
&lt;li>vendor registry : 由发布docker镜像的供应商提供的registry&lt;/li>
&lt;li>private registry: 通过设有防火墙和额外的安全层的私有实体提供的registry&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker registry中的镜像通常由开发人员制作,而后推送至'公共'或'私有'registry上保存&lt;/li>
&lt;li>获取镜像的标准格式: docker pull &lt;repository>:[:port]/[&lt;namespace>/]/&lt;name>:&lt;tag>&lt;/li>
&lt;/ul>
&lt;p>4,云原生的解释&lt;/p>
&lt;ul>
&lt;li>面向云环境中去运行这个程序而调云系统本身自有的功能而开发的应用程序,就是为了云环境运行而生的&lt;/li>
&lt;li>docker容器本身如果通过修改配置文件的方式来改配置,相对麻烦,故想了一种方式,通过运行时传入环境变量的方式来运行(早期的解决方式)&lt;/li>
&lt;/ul>
&lt;p>5,docker hub的使用
docker hub主要提供如下的功能特性:&lt;/p>
&lt;ul>
&lt;li>image repository: 镜像仓库&lt;/li>
&lt;li>automated builds: 自动构建 dockerfile(change/push) --&amp;gt; github --&amp;gt; build image --&amp;gt; docker hub&lt;/li>
&lt;li>webhooks: 当dockerfile提交成功时,自动触发钩子构建镜像&lt;/li>
&lt;/ul>
&lt;p>6,镜像的生成途径&lt;/p>
&lt;ul>
&lt;li>Dockerfile&lt;/li>
&lt;li>基于容器制作
&lt;ul>
&lt;li>基于先有容器制作镜像时,建议先暂停该镜像,再commit,防止文件数据的缺失
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 命令为:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker commit -p &amp;lt;container&amp;gt; &lt;span class="o">[&lt;/span>repository&lt;span class="o">[&lt;/span>:tag&lt;span class="o">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 替换原有镜像的CMD或者其它参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker commit -p &amp;lt;container&amp;gt; -c &lt;span class="s2">&amp;#34;CMD [&amp;#39;/bin/httpd&amp;#39;, &amp;#39;-f&amp;#39;, &amp;#39;-h&amp;#39;, &amp;#39;/data/html&amp;#39;]&amp;#34;&lt;/span> &lt;span class="o">[&lt;/span>repository&lt;span class="o">[&lt;/span>:tag&lt;span class="o">]]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Docker Hub automated build(也是基于Dockerfile)&lt;/li>
&lt;/ul>
&lt;p>7,不通过registry,直接导入导出镜像文件&lt;/p>
&lt;ul>
&lt;li>docker save -o &lt;filename>&lt;/li>
&lt;li>docker load -i &lt;filename>&lt;/li>
&lt;/ul>
&lt;h2 id="-容器虚拟化网络">#. 容器虚拟化网络&lt;/h2>
&lt;p>1,网络名称空间主要是实现网络设备(网卡,协议栈)的隔离&lt;/p>
&lt;ul>
&lt;li>当网络设备不够用时,可以通过命令生成虚拟网络设备,linux内核支持实现生成两种网络设备:
&lt;ul>
&lt;li>二层网络设备
&lt;ul>
&lt;li>成对出现,类似一根网线两头,一根接入网络命名空间,一头接入虚拟交换机(虚拟网桥),就可以模拟一台主机连接到一台交换机的场景&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>三层网络设备&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>linux内核原生支持二层网桥虚拟设备(软件构建交换机),虚拟化网络&lt;/li>
&lt;li>linux上实现路由的方式,可以通过直接增加一个netns实现,将相应网桥的网卡接入该netns,然后在netns中配置路由规则即可
&lt;ul>
&lt;li>桥接不安全,跨机容易出现风暴&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>2,virtualbox/vmware桥接模式的实现&lt;/p>
&lt;ul>
&lt;li>将物理网卡当作交换机来使用,虚拟机的流量都是通过物理网卡转发过去的,对于物理机本身的流量,是通过对本机增加一个虚拟网卡,物理网卡流量转到该网卡实现的&lt;/li>
&lt;/ul>
&lt;p>3,overlay network(叠加网络)&lt;/p>
&lt;ul>
&lt;li>叠加网络(隧道实现),用于实现跨机同网段通信
&lt;ul>
&lt;li>C1(container)在H1(host)上,C1 IP 172.17.0.11&lt;/li>
&lt;li>C2(container)在H2(host)上,C2 IP 172.17.0.22&lt;/li>
&lt;li>通过隧道实现直接通信,省去了两次NAT的动作(先SNAT,再DNAT),类似12inN中的vxlan实现(报文两次三层封装)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4,容器类型,及容器类型&lt;/p>
&lt;ul>
&lt;li>bridged container(bridge): 桥接容器,默认模式,每起一个容器,新增一对veth peer,一个接在容器中,一个接入docker0&lt;/li>
&lt;li>open container(host): 开放式容器,共享宿主机的协议栈,网卡,主机名,进程见通信(UTC,IPC,NET)&lt;/li>
&lt;li>closed container(none): 封闭式容器,拉起的容器只有lo,不需要网络&lt;/li>
&lt;li>joined container: 联盟式容器,几个容器共享网络名称空间(UTC,IPC,NET名称空间是共享的)&lt;/li>
&lt;/ul>
&lt;p>5,可以使用inspect命令查看任何一个docker对象的情况&lt;/p>
&lt;ul>
&lt;li>docker network inspect &lt;network name>&lt;/li>
&lt;li>docker container inspect &lt;container name>&lt;/li>
&lt;li>docker volume inspect &lt;volume name>&lt;/li>
&lt;/ul>
&lt;h2 id="-容器网络">#. 容器网络&lt;/h2>
&lt;p>1,容器间可以共享IPC,UTC,NET命名空间&lt;/p>
&lt;p>2,可以手动操作网络名称空间,因为由ip命令&lt;/p>
&lt;ul>
&lt;li>想模拟容器的网络名称空间,只靠ip命令就能完成&lt;/li>
&lt;/ul>
&lt;p>3,容器启动时可以指定的一些参数&lt;/p>
&lt;ul>
&lt;li>-h指定hostname&lt;/li>
&lt;li>--dns指定dns服务器(/etc/resolv.conf文件会记录)&lt;/li>
&lt;li>--add-host直接外部注入host解析内容&lt;/li>
&lt;/ul>
&lt;p>4,opening inbound communication(如何开放nat桥桥接式服务到宿主机外部提供服务,可以使用-p参数来实现)&lt;/p>
&lt;ul>
&lt;li>使用-p来实现,有以下@sh几种方式:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -p &amp;lt;containerPort&amp;gt;: 将指定的容器端口映射至主机所有地址的一个动态端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name myweb --rm -p &lt;span class="m">80&lt;/span> mageedu/httpd:v0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -p &amp;lt;hostPort&amp;gt;:&amp;lt;containerPort&amp;gt;: 将容器端口映射至指定的主机端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name myweb --rm -p 172.20.0.67::80 mageedu/httpd:v0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -p &amp;lt;ip&amp;gt;::&amp;lt;containerPort&amp;gt;: 将指定的容器端口映射至主机指定&amp;lt;ip&amp;gt;的动态端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name myweb --rm -p 80:80 mageedu/httpd:v0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># -p &amp;lt;ip&amp;gt;:&amp;lt;hostPort&amp;gt;:&amp;lt;containerPort&amp;gt;:将指定的容器端口映射至主机指定&amp;lt;ip&amp;gt;的端口&amp;lt;hostPort&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name myweb --rm -p 172.20.0.67:8080:80 mageedu/httpd:v0.2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 动态端口指的是随机端口,具体的映射结果可以使用docker port命令查看&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 使用-P时,可以不用指定端口,默认会将容器监听的端口暴露出去&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>5,joined containers(联盟式容器)&lt;/p>
&lt;ul>
&lt;li>联盟式容器是指使用某个已存在容器的网络接口的容器,接口被联盟内的各容器共享使用; 因此联盟式容器间完全无隔离
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建一个监听2222端口的http服务容器&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -d -it --rm -p &lt;span class="m">2222&lt;/span> busybox:latest /bin/httpd -p &lt;span class="m">2222&lt;/span> -f
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建一个联盟式容器,并查看其监听的端口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --rm --net container:web --name joined busybox:latest netstat -tan
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## another example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name b1 -it --rm busybox
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name b2 --network container:b1 -it --rm busybox
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>联盟式容器彼此间虽然共享一个网络名称空间,但其他名称空间如User,Mount等还是隔离的&lt;/li>
&lt;li>联盟式容器彼此间存在端口冲突的可能性,因此通常只会在多个容器上的程序需要程序loopback接口互相通信,或对某已存的容器的网络属性进行监控时才使用此种模式的网络模型&lt;/li>
&lt;/ul>
&lt;p>6,可以自定义docker的一些配置(修改/etc/docker/daemon.json)&lt;/p>
&lt;ul>
&lt;li>定义docker0网桥的IP段及其他相关配置
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## docker0使用的网段,会自动识别出所属的网段&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;bip&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;192.168.1.5/25&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## mtu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;mtu&amp;#34;&lt;/span>: &lt;span class="m">1500&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 如果想让容器不获取宿主机的dns,获取指定的dns,可以如下配置&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;dns&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;10.20.1.2&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;10.20.1.3&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 设定容器的默认网关&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;default-gateway&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;10.20.1.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>7,docker默认只支持在本机使用,通过/var/run/docker.sock通信&lt;/p>
&lt;ul>
&lt;li>-H可以指定指向的docker服务器&lt;/li>
&lt;li>可以放开选项,在daemon.json文件中放开
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 增加本机2375端口的监听&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;hosts&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;tcp://0.0.0.0:2375&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;unix:///var/run/docker.sock&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>8,自定义创建docker桥接桥&lt;/p>
&lt;ul>
&lt;li>示例如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 新增mybr0桥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker network create -d bridge --subnet &lt;span class="s2">&amp;#34;172.26.0.0/16&amp;#34;&lt;/span> --gateway &lt;span class="s2">&amp;#34;172.26.0.1&amp;#34;&lt;/span> mybr0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 新起一个容器,网络设置为mybr0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name t1 --net mybr0 busybox:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 默认加入docker0网桥的命令是(default,不加默认就是)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name t2 --net bridge busybox:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;h2 id="-容器存储">#. 容器存储&lt;/h2>
&lt;p>1,为什么要使用data volume&lt;/p>
&lt;ul>
&lt;li>docker镜像由多个只读层叠加而成,启动容器时,docker会加载只读镜像层并在镜像栈顶添加一个读写层&lt;/li>
&lt;li>如果运行中的容器修改了现有的一个已经存在的文件,那该文件将会从读写层下面的只读层复制到读写层,该文件的只读版本仍然存在,之时已经被读写层中该文件的副本所隐藏,此即&amp;quot;写时复制(COW)&amp;quot;机制&lt;/li>
&lt;li>经过多层联合挂载,IO性能肯定不高,对于一些IO要求比较高的应用,这种联合挂载的方式肯定不满足条件&lt;/li>
&lt;/ul>
&lt;p>2,使用容器的可读写层完成相关读写&lt;/p>
&lt;ul>
&lt;li>缺点:
&lt;ul>
&lt;li>删除容器时,所有内容都被删除了&lt;/li>
&lt;li>实现数据存取时,效率比较低&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>若想绕故上述的限制,可以通过存储卷的方式来实现
&lt;ul>
&lt;li>可以理解为在特权名称空间中(宿主机),在宿主机本地找一个文件系统上的目录(或者文件)与容器内的某一文件系统目录(或文件)建立绑定关系&lt;/li>
&lt;li>绑定的实现是通过mount的bind参数实现的,绑定之后,容器写入相应的目录就是写到了宿主机上对应目录下&lt;/li>
&lt;li>使得容器内的进程在数据保存时,能跳过或绕过容器文件系统的限制,从而与宿主机的文件系统建立关联关系,使得可以在容器内与宿主机共享数据或者内容(宿主机可以直接访问容器内内容,宿主机可以给容器直接提供内容)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用了volume的docker容器,run时加--rm参数,实现就类似进程了
&lt;ul>
&lt;li>进程是程序的实例(类比容器是镜像的实例)&lt;/li>
&lt;li>进程执行过程,生成的数据保存在文件系统,停止后,数据仍然还在(类比docker单独挂载了volume保存数据后,容器停止,数据已经保存在volume中)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3,容器启动时,参数会比较多,当需要完全复现一个容器时,可能不记得当时的启动参数了,这个功能可以通过容器编排工具提供&lt;/p>
&lt;p>4,有状态应用和无状态应用&lt;/p>
&lt;ul>
&lt;li>有状态应用是当前这次连接请求是和之前有关联关系的,大多数有状态应用需要持久化数据的&lt;/li>
&lt;li>无状态应用是当前请求和之前没有关联关系&lt;/li>
&lt;/ul>
&lt;p>5,docker的存储卷默认情况下是使用其所在的宿主机之上的本地文件系统目录的&lt;/p>
&lt;ul>
&lt;li>存储卷是关联到宿主机上的一个目录而已,要单独挂载磁盘,需要先在宿主机上完成才行&lt;/li>
&lt;/ul>
&lt;p>6,为什么使用数据卷&lt;/p>
&lt;ul>
&lt;li>关闭并重启容器,其数据不受影响;但删除容器,则其更改将会全部丢失&lt;/li>
&lt;li>存在的问题:
&lt;ul>
&lt;li>存储于联合文件系统中,不利于宿主机访问&lt;/li>
&lt;li>容器间共享数据不便&lt;/li>
&lt;li>删除容器其数据会丢失&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>解决方案: 卷(volum)
&lt;ul>
&lt;li>卷是容器上一个或多个'目录',此类目录可以绕过联合文件系统,与宿主机上的某个目录绑定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>7,卷提供了几项有用的特性以支持持久化存储或共享存储&lt;/p>
&lt;ul>
&lt;li>volume在容器创建之初就会创建,由base image提供的卷中的数据会于此期间完成复制
&lt;ul>
&lt;li>存储卷可以在容器之间复用&lt;/li>
&lt;li>对卷中的数据更改实时生效&lt;/li>
&lt;li>对卷中的数据更改不影响容器镜像的更新&lt;/li>
&lt;li>容器删除后,卷中的数据仍然存在&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>volume的初衷是独立于容器的生命周期实现数据持久化,因此删除容器既不会删除卷,也不会对那些未被应用的卷做垃圾回收操作&lt;/li>
&lt;/ul>
&lt;p>8,卷为docker提供了独立于容器的数据管理机制&lt;/p>
&lt;ul>
&lt;li>可以把镜像想象成静态文件,例如程序,把卷类比于动态内容,例如数据,于是,镜像可以重用,而卷可以共享&lt;/li>
&lt;li>卷实现了'程序(镜像)'和'数据(卷)'的分离,以及'程序(镜像)'和'制作镜像的主机'分离,用户制作镜像时无需再考虑镜像运行的容器所在的主机的环境&lt;/li>
&lt;/ul>
&lt;p>9,卷的类型,docker有两种类型的卷,每种类型的卷都在容器中存在一个挂载点,但其在宿主机上的位置有所不同&lt;/p>
&lt;ul>
&lt;li>bind mount volume(绑定挂载卷): 在宿主机上需要指定挂载路径,在容器中也要指定挂载路径,两个已知路径建立关联关系
&lt;ul>
&lt;li>指定的宿主机路径不存在,默认情况下,会自动创建出来
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it -v HOSTDIR:VOLUMEDIR --name bbox2 busybox:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker inspect -f &lt;span class="o">{&lt;/span>% raw %&lt;span class="o">}{{&lt;/span>.Mounts&lt;span class="o">}}{&lt;/span>% endraw %&lt;span class="o">}&lt;/span> bbox2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>docker-managed volume(docker管理卷):只需要指定容器中的挂载路径,宿主机路径不指定,由docker自动指定一个空目录,与挂载目录建立关联关系
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it -v /data --name bbox1 busybox:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker inspect -f &lt;span class="o">{&lt;/span>% raw %&lt;span class="o">}{{&lt;/span>.Mounts&lt;span class="o">}}{&lt;/span>% endraw %&lt;span class="o">}&lt;/span> bbox1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>使用其他容器的卷
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --name bbox1 --volume-from bbox2 busybox:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>10,使用docker inspect去查看容器的相关信息时,可以使用go模板(go template),类似与ansible的jinja2模板&lt;/p>
&lt;ul>
&lt;li>docker inspect -f {% raw %}{{.Mounts}}{% endraw %} b2&lt;/li>
&lt;li>docker inspect -f {% raw %}{{.NetworkSettings.IPAddress}}{% endraw %} b2&lt;/li>
&lt;/ul>
&lt;p>11,joined-container使用共享卷,实现nmt(nginx+mysql+tomcat)&lt;/p>
&lt;ul>
&lt;li>可以先启动一个基础支撑容器(互联网上有专门的这种容器),先提供一个卷,给后面的容器使用&lt;/li>
&lt;li>nmt三个容器共用一个存储卷,共用(net,uts,ipc)名称空间&lt;/li>
&lt;li>只有nginx对外暴露端口,tomcat和mysql监听在lo上
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">docker run -it --name infracon -it -v /data/infracron/volume/:/data/web/html/ busybox
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name nginx --network container:infracon --volume-from infracon nginx:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name tomcat --network container:infracon --volume-from infracon tomcat:latest
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name mysql --network container:infracon --volume-from infracon mysql:latest
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>对于这种需求,可以使用docker-compose来实现,主要功能是单击编排(还可以做镜像,镜像现做,容器现启动)&lt;/li>
&lt;/ul>
&lt;h2 id="-dockerfile详解一">#. Dockerfile详解(一)&lt;/h2>
&lt;p>1,生产环境下使用nginx场景,修改配置生效的几种方式&lt;/p>
&lt;ul>
&lt;li>docker exec CONTAINER vi, reload进入容器修改配置文件,再reload服务&lt;/li>
&lt;li>挂载存储卷,配置文件在存储卷中,但修改之后还是需要reload操作&lt;/li>
&lt;li>自己制作镜像&lt;/li>
&lt;/ul>
&lt;p>2,制作镜像的两种方式&lt;/p>
&lt;ul>
&lt;li>基于已有镜像制作,修改完成后,提交可读写层
&lt;ul>
&lt;li>日常运维修改很频繁,相应的提交也就很频繁&lt;/li>
&lt;li>版本管理混乱,后续想制作同样的镜像很难&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Dockerfile
&lt;ul>
&lt;li>Dockerfile仅仅就是构建docker镜像的源代码&lt;/li>
&lt;li>Dockerfile的内容就是一个用户可以在命令行下操作,用来装配好docker镜像的指令集合&lt;/li>
&lt;li>docker可以通过读取Dockerfile的内容,自动构建docker镜像&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3,Dockerfile的组成&lt;/p>
&lt;ul>
&lt;li>格式:
&lt;ul>
&lt;li>INSTRUCTION其实并不区分大小写,但是为了规范且和参数区别,一般大写&lt;/li>
&lt;li>docker是按照顺序执行Dockerfile中的INSTRUCTION的&lt;/li>
&lt;li>Dockerfile的第一行必须是FROM开头,用来指定需要构建的镜像的基础镜像是哪个&lt;/li>
&lt;li>Dockerfile中可以执行很多shell命令,但是这个命令是docker容器中的命令,不是宿主机上的命令
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Comment&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>INSTRUCTION arguements&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>构建规范和逻辑
&lt;ul>
&lt;li>要有单独的工作路径(目录)&lt;/li>
&lt;li>工作目录中,要有Dockerfile文件&lt;/li>
&lt;li>需要使用到的文件,需要存放在工作目录下,Dockerfile中引用的路径都是以当前工作目录为起始路径&lt;/li>
&lt;li>对于子目录中不需要拷贝的文件,可以使用.dockerignore文件来罗列(文件排除列表)
&lt;ul>
&lt;li>一行一个文件&lt;/li>
&lt;li>支持通配符&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>环境变量替换
&lt;ul>
&lt;li>环境变量(以ENV开头的部分)同样能被Dockerfile解析&lt;/li>
&lt;li>环境变量在Dockerfile中引用的格式时$variable_name或者${variable_name}&lt;/li>
&lt;li>${variable_name}同样支持少量的shell变量替换操作
&lt;ul>
&lt;li>${variable_name:-word}:变量为空或者变量未设置时,引用的值就是word,变量有值的时候,则使用变量的值&lt;/li>
&lt;li>${variable_name:+word}:变量有值则显示为word,没值就什么都没有&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4,Dockerfile中的指令&lt;/p>
&lt;ul>
&lt;li>FROM
&lt;ul>
&lt;li>FROM指令是最重要的一个,且必须是Dockerfile文件开篇的第一个非注释行,用于为影响文件构建过程指定基准镜像,后续的指令基于此基准镜像提供的运行环境&lt;/li>
&lt;li>基准镜像可以使用任何镜像文件,默认情况下,docker build会在docker主机上查找指定的镜像文件,在其不存在时,则会从docker hub registry上拉取所需要的镜像文件(如果找不到指定的镜像文件,则返回报错)&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> &amp;lt;repository&amp;gt;:&amp;lt;tag&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## 或者&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="s"> &amp;lt;repository&amp;gt;@&amp;lt;digest&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## digest是镜像的哈西码,为的是避免同名镜像被替换&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>MAINTANIER(depreacted已废弃)
&lt;ul>
&lt;li>用于让镜像制作者提供本人信息&lt;/li>
&lt;li>Docker并不限制MAINTANIER出现的位置,建议放在FROM后面&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">MAINTANIER &amp;lt;author&lt;span class="err">&amp;#39;&lt;/span>s details&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>LABEL
&lt;ul>
&lt;li>LABEL指令用于给镜像增加元数据&lt;/li>
&lt;li>一个镜像可以有多个LABEL&lt;/li>
&lt;li>可以在一行中指定多个label(键值对)&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">LABEL&lt;/span> &amp;lt;key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;value&amp;gt; &amp;lt;key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;value&amp;gt; &amp;lt;key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;value&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## MAINTANIER可以作为LABEL中的一个键值数据存在&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>COPY
&lt;ul>
&lt;li>用于从Docker主机复制文件至创建的新映像文件&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">COPY&lt;/span> &amp;lt;src&amp;gt;...&amp;lt;dest&amp;gt;或者&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;src&amp;gt;&amp;#34;&lt;/span>,...&lt;span class="s2">&amp;#34;&amp;lt;dest&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># &amp;lt;src&amp;gt;:要复制的源文件或者目录,支持使用通配符&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># &amp;lt;dest&amp;gt;:目标路径,即正在创建的image的文件系统路径;建议为&amp;lt;dest&amp;gt;使用绝对路径,否则,COPY指定则以WORKDIR为其起始路径&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 注意: 在路径中有空白字符时,通常使用第二种格式&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>文件复制准则:
&lt;ul>
&lt;li>&lt;src>必须是build上下文中的路径,不能是父目录中的文件&lt;/li>
&lt;li>如果&lt;src>是目录,则其内部文件或子目录会被递归复制,但&lt;src>目录自身不会被复制&lt;/li>
&lt;li>如果指定了多个&lt;src>,或在&lt;src>中使用了通配符,则&lt;dest>必须是一个目录,且必须以/结尾&lt;/li>
&lt;li>如果&lt;dest>事先不存在,他将会被自动创建,这包括岐阜目录路径&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ADD
&lt;ul>
&lt;li>类似于COPY指令,ADD支持使用TAR文件和URL路径&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ADD&lt;/span> &amp;lt;src&amp;gt;...&amp;lt;dest&amp;gt;或者&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;src&amp;gt;&amp;#34;&lt;/span>,...&lt;span class="s2">&amp;#34;&amp;lt;dest&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>文件复制准则:
&lt;ul>
&lt;li>同COPY指令&lt;/li>
&lt;li>如果&lt;src>为URL且&lt;dest>不以/结尾,则&lt;src>指定的文件将被下载并直接被创建为&lt;dest>;如果&lt;dest>以/结尾,则文件名URL指定的文件将被下载下来并保存为&lt;dest>/&lt;filename>&lt;/li>
&lt;li>如果&lt;src>是一个本地文件系统上的压缩格式的tar文件,它将被展开为一个目录,其行为类似于'tar -x'命令;然而,通过URL获取到的tar文件将不会自动展开&lt;/li>
&lt;li>如果&lt;src>有多个,或其间接或直接使用了通配符,则&lt;dest>必须是一个以/结尾的目录路径;如果&lt;dest>不以/结尾,则其被视作一个普通文件,&lt;src>的内容将被直接写入到&lt;dest>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>WORKDIR
&lt;ul>
&lt;li>用于为Dockerfile中所有的RUN,CMD,ENTRYPOINT,COPY和ADD指定设定工作目录&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> &amp;lt;dirpath&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 在Dockerfile文件中,WORKDIR指令可以出现多次,其路径也可以为相对路径,不过,其是相对此前一个WORKDIR指令指定的路径&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 另外,WORKDIR也可调用由ENV指定定义的变量&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 示例:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /var/log&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> $STATEPATH&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>VOLUME
&lt;ul>
&lt;li>用于在image中创建一个挂载点目录,以挂载Docker host上的卷或其他容器上卷&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">VOLUME&lt;/span>&lt;span class="s"> &amp;lt;mountpoint&amp;gt;或者&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">VOLUME&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;mountpoint&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>如果挂载点目录下此前在文件存在,docker run命令会在卷挂载完成后将此前的所有文件复制到新挂载的卷中&lt;/li>
&lt;li>与run命令使用的volume不同,Dockerfile中指定VOLUME只能指定docker挂载目录&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>EXPOSE
&lt;ul>
&lt;li>用于为容器打开指定要监听的端口以实现与外部通信&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> &amp;lt;port&amp;gt;[/&amp;lt;protocol&amp;gt;][&amp;lt;port&amp;gt;[/&amp;lt;protocol&amp;gt;]...]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># &amp;lt;protocol&amp;gt;用于指定传输层协议,可为tcp或者udp二者之一,默认为TCP协议&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 注意:写在Dockerfile中的端口暴露,只是提示可以暴露,而不是以该镜像启动的容器就暴露端口&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 在需要暴露时,docker run指定-P选项,会读取到哪些端口需要暴露,并将其暴露出去&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 示例:(构建惊险的Dockerfile中已经存在EXPOSE 80/tcp)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># docker run --name tinyweb1 --rm tinyhttpd:v0.1-6 /bin/httpd -f -h /data/web/html&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># docker port tinyweb1 --&amp;gt; none&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># docker run --name tinyweb1 --rm -P tinyhttpd:v0.1-6 /bin/httpd -f -h /data/web/html&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># docker port tinyweb1 --&amp;gt; 80/tcp -&amp;gt; 0.0.0.0:32768&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>EXPOSE可以一次指定多个端口,如:
&lt;ul>
&lt;li>EXPOSE 11211/udp 11211/tcp&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>写在镜像中的端口,在运行容器时没有指定则被称为待暴露端口,而不会真正暴露,除非在运行容器时加上-P(默认暴露端口)选项&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ENV
&lt;ul>
&lt;li>用于为镜像定义所需的环境变量,并可以被Dockerfile文件中位于其后的其他指令(如ENV,ADD,COPY)所调用&lt;/li>
&lt;li>语法如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ENV&lt;/span> &amp;lt;key&amp;gt; &amp;lt;value&amp;gt; 或者&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &amp;lt;key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;value&amp;gt;...&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 第一种格式中,&amp;lt;key&amp;gt;之后的所有内容均会被视作其&amp;lt;value&amp;gt;的组成部分,因此,一次只能设置一个变量&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 第二种格式可以用于一次设置多个变量,每个变量为一个&amp;#34;&amp;lt;key&amp;gt;=&amp;lt;value&amp;gt;&amp;#34;的键值对,如果&amp;lt;value&amp;gt;中包含空格,可以以反斜线(\)进行转意,亦可通过对&amp;lt;value&amp;gt;加引号进行标识;另外,反斜线也可用于续行.&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 定义多个变量时,建议使用第二种方式,以便在同一层中完成所有功能&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>在Dockerfile中ENV定义的变量,可以在依照其构建出的镜像启动的容器中直接使用&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>5,Dockerfile中请惜字如金,因为每一条指令都会生成一个新的层&lt;/p>
&lt;h2 id="-dockerfile详解二">#. Dockerfile详解(二)&lt;/h2>
&lt;p>1,在docker的上下文当中,有一个重要的特点,一个容器只是为了运行单个程序或者单个应用&lt;/p>
&lt;p>2,在命令行下通过&amp;amp;符放后台执行的程序都是当前shell的子进程,当退出当前shell时,该shell的子进程会被杀掉,相应的该shell下的后台进程也被关闭&lt;/p>
&lt;ul>
&lt;li>如果要实现退出shell时,仍然可以正常运行,需要增加nuhup command &amp;amp;,剥离command与当前shell的关系,相当于把启动这个进程的父进程安排给了init&lt;/li>
&lt;li>在一个用户空间中,不是以shell的子进程去启动一个程序,很多的经验和参数则不能使用
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">ls /var/* &lt;span class="c1"># --&amp;gt; 不在shell下执行的话,*无法被内核解析&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 变量替换 --&amp;gt; 同样不能被解析&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 管道,输入输出重定向等 --&amp;gt; 无法识别&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>3,Dockerfile中的指令&lt;/p>
&lt;ul>
&lt;li>CMD
&lt;ul>
&lt;li>在docker容器中,需要让容器运行的进程变为pid为1的进程
&lt;ul>
&lt;li>
&lt;p>在容器当中,希望以shell的方式启动一个主进程&lt;/p>
&lt;blockquote>
&lt;p>先在用户空间中启动一个shell(pid为1),在shell中以剥离终端的方式启动需要启动的主进程;解决主进程pid不为一的方式为,在shell中exec command --&amp;gt; exec顶替shell的pid=1,取代shell进程,shell退出,command成为pid=1的进程&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>在docker容器中,可以不基于shell,直接启动进程;也可以基于shell,通过shell启动进程,但要基于shell启动,并且不违背这个主进程id为1的原则,需要通过exec来实现&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>CMD是定义一个容器启动时,默认需要执行的程序
&lt;ul>
&lt;li>类似于RUN指令,CMD指令也可用与运行任何命令或应用程序,不过二者的运行时间点不同
&lt;ul>
&lt;li>RUN指令运行于映像文件构建过程中,而CMD指令运行于基于Dockerfile构建出的新镜像文件启动为一个容器时&lt;/li>
&lt;li>CMD指令的首要目的在于为启动的容器指定默认要运行的程序,且其运行结束后,容器也将终止;不过CMD指定的命令可以被docker run的命令行选项所覆盖&lt;/li>
&lt;li>在Dockerfile中,可以存在多个CMD指令,但仅有最后一个会生效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CMD&lt;/span> &amp;lt;command&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;executable&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;param1&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;param2&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;param1&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;param2&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 前两种语法格式的意义同RUN&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 第三种则用于为ENTRYPOINT指令提供默认参数&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>RUN
&lt;ul>
&lt;li>用于指定docker build过程中运行的程序,其可以是任何命令&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">RUN&lt;/span> &amp;lt;command&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;executable&amp;gt;&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;&amp;lt;param1&amp;gt;&amp;#34;&lt;/span>, &lt;span class="s2">&amp;#34;&amp;lt;param2&amp;gt;&amp;#34;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 第一种格式中,&amp;lt;command&amp;gt;通常是一个shell命令,且以&amp;#39;/bin/sh -c&amp;#39;来运行它,这意味着此进程在容器中的PID不为1,不能接收Unix信号,因此,当使用docker stop &amp;lt;container&amp;gt;命令停止容器时,此进程接收不到SIGTERM信号&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;/bin/bash&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;-c&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;&amp;lt;executable&amp;gt;&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;&amp;lt;param1&amp;gt;&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 第二种格式中的参数是一个JSON格式的数组,其中&amp;lt;executable&amp;gt;为要运行的命令,后面的&amp;lt;paramN&amp;gt;为传递给命令的选项或者参数;然而,此种格式指定的命令不会以&amp;#39;/bin/sh -c&amp;#39;来发起,因此常见的shell操作如变量替换以及通配符(?,*等)替换将不会进行;不过,如果要运行的命令依赖于此shell特性的话,可以将其替换为类似下面的格式&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>示例用法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ENV&lt;/span> &lt;span class="nv">WEB_DOC_ROOT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;/data/web/html/&amp;#39;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> /bin/httpd -f -h &lt;span class="si">${&lt;/span>&lt;span class="nv">WEB_DOC_ROOT&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="c1"># ---&amp;gt; 可用&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/httpd&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-h ${WEB_DOC_ROOT}&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># ---&amp;gt; 不可用,如上b所述,该写法不是在shell中执行,不能解析${WEB_DOC_ROOT}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-c&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;/bin/httpd&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-f&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;-h ${WEB_DOC_ROOT}&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># ---&amp;gt; 可用&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ENTRYPOINT
&lt;ul>
&lt;li>类似CMD指令的功能,用于为容器指定默认运行程序,从而使得容器像是一个单独的可执行程序&lt;/li>
&lt;li>与CMD不同的是,由ENTRYPOINT启动的程序不会被docker run命令行指定的参数所覆盖,而且,这些命令行参数会被当作参数传递给ENTRYPOINT指定的程序
&lt;ul>
&lt;li>docker run命令的--entrypoint选项的参数可以覆盖ENTRYPOINT指令指定的程序&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ENTRYPOINT&lt;/span> &amp;lt;command&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;&amp;lt;executable&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;param1&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;&amp;lt;param2&amp;gt;&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 示例:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> /bin/sh -c &lt;span class="c1"># --&amp;gt; inspect image会发现存在两层/bin/sh -c,因为默认这种格式就是/bin/sh -c&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="err">&amp;#39;/bin/sh&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;-c&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="c1"># --&amp;gt; inspect image正常&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>docker run命令传入的命令参数会覆盖CMD指令的内容并附加到ENTRYPOINT命令最后,作为其参数使用&lt;/li>
&lt;li>ENTRYPOINT在Dockerfile中也可以存在多个,但仅有最后一个会生效&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>USER
&lt;ul>
&lt;li>用于指定运行image时的或运行Dockerfile中任何RUN,CMD或ENTRYPOINT指令指定的程序时的用户名或UID&lt;/li>
&lt;li>默认情况下,container的运行身份为root用户&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">USER&lt;/span>&lt;span class="s"> &amp;lt;UID&amp;gt;|&amp;lt;UserName&amp;gt;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 需要注意的是,&amp;lt;UID&amp;gt;可以为任意数字,但实践中必须要为/etc/passwd中某用户的有效UID,否则,docker run命令将运行失败&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>HEALTHCHECK
&lt;ul>
&lt;li>HEALTHCHECK指令是通过给定内容给docker,令其检查容器是否还在正常运行,检查主进程工作状态健康与否&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="err">HEALTHCHECK&lt;/span> &lt;span class="o">[&lt;/span>OPTION&lt;span class="o">]&lt;/span> CMD &lt;span class="nb">command&lt;/span> &lt;span class="c1"># --&amp;gt; 通过在容器中运行command来检测容器是否运行正常&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> - 可在CMD前指定的option&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> --interval&lt;span class="o">=&lt;/span>DURATION&lt;span class="o">(&lt;/span>default: 30s&lt;span class="o">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> --timeout&lt;span class="o">=&lt;/span>DURATION&lt;span class="o">(&lt;/span>default: 30s&lt;span class="o">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> --start-period&lt;span class="o">=&lt;/span>DURATION&lt;span class="o">(&lt;/span>default: 0s&lt;span class="o">)&lt;/span> --&amp;gt;等待多长时间&lt;span class="o">(&lt;/span>docker run容器起来后,可能还需要初始化动作,这个时候不应该算到检测内容中&lt;span class="o">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> --retries&lt;span class="o">=&lt;/span>N&lt;span class="o">(&lt;/span>default: 3&lt;span class="o">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> - command执行的返回值反映了容器的健康状态,可能的value包括如下:&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> 0:success --&amp;gt; 容器健康且能提供服务&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> 1:unhealthy --&amp;gt; 容器未能正常运行&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> 2:reserved --&amp;gt; 不使用该返回值&lt;span class="o">(&lt;/span>预留的,没什么意义&lt;span class="o">)&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> &lt;span class="c1"># 示例内容:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> HEALTHCHECK --interval&lt;span class="o">=&lt;/span>5m --timeout&lt;span class="o">=&lt;/span>3s CMD curl -f http://localhost/ &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">HEALTHCHECK&lt;/span> NON禁用任何从容器尽享中继承的healthcheck&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>STOPSIGNAL
&lt;ul>
&lt;li>STOPSIGNAL指令用于指定发送给容器,用于停掉的容器的system call signal&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">STOPSIGNAL&lt;/span>&lt;span class="s"> singal&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ARG
&lt;ul>
&lt;li>定义变量,但只能在docker build过程中使用
&lt;ul>
&lt;li>ARG后定义的变量可以在docker build过程中被替换,这种场景适用于一个Dockerfile可以接收不同参数,构建不同镜像的&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ARG&lt;/span> &amp;lt;key&amp;gt;&lt;span class="o">=&lt;/span>&amp;lt;value&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># 使用了之后,可以在构建镜像时使用--build-arg &amp;lt;key&amp;gt;=&amp;lt;value2&amp;gt;替换&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>ONBUILD
&lt;ul>
&lt;li>在Dockerfile中定义一个触发器&lt;/li>
&lt;li>Dockerfile用于build映像文件,此映像文件亦可作为base image被另一个Dockerfile用作FROM指令的参数,并以之构建新的镜像文件&lt;/li>
&lt;li>在后面的这个Dockerfile中的FROM指令在build过程中被执行时,将会触发创建其base image的Dockerfile文件中的ONBUILD指令定义的触发器&lt;/li>
&lt;li>语法:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">ONBUILD&lt;/span> &amp;lt;INSTRUCTION&amp;gt;&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>尽管任何指令够可注册成为触发器指令,但ONBUILD不能自我嵌套,且不会触发FROM和ENTRYPOINT指令&lt;/li>
&lt;li>使用ONBUILD指令的Dockerfile构建的镜像应该使用特殊的标签,例如ruby:2.0-onbuild&lt;/li>
&lt;li>在ONBUILD指令中使用ADD或者COPY指令应该格外小心,因为新构建过程的上下文缺少指定的源文件时会报错&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4,nginx Dockerfile示例&lt;/p>
&lt;ul>
&lt;li>内容如下:
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> nginx:1.14:alpine&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>LABLE &lt;span class="nv">maintainer&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;MageEdu &amp;lt;mage@magedu.com&amp;gt;&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> &lt;span class="nv">NGX_DOC_ROOT&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;/data/web/html/&amp;#39;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ADD&lt;/span> entrypoint.sh /bin/&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="err">&amp;#39;/usr/sbin/nginx&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;-g&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="err">&amp;#39;daemon&lt;/span> &lt;span class="err">off;&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="err">&amp;#39;/bin/entrypoint.sh&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">##################################&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>cat entrypint.sh&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">#!/bin/bash&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">#&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>cat &amp;gt; /etc/nginx/conf.d/www.conf &amp;lt;&amp;lt;EOF&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>server &lt;span class="o">{&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> server_name &lt;span class="nv">$HOSTNAME&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> listen &lt;span class="si">${&lt;/span>&lt;span class="nv">IP&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">0&lt;/span>&lt;span class="p">.0.0.0&lt;/span>&lt;span class="si">}&lt;/span>:&lt;span class="si">${&lt;/span>&lt;span class="nv">PORT&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="nv">80&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span> root &lt;span class="si">${&lt;/span>&lt;span class="nv">NGX_DOC_ROOT&lt;/span>&lt;span class="k">:-&lt;/span>&lt;span class="p">/usr/share/nginx/html&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="o">}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="nb">exec&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$@&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>EOF&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>5,在写Dockerfile时,注意json传入时必须要写双引号,单引号会报错&lt;/p>
&lt;h2 id="-docker私有registry">#. Docker私有registry&lt;/h2>
&lt;p>1,registry用于保存docker镜像,包括镜像的层次结构和元数据&lt;/p>
&lt;p>2,启动registry有几种方式&lt;/p>
&lt;ul>
&lt;li>docker run -d xxxx registry&lt;/li>
&lt;li>yum install docker-registry(在epel源中,实际名称为docker-distribution)
&lt;ul>
&lt;li>实际上时一个python开发的web自运行程序&lt;/li>
&lt;li>数据保存目录在/var/lib/docker下,配置文件在/etc下,可以通过更改/etc下配置文件修改镜像保存位置和监听端口&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>3,建议使用harbor来管理镜像,搭建harbor需要使用到docker-compose&lt;/p>
&lt;ul>
&lt;li>harbor有两种安装方式,离线和在线
&lt;ul>
&lt;li>离线版安装需要下载tgz文件,文件较大,需要下载一段时间&lt;/li>
&lt;li>在线版是在更改完配置文件后,执行安装脚本,安装过程中下载相应镜像&lt;/li>
&lt;li>不管离线还是在线安装,需要先完成harbor.cfg文件的配置,而后才能进行部署&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>harbor是一个多容器服务,需要使用到各种容器镜像,编排内容在docker-compose.yml中定义
&lt;ul>
&lt;li>一般执行docker-compose命令,会在docker-compose.yml文件所在目录执行&lt;/li>
&lt;li>根据docker-compose.yml文件启动相应服务 --&amp;gt; docker-compose start&lt;/li>
&lt;li>根据docker-compose.yml文件关闭相应服务 --&amp;gt; docker-compose stop&lt;/li>
&lt;li>查看docker-compose的帮助命令 --&amp;gt; docker-compose help&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>4,harbor的一些特性:&lt;/p>
&lt;ul>
&lt;li>多租户登录和验证&lt;/li>
&lt;li>安全和风险验证&lt;/li>
&lt;li>日志监控&lt;/li>
&lt;li>RBA(role-base control)&lt;/li>
&lt;li>实例间镜像拷贝&lt;/li>
&lt;li>扩展API和web UI界面&lt;/li>
&lt;/ul>
&lt;h2 id="-docker的资源限制">#. Docker的资源限制&lt;/h2>
&lt;p>1,默认情况下,容器是没有资源限制的,可以使用完宿主机上内核分配给该容器的所有资源&lt;/p>
&lt;p>2,docker提供了一个途径,可以用来控制容器可以使用多少CPU,memory,块设备IO(限制有限);可以通过设置运行时(runtime)配置&lt;/p>
&lt;ul>
&lt;li>内存是不可压缩资源,当容器需要使用的内存分配不到时,可能触发容器内的oom&lt;/li>
&lt;li>CPU的分配可以通过少分配来实现&lt;/li>
&lt;/ul>
&lt;p>3,这些资源限制功能的实现依赖于内核是否支持来实现&lt;/p>
&lt;p>4,在linux主机上,如果内核探测到但前内存无法满足重要系统功能实现时,会抛出OOME(out of memory exception),并开始杀掉进程来释放空间&lt;/p>
&lt;ul>
&lt;li>一旦发生oome,任何进程都有可能被杀死,包括docker daemon&lt;/li>
&lt;li>为此docker特地调整了docker daemon的OOM优先级,以免被内核杀掉,但容器内的优先级并未被调整&lt;/li>
&lt;li>每个进程有一个oom_adj,用来计算oom权重(优先级)&lt;/li>
&lt;/ul>
&lt;p>5,限制一个容器可以使用的内存&lt;/p>
&lt;ul>
&lt;li>-m或者--memory:最少为4M&lt;/li>
&lt;li>--memory-swap:不使用--memory时,不能使用该项
&lt;pre tabindex="0">&lt;code> ------------------------------------------------------------------------------------------------
| --memory-swp | --memory | 功能
------------------------------------------------------------------------------------------------
| 正数S | 正数M | 容器可用总内存为S,其中ram为M,swap为(S-M),若S=M,则无可用swap资源
------------------------------------------------------------------------------------------------
| 0 | 正数M | 相当于未设置swap(unset)
------------------------------------------------------------------------------------------------
| unset | 正数M | 若主机(Docker Host)启用了swap,则容器的可用swap为2M
------------------------------------------------------------------------------------------------
| -1 | 正数M | 若主机(Docker Host)启用了swap,则容器的可用swap可使用到主机上所有swap
------------------------------------------------------------------------------------------------
# 注意:在容器内部使用free命令可以看到的swap空间并不具有其所展现出的空间指示意义
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>--memory-swappiness&lt;/li>
&lt;li>--memory-reservation&lt;/li>
&lt;li>--kernel-memory&lt;/li>
&lt;li>--oom-kill-disable&lt;/li>
&lt;/ul>
&lt;p>6,限制一个容器可以使用的CPU&lt;/p>
&lt;ul>
&lt;li>默认情况下,每个容器可以使用的CPU时间片是不受限制的&lt;/li>
&lt;li>可以通过多种方式来限制容器可以使用的CPU资源&lt;/li>
&lt;li>大多数用户通过CFS(completely fair scheduler)来调度&lt;/li>
&lt;li>在1.13之后版本的docker上,还可以使用realtime调度器&lt;/li>
&lt;li>--cpus=&lt;value> 限定一个容器最多能够使用几核&lt;/li>
&lt;li>--cpu-period=&lt;value>&lt;/li>
&lt;li>--cpu-quota=&lt;value>&lt;/li>
&lt;li>--cpuset-cpus 限制在哪些核上&lt;/li>
&lt;li>-- cpu-shares 配置为共享方式(各个容器共享宿主机CPU)&lt;/li>
&lt;/ul>
&lt;p>7,下载压测镜像,可以在dockerhub上搜索stress&lt;/p></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/cloud/" term="cloud" label="cloud"/><category scheme="https://ruisum.top/tags/%E4%BA%91%E5%8E%9F%E7%94%9F/" term="云原生" label="云原生"/><category scheme="https://ruisum.top/tags/docker/" term="docker" label="docker"/><category scheme="https://ruisum.top/tags/cloud/" term="cloud" label="cloud"/></entry><entry><title type="text">ansible及ansible-playbook的使用</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/ops/ansible%E5%AD%A6%E4%B9%A0/"/><id>https://ruisum.top/tech/ops/ansible%E5%AD%A6%E4%B9%A0/</id><updated>2022-03-31T23:38:04+08:00</updated><published>2021-07-05T12:07:21+00:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">讲解ansible及ansible-playbook的使用</summary><content type="html">&lt;h1 id="learning-ansible">learning ansible&lt;/h1>
&lt;p>&lt;em>本文内容参考自&lt;a href="https://www.zsythink.net/archives/2481">朱双印ansible笔记&lt;/a>&lt;/em>&lt;/p>
&lt;h2 id="配置主机清单">配置主机清单&lt;/h2>
&lt;p>主机清单配置有两种方式&lt;/p>
&lt;h3 id="-ini方式"># ini方式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-ini" data-lang="ini">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 1,如下示例:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[ctl]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">10.168.0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">10.168.0.3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">10.168.0.4&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[nova:children]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">ctl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">[nova-compute:children]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="na">nova&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="--yaml方式"># yaml方式&lt;/h3>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 1,如下示例:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">all&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">children&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">k8s&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">master&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_pass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;123.com&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_pass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;123.com&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.33&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_pass&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;123.com&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常用模块">常用模块&lt;/h2>
&lt;h3 id="--文件类操作"># 文件类操作&lt;/h3>
&lt;p>1,copy: 将ansible主机上的文件拷贝至远端主机&lt;/p>
&lt;ul>
&lt;li>同fetch类似,不过操作动作相反,fetch是从远端主机拿文件到ansible主机&lt;/li>
&lt;li>可使用content直接代替src&lt;/li>
&lt;li>可备份远端重名文件&lt;/li>
&lt;li>可设定拷贝文件的权限&lt;/li>
&lt;/ul>
&lt;p>2,file: 完成一些对文件的基本操作,包括创建,删除,修改文件和目录的权限等&lt;/p>
&lt;ul>
&lt;li>path是必须项,需要和state结合使用&lt;/li>
&lt;li>state参数是核心,对不同类型的文件对应的动作不相同,path如果是文件(touch),是目录(directory); absent时不用管path是什么(目录或者文件)&lt;/li>
&lt;/ul>
&lt;p>3,blockinfile: 在文件中插入一段文本,这段文本是被标记过的,方便我们后面对标记内容的操作(删除,修改等)&lt;/p>
&lt;ul>
&lt;li>对文件中块的操作,文件位置定位使用insertbefore,insertafter&lt;/li>
&lt;li>使用block/content制定块内容&lt;/li>
&lt;li>使用该模块marker会在插入内容前后增加marker内容&lt;/li>
&lt;li>可使用regex,匹配文件中内容进行操作&lt;/li>
&lt;li>包含backup相关内容&lt;/li>
&lt;/ul>
&lt;p>4,lineinfile: 确保某一行文本存在于文件中,或不存在与文本中,可使用regex进行替换&lt;/p>
&lt;ul>
&lt;li>line指定行内容&lt;/li>
&lt;li>包含regex参数,使用regex来匹配相应的行,当替换文本时，如果有多行文本都能被匹配，则只有最后面被匹配到的那行文本才会被替换，当删除文本时，如果有多行文本都能被匹配，这么这些行都会被删除&lt;/li>
&lt;li>backrefs参数：默认情况下，当根据正则替换文本时，即使regexp参数中的正则存在分组，在line参数中也不能对正则中的分组进行引用，除非将backrefs参数的值设置为yes&lt;/li>
&lt;li>插入内容为insertbefore,insertafter, 包含backup相关内容&lt;/li>
&lt;/ul>
&lt;p>5,find: 类似find命令,可在远端机器中找到相应文件&lt;/p>
&lt;ul>
&lt;li>使用方式ansible-doc -s find查看&lt;/li>
&lt;/ul>
&lt;p>6,replace: replace模块可以根据我们指定的正则表达式替换文件中的字符串，文件中所有被正则匹配到的字符串都会被替换&lt;/p>
&lt;ul>
&lt;li>使用方式ansible-doc -s replace查看&lt;/li>
&lt;/ul>
&lt;h3 id="--命令类操作"># 命令类操作&lt;/h3>
&lt;p>1,command: 在远端主机上执行命令&lt;/p>
&lt;ul>
&lt;li>使用command模块在远程主机中执行命令时，不会经过远程主机的shell处理，在使用command模块时，如果需要执行的命令中含有重定向、管道符等操作时，这些符号也会失效，比如”&amp;lt;“, “&amp;gt;”, “|”, “;” 和 “&amp;amp;” 这些符号，如果你需要这些功能，需要使用shell模块&lt;/li>
&lt;li>具体使用方式,参考ansible-doc -s command&lt;/li>
&lt;/ul>
&lt;p>2,shell: 在远端主机上执行命令,与command不同的是,shell模块在远端执行命令时,会经过远端主机的/bin/sh程序处理&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s shell&lt;/li>
&lt;/ul>
&lt;p>3,scripts: 在远端主机上执行ansible主机上的脚本,脚本在ansible主机上,不需要拷贝到远端主机&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s scripts&lt;/li>
&lt;/ul>
&lt;h3 id="--系统类操作"># 系统类操作&lt;/h3>
&lt;p>1,cron: 管理远端主机上的定时任务,功能同crontab&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s cron&lt;/li>
&lt;/ul>
&lt;p>2,service: 管理远端主机上的服务&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s service&lt;/li>
&lt;/ul>
&lt;p>3,user: 管理远端主机上的用户,类似命令usermod&lt;/p>
&lt;ul>
&lt;li>还可以管理用户的ssh密钥&lt;/li>
&lt;li>具体使用方式,参考ansible-doc -s user&lt;/li>
&lt;/ul>
&lt;p>4,groupo: 管理远端主机上的组,类似命令groupmod&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s group&lt;/li>
&lt;/ul>
&lt;h3 id="--包管理类操作"># 包管理类操作&lt;/h3>
&lt;p>1,yum_repository: 管理远端主机上的yum仓库&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s yum_repository&lt;/li>
&lt;/ul>
&lt;p>1,yum: 通过远端主机上的yum管理软件包&lt;/p>
&lt;ul>
&lt;li>具体使用方式,参考ansible-doc -s yum&lt;/li>
&lt;/ul>
&lt;h2 id="认识ansible-playbook">#认识ansible-playbook&lt;/h2>
&lt;p>1,ansible-playbook的使用,可以理解为ansible -m &amp;lt;module_name&amp;gt; -a 'xxxx'的转换,将命令行使用模块操作的内容写成脚本内容,按照脚本内容完成相关操作&lt;/p>
&lt;p>2,上述脚本在ansible-playbook中称作为'playbook',即剧本&lt;/p>
&lt;ul>
&lt;li>每个playbook(剧本)又多个play(桥段)组成,每个剧本是由多个桥段组成的,每个桥段包含有人物,场景,故事&lt;/li>
&lt;li>每个play在执行时,都会执行一个默认任务('Gathering Facts),任务会收集当前当前play对应的目标主机的相关信息(IP,hostname,硬件版本,系统版本等),收集完成后才会完成我们定义的相关任务&lt;/li>
&lt;/ul>
&lt;p>3,ansible有个重要特性:幂等性&lt;/p>
&lt;ul>
&lt;li>在ansible调用模块或者ansible-playbook执行相应play时,输出内容会有颜色区分,黄色表示有修改,绿色表示么有修改;区别是远端的内容是否满足我们的预期&lt;/li>
&lt;li>ansible是”以结果为导向的”，我们指定了一个”目标状态”，ansible会自动判断，”当前状态”是否与”目标状态”一致，如果一致，则不进行任何操作，如果不一致，那么就将”当前状态”变成”目标状态”，这就是”幂等性”，”幂等性”可以保证我们重复的执行同一项操作时，得到的结果是一样的&lt;/li>
&lt;/ul>
&lt;h2 id="使用handlers">#使用handlers&lt;/h2>
&lt;p>1,handlers的使用场景:&lt;/p>
&lt;ul>
&lt;li>有个任务需要修改nginx的配置文件,将listen端口由8080改为8088,使用handler可以在nginx配置文件有修改的环境上重启nginx,没有修改的不会出发重启nginx&lt;/li>
&lt;li>handlers可以理解为另一种tasks,handlers是另一种'任务列表',handlers中的任务会被tasks中的任务调用;&lt;/li>
&lt;li>handlers被调用并不一定会执行,只有当tasks中的任务真正被执行后(真正的进行了实际操作,造成了实际变化),handlers中的任务才会真正执行&lt;/li>
&lt;li>如果tasks中的任务并没有作出任何实际的操作,那么handlers中的任务即使被调用,也不会执行&lt;/li>
&lt;li>handlers和tasks是平级的,所以缩进相同&lt;/li>
&lt;/ul>
&lt;p>2,handlers的调用:&lt;/p>
&lt;ul>
&lt;li>handlers需要被关键字notify调用
如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">change nginx configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lineinfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/etc/nginx/conf.d/test.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">regexp=&amp;#34;listen(.*) 8080(.*)&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">line=&amp;#34;listen\1 8088\2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">backrefs=yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">backup=yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">restart nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handlers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">restart nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">name=nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=restarted &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,handlers中可以有多个任务,被tasks中不同的任务调用&lt;/p>
&lt;ul>
&lt;li>handler执行的顺序与handler在playbook中定义的顺序相同,与handler被notify的顺序无关(下述内容ht1先触发,ht2后触发),如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">make testfile1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ht2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">make testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ht1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handlers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ht1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/ht1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ht2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/ht2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>默认情况下,所有tasks执行完成后,才会执行各个handlers&lt;/li>
&lt;li>当存在多个同名的handler时,只会执行一个handler&lt;/li>
&lt;/ul>
&lt;p>4,若要在执行完某个task后立即执行其对应的handler,需要使用meta模块&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">meta&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">flush handlers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handlers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/hd1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/hd2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/hd3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>meta可以理解为tasks下一个特殊任务,使用的是meta模块&lt;/li>
&lt;li>meta: flush_handlers指的是立即执行之前的task对应的handlers,上述例子中flush_handlers之前有两个task,在执行了这两个task之后立即执行他们对应的handler&lt;/li>
&lt;li>使用meta配合task和handler,可以让任务调用更加灵活&lt;/li>
&lt;/ul>
&lt;p>5,如果需要一次性notify多个handler,需要使用到listen&lt;/p>
&lt;ul>
&lt;li>可以把'listen'理解为'组名',可以把多个handler分成'组',当我们需要一次性notify多个handler时,只要将多个handler分成一组,使用相同的组名即可&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler group1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handlers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">listen&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;handler group1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;echo handler1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">handler2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">listen&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;handler group1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;echo handler2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用tags">#使用tags&lt;/h2>
&lt;p>1,写了一个很长的playbook,在调试时只想跑其中很少的一部分,tag在这种场景下可以使用,指定执行哪些任务,不执行哪些任务&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test 2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">tags:t2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test 3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">path=/testdir/testfile3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">t3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">$ ansible-playbook --tags=t2 test.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">$ ansible-playbook --skip-tags=t2 test.yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>--tags=t2,只执行tag为t2部分的task,--skip-tags=t2,跳过tag=t2的tag&lt;/li>
&lt;li>tag相关使用命令:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 指定多个tag时,使用命令为&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ansible-playbook -t tag1,tag2,tag3 test.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行play前,查看当前有哪些tag&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ansible-playbook --list-tags test.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>ansible预置了几个特殊tag:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># always: 如果任务的tags包含always,则该task一定会被执行,除非指定--skip-tags always(该情况也不合理,可能其他任务也包含always,这样其他task也不会执行)
# never: 永远不执行,与always刚好相反
## 下列只在调用标签时生效
# tagged: ansible-playbook --tags tagged test.yaml --&amp;gt; 只执行有标签的task,没有标签的task不会被执行
# untagged: ansible-playbook --tags untagged test.yaml --&amp;gt; 只执行没有tag的task,有tag的不会被执行
# all: 默认使用,所有都会被执行
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>可以为task指定多个tag,如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">testing&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testing, t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method three&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;testing&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;t1&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,play也可以指定tags,当一个play之指定了tags,这个play下的所有task都包含该tag,若该play下的task还有自己的tags,则该task的实际tags为'play tags' + 'task tags'&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test70&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">httpd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install httpd package&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;package&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">name=httpd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">state=latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">start up httpd service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">service&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">httpd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">started&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用变量一">#使用变量(一)&lt;/h2>
&lt;p>1,怎么定义变量&lt;/p>
&lt;ul>
&lt;li>变量由数字,字母,下划线组成,要以字母开头&lt;/li>
&lt;li>ansible的关键字不能作为变量名&lt;/li>
&lt;/ul>
&lt;p>2,变量的定义及引用&lt;/p>
&lt;ul>
&lt;li>变量定义可以使用vars,和tasks同级,如下(普通定义方式):&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 或者使用yaml写法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/{{testvar1}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>使用属性的方式定义&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">conf80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/etc/nginx/conf.d/80.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">conf8080&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/etc/nginx/conf.d/8080.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{nginx.conf80}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 或者path: &amp;#34;{{nginx[&amp;#39;conf80&amp;#39;]}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{nginx.conf8080}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 或者path: &amp;#34;{{nginx[&amp;#39;conf8080&amp;#39;]}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 使用=给模块参数赋值时,可以不考虑变量是否加引号&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># - name: task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># file:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># path={{nginx.conf8080}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># # 或者path={{nginx[&amp;#39;conf8080&amp;#39;]}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>注意: 上面列举的两个例子有些差别,第一个例子中变量没有加引号,第二个有加引号,因为第一个变量不是'开头'位置,第二个是'开头'位置
但实际上也有例外,给模块参数赋值时,可以选择':',也可以选择'=',当使用'='时,可以不用考虑引号的问题&lt;/p>
&lt;/blockquote>
&lt;p>3,在文件中定义变量给playbook使用&lt;/p>
&lt;ul>
&lt;li>将变量在单独的文件中定义的好处是,可以做到变量文件分离,不给看到变量的值&lt;/li>
&lt;li>在文件中定义变量时,不用使用vars关键字,直接定义变量即可,如下集中语法:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testfile2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method three&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">conf80&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/etc/nginx/conf.d/80.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">conf8080&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/etc/nginx/conf.d/8080.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在文件中定义完变量,在playbook中使用变量,需要使用vars_files,被导入的文件以'-'开头(可以引入多个变量文件),以yaml中块序列的方式导入&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/ansible/nginx_vars.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{nginx.conf80}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{nginx[&amp;#39;conf8080&amp;#39;]}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用变量二">#使用变量(二)&lt;/h2>
&lt;p>1,在playbook执行前,有一个Gathering Facts的动作,调用的是setup模块; 这些信息会保存在对应的变量中，我们在playbook中可以使用这些变量,我们可以称这些信息为facts信息&lt;/p>
&lt;ul>
&lt;li>setupa模块的返回值是json格式的,方便返回时内容展示&lt;/li>
&lt;li>setup模块可以获取远端主机很详尽的信息,若需要过滤相关信息,可以使用setup的filter参数(支持通配符)&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 显示内存相关信息&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ansible all -m setup -a &lt;span class="s1">&amp;#39;filter=ansible_memory_mb&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 不确定信息相关信息,使用通配符来获取&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ansible all -m setup -a &lt;span class="s1">&amp;#39;filter=*mb*&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>setup模块获取的信息都保存在相应的变量中,我们可以通过引用变量获取到这些值&lt;/li>
&lt;/ul>
&lt;p>2,setup模块支持获取自定义内容&lt;/p>
&lt;ul>
&lt;li>要求:自定义内容存在于目标主机的/etc/ansible/facts.d/下以.fact结尾的文件; 这些文件需要以json或者ini格式保存变量信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ cat /etc/ansible/facts.d/test.fact
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>testmsg&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">msg1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;test message 1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">msg2&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;test message 2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>这些自定义的变量称为'local facts',可以在setup获取时通过filter=ansible_local获取&lt;/li>
&lt;/ul>
&lt;p>3,另一个模块debug,可用于playbook的调试使用,把调试信息打印到控制台上,方便我们查看和定位问题&lt;/p>
&lt;ul>
&lt;li>debug模块常用的两个参数分别是var和msg,var用于测试变量,msg用于打印输出是否符合预期&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># 连接到主机,但是并没有做任何事情,debug引用的是testvar,测试testvar是否能用
---yaml
- hosts: all
remote_user: root
vars:
testvar: value of testvar
tasks:
- name: test debug
debug:
var: testvar
&lt;/code>&lt;/pre>&lt;h2 id="使用变量三">#使用变量(三)&lt;/h2>
&lt;p>1,变量注册&lt;/p>
&lt;ul>
&lt;li>ansible模块在执行之后都会有一些返回值,默认情况下,这些返回值不会显示而已;我们可以把这些返回值写入到某个变量中,我们可以通过引用相应的变量获取到这些返回值,将模块的返回值写入到变量中,这种方式称为'注册变量'; 如下为变量注册的的一个范例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test register&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo test &amp;gt; /tmp/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shell module return values&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 执行完成后,在控制台中看到名为”[shell module return values]”的任务中已经显示了第一个任务的返回值的信息，返回信息:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [shell module return values] ************************************&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">master] =&amp;gt; { &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;testvar&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;cmd&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;echo test &amp;gt; /tmp/testfile&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;delta&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;0:00:00.010963&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;end&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2021-03-30 09:26:47.432571&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;failed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;rc&amp;#34;: &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;start&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2021-03-30 09:26:47.421608&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;stderr&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;stderr_lines&amp;#34;: &lt;/span>&lt;span class="p">[],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;stdout&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;stdout_lines&amp;#34;: &lt;/span>&lt;span class="p">[]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># register的变量testvar其实是一个json格式的返回值,可以通过引用testvar的不同属性获取相应的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,变量的传入方式,ansible支持多种变量传入的方式,包括:交互式传入,命令行传入,文件传入&lt;/p>
&lt;ul>
&lt;li>交互式传入,需要使用到var_prompt关键字,属于vars的一种,当出现该关键字时,会让你在命令行下输入
&lt;ul>
&lt;li>普通使用,以下输入内容不会在控制台显示(默认情况下private: yes)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">all&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;your_name&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;What is your name?&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># private: no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;your_age&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;What is your age?&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># private: no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">output vars&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">your name is {{your_name}}, your age is {{your_age}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>- 普通使用,可以做到提供选项供选择
- 特殊使用,例如增加用户,设定密码
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 需要使用到vars_prompt下encrypt,指定加密方式,而且该方式需要passlib库,么有的话需要安装&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test70&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;hash_string&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">prompt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Enter something&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">private&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">encrypt&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;sha512_crypt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Output the string after hash&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{hash_string}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>命令行传入,直接在ansible-playbook执行时增加-e 'key=value'即可,可有多个,变量赋值有多种方式,还可以是json格式&lt;/li>
&lt;li>文件传入,类似命令行-e &amp;quot;@变量文件绝对路径&amp;quot;&lt;/li>
&lt;/ul>
&lt;h2 id="使用变量四registerset_fact">#使用变量(四),register,set_fact&lt;/h2>
&lt;p>1,配置主机清单时,可以配置主机或主机组变量,但只对配置的主机或主机组生效&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">## 主机配置,配置/etc/ansible/hosts如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">node2 ansible_host=192.168.110.22 testhostvar=node2_host_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">all&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testhostvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2_host_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testhostvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2_host_var2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testhostvar3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">thv31&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">thv32&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3.2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">$ ansible node2 -m shell -a &amp;#39;echo {{testhostvar}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">$ ansible node2 -m shell -a &amp;#39;echo {{testhostvar3.thv31}}&amp;#39; or &amp;#39;{{testhostvar3[&amp;#39;thv32&amp;#39;]}}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## 主机组配置,配置/etc/ansible/hosts如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">testB]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">node2 ansible_host=192.168.110.22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">node3 anisble_host=192.168.110.33&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">testB:vars]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">test_group_var1=&amp;#39;group var test&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">test_group_var2=&amp;#39;group var test2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">all&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">children&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testB&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">node3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_host&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.110.33&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ansible_port&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test_group_var1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;group var test1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test_group_var2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;group var test2&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">$ ansible testB -m shell -a &amp;#39;echo {{test_group_var1}}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,通过set_fact定义变量,set_fact是一个模块,可以通过set_fact模块在task中定义变量&lt;/p>
&lt;ul>
&lt;li>普通使用,直接与task同级定义一个变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;testtest&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>普通使用,将一个变量的值赋给另一个变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test1_string&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo test2_string&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shellreturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testsf1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testsf2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{shellreturn.stdout}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testsf1}} {{testsf2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>通过set_fact模块创建的变量还有一个特殊性，通过set_fact创建的变量就像主机上的facts信息一样，可以在之后的play中被引用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tv1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tv2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar1}} ----- {{testvar2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">other play get testvar2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">other play get testvar1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这两个变量在第一个play中都可以正常的输出.但是在第二个play中，testvar2可以被正常输出了，testvar1却不能被正常输出，会出现未定义testvar1的错误&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>如果想要在tasks中给变量自定义信息，并且在之后的play操作同一个主机时能够使用到之前在tasks中定义的变量时，则可以使用set_facts定义对应的变量&lt;/li>
&lt;/ul>
&lt;h2 id="使用变量五内置变量host_vars">#使用变量(五),内置变量,host_vars&lt;/h2>
&lt;p>1,ansible有一些内置变量可供使用,这些变量被ansible保留,我们定义变量时不能使用&lt;/p>
&lt;ul>
&lt;li>ansible_version&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ansible node2 -m debug -a &lt;span class="s1">&amp;#39;msg={{ansible_version}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,hostvars可以在我们操作当前主机时获取到其他主机中的信息&lt;/p>
&lt;ul>
&lt;li>如下示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第一个什么也没做,只是获取node3的facts内容,这一步是需要的,只有收集过的facts才能被后面的play使用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果没有收到对应主机的facts信息,即使使用hostvars内置变量,也无法获取到对应主机的facts内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;play 1: gather facts of node3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 下面的gather_facts默认是yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># gater_facts: yes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;play 2: gathter facts of node3 when operating on node2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{hostvars[&amp;#39;node3&amp;#39;].ansible_enp0s3.ipv4}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 下面两种也可以&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{hostvars.node3.ansible_enp0s3.ipv4}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{hostvars[&amp;#39;node3&amp;#39;][&amp;#39;ansible_enp0s3&amp;#39;][&amp;#39;ipv4&amp;#39;]}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>hostvars除了获取到其他主机的facts内容,还可以获取到其他类型的一些变量信息,如其他主机的注册变量,主机变量,组变量等;如下示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 1,通过hostvars内置变量可以直接获取到其他主机中的注册变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 2,注册变量并不用像facts信息那样需要事先收集，即可直接通过hostvars跨主机被引用到&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 3,如果你在清单中为node3主机配置了主机变量，或者为node3主机所在的组配置了组变量，也是可以通过hostvars直接跨主机引用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo register_var_in_play1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">shellreturn&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{hostvars.node3.shellreturn.stdout}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>通过vars关键字定义的变量使用上例中的hostvars方法是无法被跨主机引用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 下列内容会报错,变量需要注册才行,直接使用vars定义的变量无法传递&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar_in_3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{hostvars.node3.testvar}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 通过set_fact将vars定义的内容注册,则可以&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar_in_3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{hostvars.node3.testvar}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>通过”set_fact”结合”hostvars”的方式，可以实现跨play获取其他主机中的变量信息&lt;/li>
&lt;/ul>
&lt;p>3,内置变量inventory_hostname,获取到被操作的当前主机的主机名称&lt;/p>
&lt;ul>
&lt;li>主机名称并不是linux系统的主机名，而是对应主机在清单中配置的名称,清单中配置的名称即是&lt;/li>
&lt;/ul>
&lt;p>4,内置变量inventory_hostname_short,获取到被操作的当前主机的主机名称,简版&lt;/p>
&lt;ul>
&lt;li>无论是IP还是别名，如果清单的主机名称中包含”.”，inventory_hostname_short都会取得主机名中第一个”.”之前的字符作为主机的简短名称&lt;/li>
&lt;/ul>
&lt;p>5,内置变量play_hosts,获取到当前play所操作的所有主机的主机名列表&lt;/p>
&lt;ul>
&lt;li>如下示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2,node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{play_hosts}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node3] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node2&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;node3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>6,内置变量groups,可以获取到清单中”所有分组”的”分组信息”&lt;/p>
&lt;ul>
&lt;li>同inventory_hostname,但能获取到分组的信息&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ansible all -m debug -a &lt;span class="s1">&amp;#39;msg={{groups}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ansible all -m debug -a &lt;span class="s1">&amp;#39;msg={{groups.k8s}}&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>7,内置变量group_names,获取到当前主机所在分组的组名&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible node2 -m debug -a &amp;#34;msg={{group_names}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node2 &lt;span class="p">|&lt;/span> &lt;span class="nv">SUCCESS&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;changed&amp;#34;&lt;/span>: false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;msg&amp;#34;&lt;/span>: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;k8s&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>8,内置变量inventory_dir,获取到ansible主机中清单文件的存放路径,默认是/etc/ansible,但也可以自定义&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible node2 -m debug -a &amp;#34;msg={{inventory_dir}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">node2 &lt;span class="p">|&lt;/span> &lt;span class="nv">SUCCESS&lt;/span> &lt;span class="o">=&lt;/span>&amp;gt; &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;changed&amp;#34;&lt;/span>: false,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;msg&amp;#34;&lt;/span>: &lt;span class="s2">&amp;#34;/etc/ansible&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>9,除了直接在hosts文件中定义主机变量和组变量，还有另外一种方法也可以定义主机变量和组变量，我们可以在清单文件的同级目录中创建两个目录，这两个目录的名字分别为”group_vars”和”host_vars”，我们可以将组变量文件放在”group_vars”目录中，将主机变量文件放在”host_vars”目录中，这样ansible就能获取到对应组变量和主机变量&lt;/p>
&lt;h2 id="使用循环一with_items的使用">#使用循环(一),with_items的使用&lt;/h2>
&lt;p>1,使用with_items处理循环的内容&lt;/p>
&lt;ul>
&lt;li>普通示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># &amp;#34;with_items&amp;#34;关键字会把返回的列表信息自动处理，将每一条信息单独放在一个名为&amp;#34;item&amp;#34;的变量中，只要获取到名为&amp;#34;item&amp;#34;变量的变量值，即可循环的获取到列表中的每一条信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 下列debug被循环3次,每次单独输出相应循环的debug输出内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test with_items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{groups.k8s}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,with_items可以自定义&lt;/p>
&lt;ul>
&lt;li>列表&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>相对复杂的列表&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.test1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">test1: a, test2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">b}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- {&lt;span class="w"> &lt;/span>&lt;span class="nt">test1: c, test2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">d}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,result的使用&lt;/p>
&lt;ul>
&lt;li>当使用了循环以后，每次shell模块执行的返回值放入名为”results”的序列中，”results”也是一个返回值，当模块中使用循环时，模块每次执行的返回值都会追加存放到”results”这个返回值中,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 两次debug循环,输出的内容都保存在results序列中,属于results&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ls /opt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ls /home&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnvalue&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnvalue&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 可以使用如下方式,避免所有结果在最后的results中去获取&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ls /opt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;ls /home&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnvalue&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.stdout}}&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2"> with_items: &amp;#34;&lt;/span>{{&lt;span class="l">returnvalue.results}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 先使用循环重复的调用了shell模块，然后将shell模块每次执行后的返回值注册到了变量”returnvalue”中，之后，在使用debug模块时，通过返回值”results”获取到了之前每次执行shell模块的返回值（shell每次执行后的返回值已经被放入到item变量中），最后又通过返回值”stdout”获取到了每次shell模块执行后的标准输出&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用循环二对列表循环的操作">#使用循环(二),对列表循环的操作&lt;/h2>
&lt;p>1,对序列循环有几个关键字&lt;/p>
&lt;ul>
&lt;li>with_items: 当循环的序列元素也是列表时,展开与预期的有差异,会将所有的列表展开&lt;/li>
&lt;li>with_list: 其他动作与with_items相同,只有在嵌套列表循环时有差异,子列表将会作为元素使用&lt;/li>
&lt;li>with_flattened: 与with_items相同&lt;/li>
&lt;li>with_together: 列对齐,”对齐合并”功能&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_together&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a, b, c ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=[1, u&amp;#39;a&amp;#39;]) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;a&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=[2, u&amp;#39;b&amp;#39;]) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;b&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=[3, u&amp;#39;c&amp;#39;]) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;c&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用循环三嵌套循环">#使用循环(三),嵌套循环&lt;/h2>
&lt;p>1,with_cartesian和with_nested&lt;/p>
&lt;ul>
&lt;li>当我们需要两个列表嵌套循环时,可以使用with_cartesian或者with_nested,将每个小列表中的元素按照”笛卡尔的方式”组合后，循环的处理每个组合,如下示例&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 下面的例子会在node2下创建6个目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/testdir/{{ item.0 }}/{{ item.1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_cartesian&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a, b, c ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test1, test2 ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用循环四序列索引循环">#使用循环(四),序列索引循环&lt;/h2>
&lt;p>1,使用到with_indexed_items,在处理列表中的每一项时，按照顺序为每一项添加了编号,如下示例:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_indexed_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">test3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=(0, u&amp;#39;test1&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=(1, u&amp;#39;test2&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=(2, u&amp;#39;test3&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>”with_indexed_items”会将嵌套的两层列表”拉平”，”拉平”后按照顺序为每一项编号&lt;/li>
&lt;li>当多加了一层嵌套以后，”with_indexed_items”并不能像”with_flattened”一样将嵌套的列表”完全拉平”，第二层列表中的项如果仍然是一个列表，”with_indexed_items”则不会拉平这个列表，而是将其当做一个整体进行编号&lt;/li>
&lt;/ul>
&lt;h2 id="使用循环五with_sequencewith_random_choice">#使用循环(五),with_sequence,with_random_choice&lt;/h2>
&lt;p>1,with_sequence&lt;/p>
&lt;ul>
&lt;li>使用with_sequence生成序列,with_sequence可以按照顺序生成数字序列,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># debug模块被循环调用了5次，msg的值从1一直输出到了5，值的大小每次增加1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_sequence&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">start=1 end=5 stride=1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 下列写法结果一致&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># with_sequence: count=5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>使用with_sequence还可以格式化输出&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_sequence&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">start=2 end=6 stride=2 format=&amp;#34;number is %0.2f&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,with_random_choice,使用with_random_choice可以从列表的多个值中随机返回一个值&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_random_choice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用循环六with_dictwith_subelementswith_file">#使用循环(六),with_dict,with_subelements,with_file&lt;/h2>
&lt;p>1,with_dict,循环遍历字典元素,如下示例:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Alice Appleworth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">123-456-7890&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Bob Bananarama&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">987-654-3210&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_dict&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{users}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item={&amp;#39;value&amp;#39;: {u&amp;#39;gender&amp;#39;: u&amp;#39;male&amp;#39;, u&amp;#39;name&amp;#39;: u&amp;#39;Bob Bananarama&amp;#39;, u&amp;#39;telephone&amp;#39;: u&amp;#39;987-654-3210&amp;#39;}, &amp;#39;key&amp;#39;: u&amp;#39;bob&amp;#39;}) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;key&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;value&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;Bob Bananarama&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;telephone&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;987-654-3210&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;key&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;value&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;Bob Bananarama&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;telephone&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;987-654-3210&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item={&amp;#39;value&amp;#39;: {u&amp;#39;gender&amp;#39;: u&amp;#39;female&amp;#39;, u&amp;#39;name&amp;#39;: u&amp;#39;Alice Appleworth&amp;#39;, u&amp;#39;telephone&amp;#39;: u&amp;#39;123-456-7890&amp;#39;}, &amp;#39;key&amp;#39;: u&amp;#39;alice&amp;#39;}) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;key&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;alice&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;value&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;Alice Appleworth&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;telephone&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;key&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;alice&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;value&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;Alice Appleworth&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;telephone&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;123-456-7890&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,with_subelements:&lt;/p>
&lt;ul>
&lt;li>with_subelements会将hobby子元素列表中的每一项作为一个整体，将其他子元素作为一个整体，然后组合在一起&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 如下示例:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bob&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Skateboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">VideoGame&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_subelements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{users}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hobby&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=({u&amp;#39;gender&amp;#39;: u&amp;#39;male&amp;#39;, u&amp;#39;name&amp;#39;: u&amp;#39;bob&amp;#39;}, u&amp;#39;Skateboard&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Skateboard&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Skateboard&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=({u&amp;#39;gender&amp;#39;: u&amp;#39;male&amp;#39;, u&amp;#39;name&amp;#39;: u&amp;#39;bob&amp;#39;}, u&amp;#39;VideoGame&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;VideoGame&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;male&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;VideoGame&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=({u&amp;#39;gender&amp;#39;: u&amp;#39;female&amp;#39;, u&amp;#39;name&amp;#39;: u&amp;#39;alice&amp;#39;}, u&amp;#39;Music&amp;#39;)) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;alice&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Music&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;gender&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;alice&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Music&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>由于item由两个整体组成，所以，我们通过item.0获取到第一个小整体，即gender和name属性，然后通过item.1获取到第二个小整体，即hobby列表中的每一项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bob&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Skateboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">VideoGame&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.0.name }} &amp;#39;s hobby is {{ item.1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_subelements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{users}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hobby&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># msg内容如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob &amp;#39;s hobby is Skateboard&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bob &amp;#39;s hobby is VideoGame&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;alice &amp;#39;s hobby is Music&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用循环七-with_file-with_fileglob">#使用循环(七) with_file, with_fileglob&lt;/h2>
&lt;p>1, ansible主机中有几个文件,若需要获取到这些文件的内容，可以使用with_file关键字，循环的获取到这些文件的内容&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 无论目标主机是谁，都可以通过with_file关键字获取到ansible主机中的文件内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/testdir/a.log&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/opt/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,可以通过with_fileglob关键字，在指定的目录中匹配符合模式的文件名，with_file与with_fileglob相同的地方，它们都是针对ansible主机的文件进行操作，而不是目标主机&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_fileglob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/(此处为星号,删除防止下面格式错乱)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=/testdir/testfile) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;/testdir/testfile&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;/testdir/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; (item=/testdir/test.sh) =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;changed&amp;#34;: &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;item&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;/testdir/test.sh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;/testdir/test.sh&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 需要注意的是，with_fileglob只会匹配指定目录中的文件，而不会匹配指定目录中的目录&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="条件判断六with_dictwith_subelementswith_file">#条件判断(六),with_dict,with_subelements,with_file&lt;/h2>
&lt;p>1,绝大多数语言中，都使用if作为条件判断的关键字，而在ansible中，条件判断的关键字是when&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test when&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;System is centos&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 如果需要获取到facts中的key的值，都是通过引用变量的方式获取的，即&amp;#34;{{ key }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 在when关键字中引用变量时，变量名不需要加&amp;#34;{{ }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ansible_distribution == &amp;#34;CentOS&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,使用when关键字为任务指定条件，条件成立，则执行任务，条件不成立，则不执行任务&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">item &amp;gt; 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,在ansible中，使用如下比较运算符.&lt;/p>
&lt;ul>
&lt;li>如下所示:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>== :比较两个对象是否相等，相等为真
!= :比较两个对象是否不等，不等为真
&amp;gt; :比较两个值的大小，如果左边的值大于右边的值，则为真
&amp;lt; :比较两个值的大小，如果左边的值小于右边的值，则为真
&amp;gt;= :比较两个值的大小，如果左边的值大于右边的值或左右相等，则为真
&amp;lt;= :比较两个值的大小，如果左边的值小于右边的值或左右相等，则为真
上述总结的这些运算符其实都是jinja2的运算符，ansible使用jinja2模板引擎，在ansible中也可以直接使用jinja2的这些运算符
上述为比较运算符，再来说说逻辑运算符，可用的逻辑运算符如下:
and :逻辑与，当左边与右边同时为真，则返回真
or :逻辑或，当左边与右边有任意一个为真，则返回真
not :取反，对一个操作体取反
( ) :组合，将一组操作体包装在一起，形成一个较大的操作体
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 示例1:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;System release is centos7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 使用列表,列表中的每一项都是一个条件，列表中的所有条件同时成立时，对应的任务才会执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ansible_distribution == &amp;#34;CentOS&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ansible_distribution_major_version == &amp;#34;7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 示例2:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;System release is centos6 or centos7&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 比较运算符和逻辑运算符结合使用作为条件判断&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ansible_distribution == &amp;#34;CentOS&amp;#34; and&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">(ansible_distribution_major_version == &amp;#34;6&amp;#34; or ansible_distribution_major_version == &amp;#34;7&amp;#34;)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 示例3:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;System release is not centos&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 逻辑取反&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">not ansible_distribution == &amp;#34;CentOS&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 示例4:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ls /testabc&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Command execution successful&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 通过shell指令的返回值判断是否执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg.rc == 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Command execution failed&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg.rc != 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,结合ignore_errors和when来限定playbook的执行&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ls /testabc&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 此处增加了ignore_errors,在不存在/testabc目录的节点就不会报错,playbook不会退出,task2,task3通过rc值来确定是否要执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ignore_errors&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Command execution successful&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg.rc == 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">task3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Command execution failed&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">returnmsg.rc != 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="条件判断与tests">#条件判断与tests&lt;/h2>
&lt;p>1,在ansible中也有类似bash中test的用法,不过是借助jinja2的tests，借助tests，可以进行一些判断操作，tests会将判断后的布尔值返回，如果条件成立，返回true，否则返回false，通常在条件判断时使用到tests&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test tests&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test dir exist&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># &amp;#34;is exists&amp;#34;中的&amp;#34;exists&amp;#34;就是tests的一种，它与&amp;#34;test -e&amp;#34;命令的作用是相同的，通过&amp;#34;exists&amp;#34;可以判断ansible主机中的对应路径是否存在&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># &amp;#34;is not exists&amp;#34;表示对应路径不存在时返回真&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上述内容都是在ansible主机中判断的,和远端目标主机无关&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath is exists&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,判断变量的一些tests&lt;/p>
&lt;ul>
&lt;li>defined: 判断变量是否已经定义，已经定义则返回真&lt;/li>
&lt;li>undefined: 判断变量是否已经定义，未定义则返回真&lt;/li>
&lt;li>none: 判断变量值是否为空，如果变量已经定义，但是变量值为空，则返回真&lt;/li>
&lt;li>上述内容,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Variable is defined&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar is defined&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Variable is undefined&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar2 is undefined&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;The variable is defined, but there is no value&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar1 is none&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,判断执行结果的一些tests&lt;/p>
&lt;ul>
&lt;li>success或者succeeded: 通过任务的返回信息判断任务的返回状态,任务执行成功则返回真&lt;/li>
&lt;li>failure或者failed: 通过任务的返回信息判断任务的返回状态,任务执行失败则返回真&lt;/li>
&lt;li>change后者changed: 通过任务的返回信息判断任务的返回状态,任务执行状态为changed则返回真&lt;/li>
&lt;li>skip或者skipped: 通过任务的返回信息判断任务的返回状态,当任务没有满足执行条件,而被跳过执行时,则返回真&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">doshell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;yes&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">execute&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">cat /testdir/test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">doshell == &amp;#34;yes&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">retmsg&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ignore_errors&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task success&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">retmsg is success&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task failed&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">retmsg is failed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task skipped&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">retmsg is skip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task changed&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">retmsg is changed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,判断路径的一些tests&lt;/p>
&lt;ul>
&lt;li>注:如下tests的判断均针对于ansible主机中的路径,与目标主机无关&lt;/li>
&lt;li>file : 判断路径是否是一个文件,如果路径是一个文件则返回真&lt;/li>
&lt;li>directory :判断路径是否是一个目录,如果路径是一个目录则返回真&lt;/li>
&lt;li>link :判断路径是否是一个软链接,如果路径是一个软链接则返回真&lt;/li>
&lt;li>mount:判断路径是否是一个挂载点,如果路径是一个挂载点则返回真&lt;/li>
&lt;li>exists:判断路径是否存在,如果路径存在则返回真&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/test&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/testsoftlink&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/testhardlink&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testpath5&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/boot&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;file&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath1 is file&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;directory&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath2 is directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath3 is link&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;link&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath4 is link&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;mount&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath5 is mount&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;exists&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testpath1 is exists&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5,判断字符串的一些tests&lt;/p>
&lt;ul>
&lt;li>lower:判断包含字母的字符串中的字母是否是纯小写,字符串中的字母全部为小写则返回真&lt;/li>
&lt;li>upper:判断包含字母的字符串中的字母是否是纯大写,字符串中的字母全部为大写则返回真&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">str1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;abc&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">str2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ABC&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This string is all lowercase&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">str1 is lower&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This string is all uppercase&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">str2 is upper&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>6,判断整除的一些tests&lt;/p>
&lt;ul>
&lt;li>even :判断数值是否是偶数,是偶数则返回真&lt;/li>
&lt;li>odd :判断数值是否是奇数,是奇数则返回真&lt;/li>
&lt;li>divisibleby(num) :判断是否可以整除指定的数值,如果除以指定的值以后余数为0，则返回真&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">num1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">num2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">num3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">64&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;An even number&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">num1 is even&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;An odd number&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">num2 is odd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Can be divided exactly by&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">num3 is divisibleby(8)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>7,其他一些tests&lt;/p>
&lt;ul>
&lt;li>version:可以用于对比两个版本号的大小,或者与指定的版本号进行对比，使用语法为 version(‘版本号', ‘比较操作符')&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ver&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7.4.1708&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ver1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">7.4.1707&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This message can be displayed when the ver is greater than ver1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ver is version(ver1,&amp;#34;&amp;gt;&amp;#34;)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;system version {{ansible_distribution_version}} greater than 7.3&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ansible_distribution_version is version(&amp;#34;7.3&amp;#34;,&amp;#34;gt&amp;#34;)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># ”&amp;gt;”与”gt”都表示”大于”,当使用version时，支持多种风格的比较操作符，你可以根据自己的使用习惯进行选择，version支持的比较操作符如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 大于:&amp;gt;, gt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 大于等于:&amp;gt;=, ge&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 小于:&amp;lt;, lt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 小于等于:&amp;lt;=, le&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 等于: ==, =, eq&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 不等于:!=, &amp;lt;&amp;gt;, ne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>subset:判断一个list是不是另一个list的子集,是另一个list的子集时返回真&lt;/li>
&lt;li>superset : 判断一个list是不是另一个list的父集,是另一个list的父集时返回真&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">5&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;A is a subset of B&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a is subset(b)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;B is the parent set of A&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">b is superset(a)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 注:2.5版本中上述两个tests从issubset和issuperset更名为subset和superset&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>string:判断对象是否是一个字符串,是字符串则返回真&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is a string&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar1 is string&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is a string&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar2 is string&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is a string&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar3 is string&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上例playbook中只有testvar2和testvar3会被判断成字符串,testvar1不会&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>number:判断对象是否是一个数字,是数字则返回真&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">00.20&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is number&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar1 is number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is a number&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar2 is number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This variable is a number&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar3 is number&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 上例playbook中只有testvar1和testvar3会被判断成数字,testvar2不会&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="条件判断与block">#条件判断与block&lt;/h2>
&lt;p>1,在ansible中,可以使用&amp;quot;block&amp;quot;关键字将多个任务整合成一个&amp;quot;块&amp;quot;,这个&amp;quot;块&amp;quot;将被当做一个整体,我们可以对这个&amp;quot;块&amp;quot;添加判断条件,当条件成立时,则执行这个块中的所有任务&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 not in block&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">block&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in block1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task3 in block1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;gt; 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,block用在错误处理的场景下&lt;/p>
&lt;ul>
&lt;li>之前的方式如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ls /ooo&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">return_value&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ignore_errors&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 通过注册变量,且忽略错误(ignore_errors)来做分支判断&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;I cought an error&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">return_value is failed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>使用block+rescue的方式&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">block&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ls /ooo&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># rescue直接承接上面的block,当block中的内容出现错误时,执行rescue中的内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># rescue关键字与block关键字对齐,rescue的字面意思为&amp;#34;救援&amp;#34;,表示当block中的任务执行失败时,会执行rescue中的任务进行补救&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># rescue中的内容由自己定义&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rescue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I caught an error&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>block的优势,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">block&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># block可以接多个任务,任何一个任务出错,都会执行rescue中的任务,所以通常使用block和rescue结合,完成&amp;#34;错误捕捉,报出异常&amp;#34;的功能&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 不仅block中可以有多个任务,rescue中也可以定义多个任务,当block中的任何一个任务出错时,会按照顺序执行rescue中的任务.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ls /opt&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ls /testdir&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ls /c&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rescue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I caught an error&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>block+rescue+always的使用示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 还能再加入always关键字,加入always关键字以后,无论block中的任务执行成功还是失败,always中的任务都会被执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">block&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I execute normally&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/bin/false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I never execute, due to the above task failing&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rescue&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I caught an error&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">command&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/bin/false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;I also never execute&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">always&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This always executes&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如上例所示,block中有多个任务,rescue中也有多个任务,上例中故意执行&amp;#34;/bin/false&amp;#34;命令,模拟任务出错的情况,当block中的&amp;#39;/bin/false&amp;#39;执行后,其后的debug任务将不会被执行,因为&amp;#39;/bin/false&amp;#39;模拟出错,出错后直接执行rescue中的任务,在执行rescue中的任务时,会先输出 ‘I caught an error&amp;#39;,然后又在rescue中使用&amp;#39;/bin/false&amp;#39;模拟出错的情况,出错后之后的debug任务不会被执行,直接执行always中的任务,always中的任务一定会被执行,无论block中的任务是否出错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="条件判断与错误处理">#条件判断与错误处理&lt;/h2>
&lt;p>1,使用fail模块来处理出错&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo &amp;#39;This is a string for testing--error&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">return_value&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">fail&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Conditions established,Interrupt running playbook&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;error&amp;#39; in return_value.stdout&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;I never execute,Because the playbook has stopped&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># a, 当使用&amp;#34;in&amp;#34;或者&amp;#34;not in&amp;#34;进行条件判断时,整个条件需要用引号引起,并且,需要判断的字符串也需要使用引号引起,所以,使用&amp;#39;in&amp;#39;或者&amp;#39;not in&amp;#39;进行条件判断时,如下两种语法是正确的:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># when: &amp;#39; &amp;#34;successful&amp;#34; not in return_value.stdout &amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># when: &amp;#34; &amp;#39;successful&amp;#39; not in return_value.stdout &amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># b,fail可以单独使用,不加msg和when,效果是直接报错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,使用failed_when&lt;/p>
&lt;ul>
&lt;li>'failed_when'的作用就是,当对应的条件成立时,将对应任务的执行状态设置为失败&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;I execute normally&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo &amp;#39;This is a string for testing error&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">return_value&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">failed_when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39; &amp;#34;error&amp;#34; in return_value.stdout&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;I never execute,Because the playbook has stopped&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#39;failed_when&amp;#39;关键字与shell关键字对齐,表示其对应的条件是针对shell模块的,&amp;#39;failed_when&amp;#39;对应的条件是 ‘ “error&amp;#34; in return_value.stdout&amp;#39;,表示&amp;#34;error&amp;#34;字符串如果存在于shell模块执行后的标准输出中,则条件成立,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当条件成立后,shell模块的执行状态将会被设置为失败,由于shell模块的执行状态被设置为失败,所以playbook会终止运行,于是,最后的debug模块并不会被执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#39;failed_when&amp;#39;虽然会将任务的执行状态设置为失败,但并不代表任务真的失败了,以上例来说,shell模块的确是完全正常的执行了,只不过在执行之后,&amp;#39; failed_when&amp;#39;对应的条件成立了,&amp;#39; failed_when&amp;#39;将shell模块的执行状态设置为失败而已&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,使用changed_when&lt;/p>
&lt;ul>
&lt;li>‘changed_when'关键字的作用是在条件成立时,将对应任务的执行状态设置为changed&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test message&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">changed_when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;gt; 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># debug模块在正常执行的情况下只能是&amp;#34;ok&amp;#34;状态,上例中,我们使用&amp;#39;changed_when&amp;#39;关键字将debug模块的执行后的状态定义为了&amp;#34;changed&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>与handler结合使用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 只有任务作出了实际的操作时（执行后状态为changed）,才会真正的执行对应的handlers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 而在某些时候,如果想要通过任务执行后的返回值将任务的最终执行状态判定为changed,则可以使用&amp;#39;changed_when&amp;#39;关键字,以便条件成立时,可以执行对应的handlers,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#39;changed_when&amp;#39;除了能够在条件成立时将任务的执行状态设置为&amp;#34;changed&amp;#34;,还能让对应的任务永远不能是changed状态,示例如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;ls /opt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">changed_when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当将&amp;#39;changed_when&amp;#39;直接设置为false时,对应任务的状态将不会被设置为&amp;#39;changed&amp;#39;,如果任务原本的执行状态为&amp;#39;changed&amp;#39;,最终则会被设置为&amp;#39;ok&amp;#39;,所以,上例playbook执行后,shell模块的执行状态最终为&amp;#39;ok&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="过滤器">#过滤器&lt;/h2>
&lt;p>1,过滤器是一种能够帮助我们处理数据的工具,其实,ansible中的过滤器功能来自于jinja2模板引擎&lt;/p>
&lt;p>2,过滤器有些是jinja2内置的,有些是ansible特有的,如果这些过滤器都不能满足你的需求,jinja2也支持自定义过滤器&lt;/p>
&lt;p>3,一些常见的过滤器&lt;/p>
&lt;ul>
&lt;li>字符串相关&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;abc123ABC 666&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34; abc &amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;123456789&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1a2b,@#$%^&amp;amp;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串转换成纯大写&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | upper }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串转换成纯小写&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | lower }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串变成首字母大写,之后所有字母纯小写&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | capitalize }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串反转&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | reverse }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回字符串的第一个字符&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | first }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回字符串的最后一个字符&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | last }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串开头和结尾的空格去除&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar1 | trim }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串放在中间,并且设置字符串的长度为30,字符串两边用空格补齐30位长&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar1 | center(width=30) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回字符串长度,length与count等效,可以写为count&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar2 | length }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串转换成列表,每个字符作为一个元素&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar3 | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串转换成列表,每个字符作为一个元素,并且随机打乱顺序&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#shuffle的字面意思为洗牌&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar3 | shuffle }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将字符串转换成列表,每个字符作为一个元素,并且随机打乱顺序&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#在随机打乱顺序时,将ansible_date_time.epoch的值设置为随机种子&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#也可以使用其他值作为随机种子,ansible_date_time.epoch是facts信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar3 | shuffle(seed=(ansible_date_time.epoch)) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>数字相关&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar4&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>-&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将对应的值转换成int类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#ansible中,字符串和整形不能直接计算,比如{{ 8+&amp;#39;8&amp;#39; }}会报错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#所以,我们可以把一个值为数字的字符串转换成整形后再做计算&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 8+(&amp;#39;8&amp;#39; | int) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将对应的值转换成int类型,如果无法转换,默认返回0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用int(default=6)或者int(6)时,如果无法转换则返回指定值6&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;a&amp;#39; | int(default=6) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将对应的值转换成浮点型,如果无法转换,默认返回&amp;#39;0.0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;8&amp;#39; | float }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当对应的值无法被转换成浮点型时,则返回指定值&amp;#39;8.8‘&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;a&amp;#39; | float(8.88) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#获取对应数值的绝对值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar4 | abs }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#四舍五入&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 12.5 | round }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#取小数点后五位&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 3.1415926 | round(5) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从0到100中随机返回一个随机数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 100 | random }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从5到10中随机返回一个随机数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 10 | random(start=5) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从5到15中随机返回一个随机数,步长为3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#步长为3的意思是返回的随机数只有可能是5、8、11、14中的一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 15 | random(start=5,step=3) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从0到15中随机返回一个随机数,这个随机数是5的倍数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 15 | random(step=5) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从0到15中随机返回一个随机数,并将ansible_date_time.epoch的值设置为随机种子&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#也可以使用其他值作为随机种子,ansible_date_time.epoch是facts信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#seed参数从ansible2.3版本开始可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ 15 | random(seed=(ansible_date_time.epoch)) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>列表相关&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;span class="lnt">86
&lt;/span>&lt;span class="lnt">87
&lt;/span>&lt;span class="lnt">88
&lt;/span>&lt;span class="lnt">89
&lt;/span>&lt;span class="lnt">90
&lt;/span>&lt;span class="lnt">91
&lt;/span>&lt;span class="lnt">92
&lt;/span>&lt;span class="lnt">93
&lt;/span>&lt;span class="lnt">94
&lt;/span>&lt;span class="lnt">95
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar7&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">33&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar8&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="m">7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="m">15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">9&lt;/span>&lt;span class="p">]],&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar9&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">5&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;A&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,[&lt;/span>&lt;span class="s1">&amp;#39;QQ&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;wechat&amp;#39;&lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="s1">&amp;#39;CdEf&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar11&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar12&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回列表长度,length与count等效,可以写为count&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | length }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回列表中的第一个值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | first }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回列表中的最后一个值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | last }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回列表中最小的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | min }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回列表中最大的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | max }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表升序排序输出&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | sort }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表降序排序输出&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | sort(reverse=true) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#返回纯数字非嵌套列表中所有数字的和&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar7 | sum }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果列表中包含列表,那么使用flatten可以&amp;#39;拉平&amp;#39;嵌套的列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#2.5版本中可用,执行如下示例后查看效果&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar8 | flatten }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果列表中嵌套了列表,那么将第1层的嵌套列表‘拉平&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#2.5版本中可用,执行如下示例后查看效果&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar8 | flatten(levels=1) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#过滤器都是可以自由结合使用的,就好像linux命令中的管道符一样&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下,取出嵌套列表中的最大值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar8 | flatten | max }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表中的元素合并成一个字符串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | join }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表中的元素合并成一个字符串,每个元素之间用指定的字符隔开&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | join(&amp;#39; , &amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从列表中随机返回一个元素&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#对列表使用random过滤器时,不能使用start和step参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | random }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#从列表中随机返回一个元素,并将ansible_date_time.epoch的值设置为随机种子&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#seed参数从ansible2.3版本开始可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | random(seed=(ansible_date_time.epoch)) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#随机打乱顺序列表中元素的顺序&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#shuffle的字面意思为洗牌&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | shuffle }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#随机打乱顺序列表中元素的顺序&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#在随机打乱顺序时,将ansible_date_time.epoch的值设置为随机种子&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#seed参数从ansible2.3版本开始可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar9 | shuffle(seed=(ansible_date_time.epoch)) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表中的每个元素变成纯大写&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar10 | upper }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将列表中的每个元素变成纯小写&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar10 | lower }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#去掉列表中重复的元素,重复的元素只留下一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar11 | unique }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将两个列表合并,重复的元素只留下一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#也就是求两个列表的并集&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar11 | union(testvar12) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#取出两个列表的交集,重复的元素只留下一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar11 | intersect(testvar12) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#取出存在于testvar11列表中,但是不存在于testvar12列表中的元素&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#去重后重复的元素只留下一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#换句话说就是:两个列表的交集在列表1中的补集&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar11 | difference(testvar12) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#取出两个列表中各自独有的元素,重复的元素只留下一个&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#即去除两个列表的交集,剩余的元素&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar11 | symmetric_difference(testvar12) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>变量未定义时相关操作的过滤器&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testvar6&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果变量没有定义,则临时返回一个指定的默认值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#注:如果定义了变量,变量值为空字符串,则会输出空字符&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#default过滤器的别名是d&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar5 | default(&amp;#39;zsythink&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果变量的值是一个空字符串或者变量没有定义,则临时返回一个指定的默认值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar6 | default(&amp;#39;zsythink&amp;#39;,boolean=true) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果对应的变量未定义,则报出“Mandatory variable not defined.&amp;#34;错误,而不是报出默认错误&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar5 | mandatory }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,上述使用到的default参数,default过滤器,还有一个很方便的用法,default过滤器不仅能在变量未定义时返回指定的值,还能够让模块的参数变得&amp;quot;可有可无&amp;quot;&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># method one,循环了两次&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0444&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/foo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/bar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dest={{item.path}} state=touch mode={{item.mode}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ paths }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">item.mode is defined&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dest={{item.path}} state=touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ paths }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">item.mode is undefined&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">mode&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;0444&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/foo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/bar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">dest={{item.path}} state=touch mode={{item.mode | default(omit)}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ paths }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 没有对文件是否有mode属性进行判断,而是直接调用了file模块的mode参数,将mode参数的值设定为了&amp;#34;{{item.mode | default(omit)}}&amp;#34;,这是什么意思呢？它的意思是,如果item有mode属性,就把file模块的mode参数的值设置为item的mode属性的值,如果item没有mode属性,file模块就直接省略mode参数,&amp;#39;omit&amp;#39;的字面意思就是&amp;#34;省略&amp;#34;,换成大白话说就是:[有就用,没有就不用,可以有,也可以没有]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="变量六include_vars">#变量(六)include_vars&lt;/h2>
&lt;p>1,通过'vars_files'可以将文件中的变量引入playbook,以便在task中使用,但是vars_files加载时是静态的引入变量,即后续在vars_files中新增的变量,无法被引用&lt;/p>
&lt;ul>
&lt;li>vars_files变量文件在ansible控制节点中,与目标主机无关&lt;/li>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 为了更加方便的操作变量文件进行测试,此处将目标主机设置为me,主机me为ansible控制主机&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/ansible/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># /testdir/ansible/testfile内容为:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># testvar1: aaa&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># testvar2: bbb&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar1}},{{testvar2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">lineinfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">line&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;testvar3: ccc&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar1}},{{testvar2}},{{testvar3}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上述执行出错,因为在playbook载入vars_files对应的变量文件时,文件中只有两个变量,在执行第三个任务执行,并没有重新载入对应的变量文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,include_vars可以在任务执行过程中,随时的引入变量文件,以便动态的获取到最新的变量文件内容&lt;/p>
&lt;ul>
&lt;li>接上例,调整内容如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 为了更加方便的操作变量文件进行测试,此处将目标主机设置为me,主机me为ansible控制主机&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/ansible/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar3}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">lineinfile&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">line&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;testvar4: ddd&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar4}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>include_vars还有一种使用场景,有些时候,变量文件可能并没有位于ansible主机中,而是位于远程主机中,所以需要先把变量文件从远程主机中拉取到ansible主机中,当通过前面的task拉取到变量文件以后,也可以使用'include_vars'模块加载刚才拉取到的变量文件,以便后面的task可以使用变量文件中的变量.&lt;/li>
&lt;/ul>
&lt;p>3,include_vars的一些常用参数&lt;/p>
&lt;ul>
&lt;li>file,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 等效于:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># - include_vars: &amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testvar4}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>'include_vars'可以把变量文件中的变量全部赋值给另外一个变量,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">test70] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;testvar1&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;aaa&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;testvar2&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;bbb&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;testvar3&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;ccc&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;testvar4&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;ddd&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#39;trans_var&amp;#39;变量的值就是变量文件中的所有变量,可以使用name参数指定一个变量,然后将文件中的所有变量都赋值给这个指定的变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当使用name参数时,要获取到文件中的某一个变量的值,可以使用如下方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/testfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var.testvar4}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>‘include_vars'不仅能够加载指定的变量文件,还能够一次性将指定目录下的所有变量文件中的变量加载,使用dir参数即可指定对应的目录&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例中,使用dir参数指定了&amp;#34;/testdir/ansible/test/&amp;#34;目录,此目录中的所有变量文件都会被加载,但是在使用dir参数时,需要注意如下三点&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第一:指定目录中的所有文件的文件后缀必须是 ‘.yaml&amp;#39; 、&amp;#39;.yml&amp;#39; 、&amp;#39;.json&amp;#39;中的一种,默认只有这三种后缀是合法后缀,如果目录中存在非合法后缀的文件,执行playbook时则会报错.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第二:如果此目录中的子目录中包含变量文件,子目录中的变量文件也会被递归的加载,而且子目录中的文件也必须遵守上述第一条规则.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第三:dir参数与file参数不能同时使用.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第一点与第二点都是默认设置,可以通过其他选项修改&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当使用dir参数时,指定目录中的所有文件必须以 ‘.yaml&amp;#39; 、&amp;#39;.yml&amp;#39; 、&amp;#39;.json&amp;#39; 作为文件的后缀,如果想要手动指定合法的文件后缀名,则可以使用extensions参数指定哪些后缀是合法的文件后缀,extensions参数的值需要是一个列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extensions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">yaml,yml,json,varfile]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例中extensions参数的值为 “[yaml,yml,json,varfile]&amp;#34;,这表示指定目录中的合法文件后缀名为yaml、yml、json和varfile.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当使用dir参数时,默认情况下会递归的加载指定目录及其子目录中的所有变量文件,如果想要控制递归的深度,则可以借助depth参数,示例如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">depth&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例表示,加载&amp;#34;/testdir/ansible/test/&amp;#34;目录中的变量文件,但是其子目录中的变量文件将不会被加载,depth的值为1表示递归深度为1,默认值为0,表示递归到最底层的子目录.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 在使用dir参数时,我们还可以借助正则表达式,匹配那些我们想要加载的变量文件,比如,我们只想加载指定目录中以&amp;#34;var_&amp;#34;开头的变量文件,则可以使用如下方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">files_matching&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;^var_.*&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如上例所示,使用&amp;#39;files_matching&amp;#39;参数可以指定正则表达式,当指定目录中的文件名称符合正则时,则可以被加载&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 还可以明确指定,哪些变量文件不能被加载,使用&amp;#39;ignore_files&amp;#39;参数可以明确指定需要忽略的变量文件名称,&amp;#39;ignore_files&amp;#39;参数的值是需要是一个列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ignore_files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;^var_.*&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="l">varintest.yaml]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">trans_var&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{trans_var}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 加载 /testdir/ansible/test/目录中的变量文件,但是所有以&amp;#34;var_&amp;#34;开头的变量文件和varintest.yaml变量文件将不会被加载, ‘files_matching&amp;#39;参数和&amp;#39;ignore_files&amp;#39;参数能够同时使用,当它们同时出现时,会先找出正则匹配到的文件,然后从中排除那些需要忽略的文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3, 在2.4版本以后的ansible中,当执行了include_vars模块以后,include_vars模块会将载入的变量文件列表写入到自己的返回值中,这个返回值的关键字为'ansible_included_var_files',所以,如果我们想要知道本次任务引入了哪些变量文件,则可以使用如下方法&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dir&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/test/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">register&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">return_val&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{return_val.ansible_included_var_files}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="过滤器二-json_query">#过滤器(二) json_query&lt;/h2>
&lt;p>1,ansible可以通过include_vars加载日志文件,debug格式化输出json/yaml内容,方便查看&lt;/p>
&lt;ul>
&lt;li>json是yaml的子集,yaml是json的超集,yaml格式的数据和json格式的数据是可以互相转换的&lt;/li>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/wsCdnLogList&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;logs&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;domainName&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;asia1.cdn.test.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;files&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateFrom&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-0000&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateTo&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2359&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileMd5&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileName&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-0000-2330_asia1.cdn.test.com.all.log.gz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileSize&amp;#34;: &lt;/span>&lt;span class="m">254&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;logUrl&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;http://log.testcd.com/log/zsy/asia1.cdn.test.com/2018-09-05-0000-2330_asia1.cdn.test.com.all.log.gz?wskey=XXXXX5a&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;domainName&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;image1.cdn.test.com&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;files&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateFrom&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2200&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateTo&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2259&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileMd5&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileName&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2200-2230_image1.cdn.test.com.cn.log.gz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileSize&amp;#34;: &lt;/span>&lt;span class="m">10509&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;logUrl&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;http://log.testcd.com/log/zsy/image1.cdn.test.com/2018-09-05-2200-2230_image1.cdn.test.com.cn.log.gz?wskey=XXXXX1c&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateFrom&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2300&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;dateTo&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2359&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileMd5&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;error&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileName&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2018-09-05-2300-2330_image1.cdn.test.com.cn.log.gz&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;fileSize&amp;#34;: &lt;/span>&lt;span class="m">5637&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;logUrl&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;http://log.testcd.com/log/zsy/image1.cdn.test.com/2018-09-05-2300-2330_image1.cdn.test.com.cn.log.gz?wskey=XXXXXfe&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 变量文件的格式可以是yaml格式的,也可以是json格式的,上例就是将json格式的数据文件当做变量文件使用的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 对于ansible来说,当我们把上例中的json数据文件当做变量文件引入时,就好像引入了一个我们定义好的yaml格式的变量文件一样,对于ansible来说是没有区别的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>当需要从上例中获取到logUrl时,可以使用如下方式获取:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/wsCdnLogList&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.1.logUrl }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_subelements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{testvar.logs}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">files&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,上述例子中除with_subelements外,还可以使用json_query来获取&lt;/p>
&lt;ul>
&lt;li>json_query的使用方式:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 假设testvarfile中内容如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;users&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;tom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;age&amp;#34;: &lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;name&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;jerry&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;age&amp;#34;: &lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果要获取到所有user的name&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testvarfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | json_query(&amp;#39;users[*].name&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 这段数据当做变量赋值给了testvar变量,使用json_query过滤器对这个变量进行了处理,json_query(&amp;#39;users[*].name&amp;#39;)表示找到users列表中所有元素的name属性,输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">test70] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;tom&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;jerry&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>更进一步&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 假设testvarfile中内容如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tom&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Skateboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">VideoGame&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">jerry&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 要获取到所有的爱好&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testvarfile1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | json_query(&amp;#39;test.users[*].hobby[*]&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当数据结构中存在列表时,我们可以使用”列表名[*]”获取到列表下面的所有项,输出结果如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">me] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Skateboard&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;VideoGame&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">],&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;Music&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 想要根据条件获取到某个用户的某些信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method one&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testvarfile1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 此处使用了反引号,因为已经使用了&amp;#39;和&amp;#34;,使用`用作区分&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | json_query(&amp;#39;test.users[?name==`tom`].hobby[*]&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># method two&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testvarfile1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | json_query(querystring) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">querystring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test.users[?name==&amp;#39;tom&amp;#39;].age&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 在debug任务中使用vars关键字定义了一个只有当前debug任务能够使用的变量,从而避免了多层引号嵌套时所产生的冲突问题.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 同时获取到用户的姓名、年龄两个属性的值,当需要同时获取多个属性值时,需要通过键值对的方式调用属性&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testvarfile1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testvar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testvar | json_query(&amp;#39;test.users[*].{uname:name,uage:age}&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出内容如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">me] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;uage&amp;#34;: &lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;uname&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;tom&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>{&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;uage&amp;#34;: &lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;uname&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;jerry&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>回到第一个示例,获取logUrl的方式如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars_files&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir/ansible/wsCdnLogList&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ logs | json_query(&amp;#39;[*].files[*].logUrl&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="过滤器三-其他过滤器">#过滤器(三) 其他过滤器&lt;/h2>
&lt;p>1,其他一些常用的过滤器&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">liawne&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#在调用shell模块时,如果引用某些变量时需要添加引号,则可以使用quote过滤器代替引号&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#示例如下,先看示例,后面会有注解&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">shell&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;echo {{teststr | quote}} &amp;gt; /testdir/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;a\nb\nc&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#上例中shell模块的写法与如下写法完全等效&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#shell: &amp;#34;echo &amp;#39;{{teststr}}&amp;#39; &amp;gt; /testdir/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#没错,如你所见,quote过滤器能够代替引号&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#上例中,如果不对{{teststr}}添加引号,则会报错,因为teststr变量中包含&amp;#34;\n&amp;#34;转义符&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#ternary过滤器可以实现三元运算的效果 示例如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下示例表示如果name变量的值是John,那么对应的值则为Mr,否则则为Ms&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#简便的实现类似if else对变量赋值的效果&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ (name == &amp;#39;John&amp;#39;) | ternary(&amp;#39;Mr&amp;#39;,&amp;#39;Ms&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;John&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#basename过滤器可以获取到一个路径字符串中的文件名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{teststr | basename}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#获取到一个windows路径字符串中的文件名,2.0版本以后的ansible可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{teststr | win_basename}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;D:\study\zsythink&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#dirname过滤器可以获取到一个路径字符串中的路径名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{teststr | dirname}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testfile&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#获取到一个windows路径字符串中的文件名,2.0版本以后的ansible可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{teststr | win_dirname}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;D:\study\zsythink&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#将一个windows路径字符串中的盘符和路径分开,2.0版本以后的ansible可用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{teststr | win_splitdrive}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;D:\study\zsythink&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#可以配合之前总结的过滤器一起使用,比如只获取到盘符,示例如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{teststr | win_splitdrive | first}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#可以配合之前总结的过滤器一起使用,比如只获取到路径,示例如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{teststr | win_splitdrive | last}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#realpath过滤器可以获取软链接文件所指向的真正文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ path | realpath }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible/testsoft&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#relpath过滤器可以获取到path对于“指定路径”来说的“相对路径”&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ path | relpath(&amp;#39;/testdir/testdir&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/testdir/ansible&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#splitext过滤器可以将带有文件名后缀的路径从“.后缀”部分分开&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ path | splitext }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/etc/nginx/conf.d/test.conf&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#可以配置之前总结的过滤器,获取到文件后缀&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{ path | splitext | last}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#可以配置之前总结的过滤器,获取到文件前缀名&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{ path | splitext | first | basename}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#to_uuid过滤器能够为对应的字符串生成uuid&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ teststr | to_uuid }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;This is a test statement&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#bool过滤器可以根据字符串的内容返回bool值true或者false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#字符串的内容为yes、1、True、true则返回布尔值true,字符串内容为其他内容则返回false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ teststr | bool }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">teststr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当和用户交互时,有可能需要用户从两个选项中选择一个,比如是否继续,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#这时,将用户输入的字符串通过bool过滤器处理后得出布尔值,从而进行判断,比如如下用法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#- debug:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># msg: &amp;#34;output when bool is true&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># when: some_string_user_input | bool&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#map过滤器可以从列表中获取到每个元素所共有的某个属性的值,并将这些值组成一个列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当列表中嵌套了列表,不能越级获取属性的值,也就是说只能获取直接子元素的共有属性值.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tom&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">18&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Skateboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">VideoGame&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">jerry&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">age&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">20&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users | map(attribute=&amp;#39;name&amp;#39;) | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#也可以组成一个字符串,用指定的字符隔开,比如分号&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{ users | map(attribute=&amp;#39;name&amp;#39;) | join(&amp;#39;;&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#与python中的用法相同,两个日期类型相减能够算出两个日期间的时间差&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#下例中,我们使用to_datatime过滤器将字符串类型转换成了日期了类型,并且算出了时间差&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ (&amp;#34;2016-08-14 20:00:12&amp;#34;| to_datetime) - (&amp;#34;2012-12-25 19:00:00&amp;#34; | to_datetime) }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#默认情况下,to_datatime转换的字符串的格式必须是“%Y-%m-%d %H:%M:%S”&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果对应的字符串不是这种格式,则需要在to_datetime中指定与字符串相同的时间格式,才能正确的转换为时间类型&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ (&amp;#34;20160814&amp;#34;| to_datetime(&amp;#34;%Y%m%d&amp;#34;)) - (&amp;#34;2012-12-25 19:00:00&amp;#34; | to_datetime) }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下方法可以获取到两个日期之间一共相差多少秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ ( (&amp;#34;20160814&amp;#34;| to_datetime(&amp;#34;%Y%m%d&amp;#34;)) - (&amp;#34;20121225&amp;#34; | to_datetime(&amp;#34;%Y%m%d&amp;#34;)) ).total_seconds() }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下方法可以获取到两个日期“时间位”相差多少秒,注意:日期位不会纳入对比计算范围&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#也就是说,下例中的2016-08-14和2012-12-25不会纳入计算范围&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#只是计算20:00:12与08:30:00相差多少秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果想要算出连带日期的秒数差则使用total_seconds()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ ( (&amp;#34;2016-08-14 20:00:12&amp;#34;| to_datetime) - (&amp;#34;2012-12-25 08:30:00&amp;#34; | to_datetime) ).seconds }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下方法可以获取到两个日期“日期位”相差多少天,注意:时间位不会纳入对比计算范围&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;{{ ( (&amp;#34;2016-08-14 20:00:12&amp;#34;| to_datetime) - (&amp;#34;2012-12-25 08:30:00&amp;#34; | to_datetime) ).days }}&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用base64编码方式对字符串进行编码&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;hello&amp;#39; | b64encode }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用base64编码方式对字符串进行解码&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;aGVsbG8=&amp;#39; | b64decode }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#######################################################################&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用sha1算法对字符串进行哈希&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | hash(&amp;#39;sha1&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用md5算法对字符串进行哈希&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | hash(&amp;#39;md5&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#获取到字符串的校验和,与md5哈希值一致&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | checksum }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用blowfish算法对字符串进行哈希,注:部分系统支持&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | hash(&amp;#39;blowfish&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用sha256算法对字符串进行哈希,哈希过程中会生成随机&amp;#34;盐&amp;#34;,以便无法直接对比出原值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | password_hash(&amp;#39;sha256&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用sha256算法对字符串进行哈希,并使用指定的字符串作为&amp;#34;盐&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123456&amp;#39; | password_hash(&amp;#39;sha256&amp;#39;,&amp;#39;mysalt&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用sha512算法对字符串进行哈希,哈希过程中会生成随机&amp;#34;盐&amp;#34;,以便无法直接对比出原值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123123&amp;#39; | password_hash(&amp;#39;sha512&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#使用sha512算法对字符串进行哈希,并使用指定的字符串作为&amp;#34;盐&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123123&amp;#39; | password_hash(&amp;#39;sha512&amp;#39;,&amp;#39;ebzL.U5cjaHe55KK&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下方法可以幂等的为每个主机的密码生成对应哈希串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#有了之前总结的过滤器用法作为基础,你一定已经看懂了&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;123123&amp;#39; | password_hash(&amp;#39;sha512&amp;#39;, 65534|random(seed=inventory_hostname)|string) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="lookup插件">#lookup插件&lt;/h2>
&lt;p>1,ansible中有很多种类的插件,比如之前总结的”tests”,也是插件的一种,ansible官网总结了各个插件的作用,并且将这些插件按照功能进行了分类&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.ansible.com/ansible/latest/plugins/plugins.html">https://docs.ansible.com/ansible/latest/plugins/plugins.html&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>2,前文总结的”循环”在本质上也是一种插件,这种插件叫做”lookup插件”,先回忆一些”循环”的使用方法,以便能够更好的描述”循环”和”lookup插件”之间的关系&lt;/p>
&lt;ul>
&lt;li>列表示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;index is {{item.0}} , value is {{item.1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_indexed_items&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;c&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 等价于&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;index is {{item.0}} , value is {{item.1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;indexed_items&amp;#39;,[&amp;#39;a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;]) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第一个示例使用”with_indexed_items关键字”处理列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第二个示例使用”loop关键字”配合”lookup插件”处理列表&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例中,”lookup(‘indexed_items&amp;#39;,[‘a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;])” 这段代码就是在使用lookup插件,含义是,使用名为&amp;#39;indexed_items&amp;#39;的lookup插件处理[‘a&amp;#39;,&amp;#39;b&amp;#39;,&amp;#39;c&amp;#39;]这个列表,&amp;#39;indexed_items&amp;#39;就是一个lookup插件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>字典示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}} is {{item.value}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_dict&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 等价于&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}} is {{item.value}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;dict&amp;#39;,users) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第一个示例使用”with_dict关键字”处理users字典变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 第二个示例使用”loop关键字”配合”lookup插件”处理users字典变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例中,”lookup(‘dict&amp;#39;,users)”表示使用名为&amp;#39;dict&amp;#39;的lookup插件处理users字典变量,&amp;#39;dict&amp;#39;也是一个lookup插件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,lookup插件的用法&lt;/p>
&lt;ul>
&lt;li>lookup(‘插件名',被处理数据或参数)&lt;/li>
&lt;li>以”with_”开头的循环实际上就是”with_”和”lookup()”的组合,lookup插件可以作为循环的数据源&lt;/li>
&lt;/ul>
&lt;p>4,查看插件的帮助命令&lt;/p>
&lt;ul>
&lt;li>查看有哪些lookup插件可以使用: ansible-doc -t lookup -l(”-t”选项用于指定插件类型,”-l”选项表示列出列表)&lt;/li>
&lt;li>单独查看某个插件的使用方法,比如dict插件的使用方法: ansible-doc -t lookup dict&lt;/li>
&lt;li>file插件可以获取到指定文件的文件内容（注:文件位于ansible主机中）,示例如下&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;file&amp;#39;,&amp;#39;/testdir/testfile&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果想要获取多个文件中的内容,则可以传入多个文件路径,示例如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;file&amp;#39;,&amp;#39;/testdir/testfile&amp;#39;,&amp;#39;/testdir/testfile1&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># file插件获得多个文件中的内容时,会将多个文件中的内容放置在一个字符串中,并用”逗号”隔开每个文件中的内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 想要获得一个字符串列表,将每个文件的内容当做列表中的一个独立的字符串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;file&amp;#39;,&amp;#39;/testdir/testfile&amp;#39;,&amp;#39;/testdir/testfile1&amp;#39;,wantlist=true) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5,其他lookup插件用法示例&lt;/p>
&lt;ul>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#file插件可以获取ansible主机中指定文件的内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;file&amp;#39;,&amp;#39;/testdir/testfile&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#env插件可以获取ansible主机中指定变量的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;env&amp;#39;,&amp;#39;PATH&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#first_found插件可以获取列表中第一个找到的文件&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#按照列表顺序在ansible主机中查找&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;first_found&amp;#39;,looklist) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">looklist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp/staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当使用with_first_found时,可以在列表的最后添加- skip: true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#表示如果列表中的所有文件都没有找到,则跳过当前任务,不会报错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当不确定有文件能够被匹配到时,推荐这种方式&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_first_found&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/testdir1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">/tmp/staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">skip&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#ini插件可以在ansible主机中的ini文件中查找对应key的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下示例表示从test.ini文件中的testA段落中查找testa1对应的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#测试文件/testdir/test.ini的内容如下(不包含注释符#号)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#[testA]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#testa1=Andy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#testa2=Armand&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#[testB]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#testb1=Ben&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;ini&amp;#39;,&amp;#39;testa1 section=testA file=/testdir/test.ini&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#当未找到对应key时,默认返回空字符串,如果想要指定返回值,可以使用default选项,如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{ lookup(&amp;#39;ini&amp;#39;,&amp;#39;test666 section=testA file=/testdir/test.ini default=notfound&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#可以使用正则表达式匹配对应的键名,需要设置re=true,表示开启正则支持,如下&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#msg: &amp;#34;{{ lookup(&amp;#39;ini&amp;#39;,&amp;#39;testa[12] section=testA file=/testdir/test.ini re=true&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#ini插件除了可以从ini类型的文件中查找对应key,也可以从properties类型的文件中查找key&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#默认在操作的文件类型为ini,可以使用type指定properties类型,如下例所示&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如下示例中,application.properties文件内容如下(不包含注释符#号)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#http.port=8080&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#redis.no=0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#imageCode = 1,2,3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;ini&amp;#39;,&amp;#39;http.port type=properties file=/testdir/application.properties&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#dig插件可以获取指定域名的IP地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#此插件依赖dnspython库,可使用pip安装pip install dnspython&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#如果域名使用了CDN,可能返回多个地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;dig&amp;#39;,&amp;#39;www.baidu.com&amp;#39;,wantlist=true) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#password插件可以生成随机的密码并保存在指定文件中&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;password&amp;#39;,&amp;#39;/tmp/testpasswdfile&amp;#39;) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#以上插件还有一些参数我们没有涉及到,而且也还有很多插件没有总结,等到用到对应的插件时,再行介绍吧&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#你也可以访问官网的lookup插件列表页面,查看各个插件的用法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">#https://docs.ansible.com/ansible/latest/plugins/lookup.html&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="循环八">#循环(八)&lt;/h2>
&lt;p>1,在新版本的ansible中,官方推荐的循环的使用方式不同,在2.6推荐的方式为loop加lookup和loop加filter&lt;/p>
&lt;ul>
&lt;li>loop的简单使用方式:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">teststr1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">teststr2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>loop加lookup插件替换with_X&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}} is {{item.value}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ lookup(&amp;#39;dict&amp;#39;,users) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,在2.6版本开始,官方开始推荐使用&amp;quot;loop加filter&amp;quot;的方式来替代&amp;quot;loop加lookup&amp;quot;的方式&lt;/p>
&lt;ul>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}} is {{item.value}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users | dict2items }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># users是一个字典格式的变量,它的结构是这样的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># users:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># alice: female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># bob: male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当users字典被dict2items转换处理以后,会变成如下模样&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># users:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># - key: alice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># value: female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># - key: bob&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># value: male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,无论是&amp;quot;with_X&amp;quot;、&amp;quot;loop加lookup&amp;quot;还是&amp;quot;loop加filter&amp;quot;,都是使用不同的方式,实现相同的功能而已&lt;/p>
&lt;p>4,替换方式&lt;/p>
&lt;ul>
&lt;li>with_list&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#loop可以替代with_list,当处理嵌套的列表时,列表不会被拉平&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="l">b,c]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">d&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_flattened&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#flatten过滤器可以替代with_flattened,当处理多层嵌套的列表时,列表中所有的嵌套层级都会被拉平&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#示例如下,flatten过滤器的用法在前文中已经总结过,此处不再赘述&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="l">b,c]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">d&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testlist | flatten}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_items&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#flatten过滤器（加参数）可以替代with_items,当处理多层嵌套的列表时,只有列表中的第一层会被拉平&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="l">b,c]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">d&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testlist | flatten(levels=1)}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_indexed_items&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#flatten过滤器（加参数）,再配合loop_control关键字,可以替代with_indexed_items&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#当处理多层嵌套的列表时,只有列表中的第一层会被拉平,flatten过滤器的bug暂且忽略&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#示例如下,之后会对示例进行解释&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="p">[&lt;/span>&lt;span class="l">b,c]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">d&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{index}}--{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{testlist | flatten(levels=1)}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_control&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">index_var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">index&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;loop_control&amp;#34;关键字可以用于控制循环的行为,比如在循环时获取到元素的索引.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;index_var&amp;#34;是&amp;#34;loop_control&amp;#34;的一个设置选项,&amp;#34;index_var&amp;#34;的作用是让我们指定一个变量,&amp;#34;loop_control&amp;#34;会将列表元素的索引值存放到这个指定的变量中,比如如下配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_control&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">index_var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">my_idx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上述设置表示,在遍历列表时,当前被遍历元素的索引会被放置到&amp;#34;my_idx&amp;#34;变量中,也就是说,当进行循环操作时,只要获取到&amp;#34;my_idx&amp;#34;变量的值,就能获取到当前元素的索引值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># loop_control还有其他的选项可以使用,当前暂时不列举&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_together&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#zip_longest过滤器配合list过滤器,可以替代with_together&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a, b ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A, B, C, D ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.0 }} - {{ item.1 }} - {{item.2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_together&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{testlist1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{testlist2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{testlist3}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.0 }} - {{ item.1 }} - {{item.2}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testlist1 | zip_longest(testlist2,testlist3) | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_nested/with_cartesian&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#product过滤器配合list过滤器,可以替代with_nested和with_cartesian&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#如果你忘了with_nested和with_cartesian的用法,可以回顾前文&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a, b, c ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.0 }}--{{ item.1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testlist1 | product(testlist2) | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_sequence&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#range过滤器配合list过滤器可以代替with_sequence&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#你可以先回顾一下with_sequence的用法,然后再测试如下示例&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ range(0, 6, 2) | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 需要格式化功能时:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ &amp;#39;number is %0.2f&amp;#39; | format(item) }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ range(2, 7, 2) | list }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_random_choice&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#使用random函数可以替代with_random_choice,由于random函数是随机取出列表中的一个值,并不涉及循环操作,所以并不用使用loop关键字.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a, b, c ]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ testlist | random }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_dict&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#除了上文总结的dict2items过滤器,dictsort过滤器也可以替代with_dict&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">d&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">daisy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">c&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">carol&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bob&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">e&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ella&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}} -- {{item.value}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users | dict2items }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.0}} -- {{item.1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users | dictsort }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>with_subelements&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">#subelements过滤器可以替代with_subelements&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">bob&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Skateboard&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">VideoGame&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">alice&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">hobby&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Music&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.0.name}}&amp;#39;s hobby is {{item.1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">with_subelements&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s2">&amp;#34;{{users}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">hobby&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.0.name}}&amp;#39;s hobby is {{item.1}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{users | subelements(&amp;#39;hobby&amp;#39;)}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5,loop_control的其他参数使用&lt;/p>
&lt;ul>
&lt;li>pause选项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_control&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">pause&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上例表示每次循环之间间隔10秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>label&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Alice Appleworth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">123-456-7890&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Bob Bananarama&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">987-654-3210&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{users | dict2items}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 此处输出内容太多,对于需要查找的内容较难找到&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># label选项的作用,它可以在循环输出信息时,简化输出item的信息&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">alice&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Alice Appleworth&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">123-456-7890&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">Bob Bananarama&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">telephone&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">987-654-3210&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{users | dict2items}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_control&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">label&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item.key}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="include">#include&lt;/h2>
&lt;p>1,ansible中有类似编程语言中类似函数调用的功能,就是include,通过include,可以在一个playbook中包含另一个文件&lt;/p>
&lt;ul>
&lt;li>include模块可以指定一个文件,这个文件中的内容是一个任务列表（一个或多个任务）,使用include模块引用对应的文件时,文件中的任务会在被引用处执行,就像写在被引用处一样&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat lamp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install_MysqlAndPhp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">httpd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat lnmp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install_MysqlAndPhp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">nginx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat install_MysqlAndPhp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">mysql&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">php-fpm&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,在handlers关键字中,也可以使用include,handlers也是一种任务,只是这种任务有相应的触发条件而已&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat test_include.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/opt/ttt&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">notify&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test include handlers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">handlers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test include handlers&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">include_handler.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat include_handler.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 of handlers&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 of handlers&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task3 of handlers&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,&amp;quot;include&amp;quot;不仅能够引用任务列表,还能够引用playbook,比如,在一个playbook中引用另一个playbook&lt;/p>
&lt;ul>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat lamp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">install_MysqlAndPhp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">httpd&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lnmp.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 在lamp.yml的结尾引入了lnmp.yml,当我们在执行lamp.yml时,会先执行lamp相关的任务,然后再执行lnmp.yml中的任务.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,include还可以接受一些参数&lt;/p>
&lt;ul>
&lt;li>如下所示&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat test_include1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">test_var1=hello&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">test_var2=test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ test_var1 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ test_var2 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>还能够使用vars关键字,以key: value变量的方式传入参数变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test_var1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hello&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">test_var2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">test&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>通过vars关键字也能够传入结构稍微复杂的变量数据,以便在包含的文件中使用,示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat test_include1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">users&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">bob&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">male&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">lucy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gender&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">female&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ item.key}} is {{ item.value.gender }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ users | dict2items }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5,可以针对某个include去打标签&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat test_include1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in2.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">t2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in1.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in in1.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in2.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in2.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in in2.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>可以对include添加条件判断,还可以对include进行循环操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat test_include1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in3.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;gt; 1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in3.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in3.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in3.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in in3.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 循环的调用多个任务,可以使用上例中的方法,将需要循环调用的多个任务写入到一个yml文件中,然后使用include调用这个yml文件,再配合loop进行循环即可&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>6,loop_control中loop_var的使用&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat A.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">B.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat B.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{item}}--task in B.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">b&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">c&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># B.yml中循环调用了debug模块,而在A.yml中,又循环的调用了B.yml,当出现这种&amp;#34;双层循环&amp;#34;的情况时,B文件中的item信息只打印B中的列表内容&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>若要获取上例中外层item的值,可以使用loop_control中loop_var选项&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat A.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">B.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_control&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop_var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">outer_item&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat B.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{outer_item}}--{{item}}--task in B.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">loop&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">b&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">c&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 将loop_var选项的值设置为&amp;#34;outer_item&amp;#34;,这表示,我们将外层循环的item值存放在了&amp;#34;outer_item&amp;#34;变量中,在B文件中的debug任务中,同时输出了&amp;#34;outer_item&amp;#34;变量和&amp;#34;item&amp;#34;变量的值&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="include二">#include(二)&lt;/h2>
&lt;p>1,&amp;quot;include&amp;quot;的某些原始用法在之后的版本中可能会被弃用,在之后的版本中,会使用一些新的关键字代替这些原始用法&lt;/p>
&lt;p>2,include_task模块&lt;/p>
&lt;ul>
&lt;li>include模块可以用来包含一个任务列表,include_tasks模块的作用也是用来包含一个任务列表,在之后的版本中,如果我们想要包含一个任务列表,那么就可以使用&amp;quot;include_tasks&amp;quot;关键字代替&amp;quot;include&amp;quot;关键字,示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat intest.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in in.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当我们使用&amp;#34;include_tasks&amp;#34;时,&amp;#34;include_tasks&amp;#34;本身会被当做一个&amp;#34;task&amp;#34;,这个&amp;#34;task&amp;#34;会把被include的文件的路径输出在控制台中&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;include&amp;#34;是透明的,&amp;#34;include_tasks&amp;#34;是可见的,&amp;#34;include_tasks&amp;#34;更像是一个任务,这个任务包含了其他的一些任务&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,在2.7版本之后,include_tasks模块加入了file和apply参数&lt;/p>
&lt;ul>
&lt;li>file参数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 两种方式其实完全相同,只不过一个使用了&amp;#34;file&amp;#34;参数的方式,另一个使用了&amp;#34;free_form&amp;#34;的方式,虽然语法上不同,但是本质上没有区别&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>apply参数&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat intest.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;include_tasks&amp;#34;这个任务本身被调用了,而&amp;#34;include_tasks&amp;#34;对应文件中的任务却没有被调用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;include_tasks&amp;#34;与&amp;#34;include&amp;#34;并不相同,标签只会对&amp;#34;include_tasks&amp;#34;任务本身生效,而不会对其中包含的任务生效&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果想要tags对&amp;#34;include_tasks&amp;#34;中包含的所有任务都生效,需要使用到&amp;#34;include_tasks&amp;#34;模块的apply参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">apply&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 但如上写法并未按预期执行,连include_tasks都没有执行,需要完成预期内容,需要如下配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">apply&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">t1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 在使用&amp;#34;include_tasks&amp;#34;时,不仅使用apply参数指定了tags,同时还使用tags关键字,对&amp;#34;include_tasks&amp;#34;本身添加了always标签&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,import_tasks&lt;/p>
&lt;ul>
&lt;li>如果想要包含引用一个任务列表,也可以使用&amp;quot;import_tasks&amp;quot;关键字&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat intest1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">import_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task2 in in.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;import_tasks&amp;#34;模块并不会像&amp;#34;include_tasks&amp;#34;模块那样,在控制台中输出相关的任务信息,&amp;#34;import_tasks&amp;#34;是相对透明的&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&amp;quot;import_tasks&amp;quot;是静态的,&amp;quot;include_tasks&amp;quot;是动态的&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># &amp;#34;静态&amp;#34;的意思就是被include的文件在playbook被加载时就展开了（是预处理的）.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># &amp;#34;动态&amp;#34;的意思就是被include的文件在playbook运行时才会被展开（是实时处理的）.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 由于&amp;#34;include_tasks&amp;#34;是动态的,所以,被include的文件的文件名可以使用任何变量替换.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 由于&amp;#34;import_tasks&amp;#34;是静态的,所以,被include的文件的文件名不能使用动态的变量替换.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat intest3.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">import_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{file_name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{file_name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上述内容可以正常执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat intest3.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file_name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">import_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{file_name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{file_name}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 上述内容执行报错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当使用静态的import时,请确保文件名中使用到的变量被定义在vars中、vars_files中、或者extra-vars中,静态的import不支持其他方式传入的变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>如果想要对包含的任务列表进行循环操作,则只能使用&amp;quot;include_tasks&amp;quot;关键字,不能使用&amp;quot;import_tasks&amp;quot;关键字,&amp;quot;import_tasks&amp;quot;并不支持循环操作,使用&amp;quot;loop&amp;quot;关键字或&amp;quot;with_items&amp;quot;关键字对include文件进行循环操作时,只能配合&amp;quot;include_tasks&amp;quot;才能正常运行&lt;/li>
&lt;li>使用when做条件判断执行include_tasks和import_tasks时,区别很大&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 当对&amp;#34;include_tasks&amp;#34;使用when进行条件判断时,when对应的条件只会应用于&amp;#34;include_tasks&amp;#34;任务本身,当执行被包含的任务时,不会对这些被包含的任务重新进行条件判断.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 当对&amp;#34;import_tasks&amp;#34;使用when进行条件判断时,when对应的条件会应用于被include的文件中的每一个任务,当执行被包含的任务时,会对每一个被包含的任务进行同样的条件判断.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat intest4.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;----------set testvar to 0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testnum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;-----include_tasks-----enter the in1.yml-----&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">include_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testnum == 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;----------set testvar to 0&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testnum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;-----import_tasks-----enter the in1.yml-----&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">import_tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">in1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">testnum == 0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat in1.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">testnum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;task1 in in1.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出内容如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">PLAY [node2] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [----------set testvar to 0] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;-----include_tasks-----enter the in1.yml-----&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [include_tasks] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">included&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/in1.yml for node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [set_fact] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;task1 in in1.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [----------set testvar to 0] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;-----import_tasks-----enter the in1.yml-----&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [set_fact] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">skipping&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">node2]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">PLAY RECAP xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">node2 &lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ok=8 changed=0 unreachable=0 failed=0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>tags的使用,与&amp;quot;include_tasks&amp;quot;不同,当为&amp;quot;import_tasks&amp;quot;添加标签时,tags是针对被包含文件中的所有任务生效的,与&amp;quot;include&amp;quot;关键字的效果相同.&lt;/li>
&lt;li>&amp;quot;include_tasks&amp;quot;与&amp;quot;import_tasks&amp;quot;都可以在handlers中使用,并没有什么不同
5,import_playbook
&lt;ul>
&lt;li>使用&amp;quot;include&amp;quot;关键字除了能够引用任务列表,还能够引用整个playbook,在之后的版本中,如果想要引入整个playbook,则需要使用&amp;quot;import_playbook&amp;quot;模块代替&amp;quot;include&amp;quot;模块,因为在2.8版本以后,使用&amp;quot;include&amp;quot;关键字引用整个playbook的特性将会被弃用&lt;/li>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat intest6.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task in intest6.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">import_playbook&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">intest7.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat intest7.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;test task in intest7.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="jinja2模板一">#jinja2模板(一)&lt;/h2>
&lt;p>1,对远端机器进行操作时,很多场景下都需要根据主机信息进行配置,这个时候可以使用template模块来完成相应的目的&lt;/p>
&lt;ul>
&lt;li>示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># cat temptest.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">---&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">remote_user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">root&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">yum&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">redis&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">present&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">template&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">src&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/testdir/ansible/redis.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/etc/redis.conf&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># cat /testdir/ansible/redis.conf,下列的ansible_host是host alias,需要注意&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="l">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">bind {{ansible_host}}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="l">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>template还有其他的选项&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code># owner,group,mode(mode=0644,mode=u+x)
# force参数: 当远程主机的目标路径中已经存在同名文件,并且与最终生成的文件内容不同时,是否强制覆盖,可选值有yes和no,默认值为yes,表示覆盖,如果设置为no,则不会执行覆盖拷贝操作,远程主机中的文件保持不变
# backup参数: 当远程主机的目标路径中已经存在同名文件,并且与最终生成的文件内容不同时,是否对远程主机的文件进行备份,可选值有yes和no,当设置为yes时,会先备份远程主机中的文件,然后再将最终生成的文件拷贝到远程主机
&lt;/code>&lt;/pre>&lt;p>2,上述例子中使用的template模块渲染,使用的都是jinja2模板引擎&lt;/p>
&lt;pre tabindex="0">&lt;code> - \{\{ \}\} :用来装载表达式,比如变量、运算表达式、比较表达式等.
- \{\% \%\} :用来装载控制语句,比如 if 控制结构,for循环控制结构.
- \{\# \#\} :用来装载注释,模板文件被渲染后,注释不会包含在最终生成的文件中.
&lt;/code>&lt;/pre>&lt;p>3,双花括号的使用&lt;/p>
&lt;ul>
&lt;li>变量的引用,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible node2 -m template -e &amp;#34;testvar1=teststr&amp;#34; -a &amp;#34;src=test.j2 dest=/opt/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> jinja2 variable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> &lt;span class="o">{{&lt;/span> testvar1 &lt;span class="o">}}&lt;/span> &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出内容如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> jinja2 variable
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> teststr tesT
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># &amp;#34;{{ }}&amp;#34;中包含的就是一个变量,当模板被渲染后,变量的值被替换到了最终的配置文件中&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>包含表达式,示例如下:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 比较表达式:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="nv">1&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">2&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="m">2&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">2&lt;/span> &amp;gt; &lt;span class="m">1&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">2&lt;/span> &amp;gt;&lt;span class="o">=&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">生成文件内容如下:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 逻辑运算:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="m">2&lt;/span> &amp;gt; 1&lt;span class="o">)&lt;/span> or &lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> &amp;gt; 2&lt;span class="o">)&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="m">2&lt;/span> &amp;gt; 1&lt;span class="o">)&lt;/span> and &lt;span class="o">(&lt;/span>&lt;span class="m">1&lt;/span> &amp;gt; 2&lt;span class="o">)&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> not &lt;span class="nb">true&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> not True &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 算数运算:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">3&lt;/span> + &lt;span class="m">2&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">3&lt;/span> - &lt;span class="m">4&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">3&lt;/span> * &lt;span class="m">5&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">2&lt;/span> ** &lt;span class="m">3&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">7&lt;/span> / &lt;span class="m">5&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">7&lt;/span> // &lt;span class="m">5&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">17&lt;/span> % &lt;span class="m">5&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">5&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">15&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">1.4
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 成员运算:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">1&lt;/span> in &lt;span class="o">[&lt;/span>1,2,3,4&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">1&lt;/span> not in &lt;span class="o">[&lt;/span>1,2,3,4&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 一些基础的数据类型,都可以包含在&amp;#34;{{ }}&amp;#34;中,jinja2本身就是基于python的模板引擎,所以,python的基础数据类型都可以包含在&amp;#34;{{ }}&amp;#34;中&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;testString&amp;#39;&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s2">&amp;#34;testString&amp;#34;&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="m">15&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> 18.8 &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>.1 &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">][&lt;/span>1&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#tuple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>.0 &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">)[&lt;/span>0&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#dic&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>:&lt;span class="s1">&amp;#39;bob&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>:18&lt;span class="o">}&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>:&lt;span class="s1">&amp;#39;bob&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>:18&lt;span class="o">}&lt;/span>.name &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>:&lt;span class="s1">&amp;#39;bob&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>:18&lt;span class="o">}[&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#Boolean&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> True &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="nb">true&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> False &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="nb">false&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">生成文件内容如下:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#str&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testString
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testString
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#num&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">15&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">18.8
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#list&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Bb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Bb
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#tuple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;Aa&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Bb&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Cc&amp;#39;&lt;/span>, &lt;span class="s1">&amp;#39;Dd&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Aa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Aa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#dic&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>: 18, &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>: &lt;span class="s1">&amp;#39;bob&amp;#39;&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bob
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bob
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## \#Boolean&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>过滤器也可以在双花括号中使用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> upper &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">生成文件内容
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ABC
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>jinja2的tests自然也能够在&amp;quot;双花括号&amp;quot;中使用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> testvar1 is defined &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> testvar1 is undefined &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;/opt&amp;#39;&lt;/span> is exists &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;/opt&amp;#39;&lt;/span> is file &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;/opt&amp;#39;&lt;/span> is directory &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible node2 -m template -e &amp;#34;testvar1=1 testvar2=2&amp;#34; -a &amp;#34;src=test.j2 dest=/opt/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">生成文件内容
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">False
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>lookup插件在双花括号中的使用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat /testdir/ansible/test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> lookup&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;file&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;/testdir/testfile&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> lookup&lt;span class="o">(&lt;/span>&lt;span class="s1">&amp;#39;env&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;PATH&amp;#39;&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> jinja2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible主机中的testfile内容如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat /testdir/testfile&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testfile in ansible
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">These are &lt;span class="k">for&lt;/span> testing purposes only
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成文件内容如下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testfile in ansible
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">These are &lt;span class="k">for&lt;/span> testing purposes only
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">test&lt;/span> jinja2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,{# #}的使用&lt;/p>
&lt;ul>
&lt;li>同编程语言中注释方式的使用&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="c1">#这是一行注释信息#}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>&lt;span class="c1">#&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">这是多行注释信息,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">模板被渲染以后,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">最终的文件中不会包含这些信息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">生成文件内容如下:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="jinja2模板二">#jinja2模板(二)&lt;/h2>
&lt;p>1,结合if的使用&lt;/p>
&lt;ul>
&lt;li>通用结构&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">{&lt;span class="l">% if 条件一 %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>{&lt;span class="l">% elif 条件N %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>{&lt;span class="l">% else %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nn">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>{&lt;span class="l">% endif %}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>三元运算&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span> &lt;span class="k">if&lt;/span> 2&amp;gt;1 &lt;span class="k">else&lt;/span> &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出内容如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat /opt/test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">a
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,使用set&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="nb">set&lt;/span> &lt;span class="nv">teststr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span> %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> teststr &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在jinja2中,使用set关键字定义变量,执行如下ad-hoc命令渲染模板&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ansible node2 -m template -a &lt;span class="s2">&amp;#34;src=test.j2 dest=/opt/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出内容如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat /opt/test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">abc
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,结合for的使用&lt;/p>
&lt;ul>
&lt;li>通用结构&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> 迭代变量 in 可迭代对象 %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> 迭代变量 &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 注: jinja2的控制语句大多都会遵循这个规则,即&amp;#34;XXX&amp;#34;控制语句需要使用&amp;#34;endXXX&amp;#34;作为结尾&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 默认换行方式:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> i in &lt;span class="o">[&lt;/span>3,1,7,8,2&lt;span class="o">]&lt;/span> %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> i &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible node2 -m template -a &amp;#34;src=test.j2 dest=/opt/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat /opt/test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">7&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">8&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 不换行方式:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> i in &lt;span class="o">[&lt;/span>3,1,7,8,2&lt;span class="o">]&lt;/span> -%&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> i &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>%- endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在for的结束控制符&amp;#34;%}&amp;#34;之前添加了减号&amp;#34;-&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在endfor的开始控制符&amp;#34;{%&amp;#34;之后添加到了减号&amp;#34;-&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">31782&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 不换行,但有间隔方式&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> i in &lt;span class="o">[&lt;/span>3,1,7,8,2&lt;span class="o">]&lt;/span> -%&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> i &lt;span class="o">}}{{&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>%- endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在循环每一项时,在每一项后面加入了一个空格字符串&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="m">3&lt;/span> &lt;span class="m">1&lt;/span> &lt;span class="m">7&lt;/span> &lt;span class="m">8&lt;/span> &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 不换行,但有间隔方式二&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> i in &lt;span class="o">[&lt;/span>3,1,7,8,2&lt;span class="o">]&lt;/span> -%&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> i~&lt;span class="s1">&amp;#39; &amp;#39;&lt;/span> &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>%- endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 在jinja2中,波浪符&amp;#34;~&amp;#34;就是字符串连接符,它会把所有的操作数转换为字符串,并且连接它们&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,结合for使用,循环字典&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.j2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% &lt;span class="k">for&lt;/span> key,val in &lt;span class="o">{&lt;/span>&lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span>:&lt;span class="s1">&amp;#39;bob&amp;#39;&lt;/span>,&lt;span class="s1">&amp;#39;age&amp;#39;&lt;/span>:18&lt;span class="o">}&lt;/span>.iteritems&lt;span class="o">()&lt;/span> %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> key ~ &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span> ~ val &lt;span class="o">}}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>% endfor %&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">jinja2 &lt;span class="nb">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">age:18
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">name:bob
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>5,在使用for循环时,有一些内置的特殊变量可以使用&lt;/p>
&lt;ul>
&lt;li>当前循环操作为整个循环的第几次操作,则可以借助&amp;quot;loop.index&amp;quot;特殊变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test.j2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">jinja2 test
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nv">i&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="o">[&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="m">1&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="m">7&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="m">8&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="o">]&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">i&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="s1">&amp;#39;----&amp;#39;&lt;/span> &lt;span class="o">~&lt;/span> &lt;span class="nb">loop&lt;/span>&lt;span class="nv">.index&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endfor&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">jinja2 test
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">3----1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">1----2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">7----3
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">8----4
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">2----5
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>其他的一些循环变量&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.index 当前循环操作为整个循环的第几次循环,序号从1开始&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.index0 当前循环操作为整个循环的第几次循环,序号从0开始&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.revindex 当前循环操作距离整个循环结束还有几次,序号到1结束&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.revindex0 当前循环操作距离整个循环结束还有几次,序号到0结束&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.first 当操作可迭代对象中的第一个元素时,此变量的值为true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.last 当操作可迭代对象中的最后一个元素时,此变量的值为true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.length 可迭代对象的长度&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.depth 当使用递归的循环时,当前迭代所在的递归中的层级,层级序号从1开始&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.depth0 当使用递归的循环时,当前迭代所在的递归中的层级,层级序号从0开始&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># loop.cycle() 这是一个辅助函数,通过这个函数我们可以在指定的一些值中进行轮询取值,具体参考之后的示例&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>对一段内容循环的生成指定的次数,则可以借助range函数完成&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">{%&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nv">i&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">range&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">something
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endfor&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>6,for的一些其他操作&lt;/p>
&lt;ul>
&lt;li>当for循环中没有使用if内联表达式时,也可以使用else块&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">{%&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nv">u&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">userlist&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">u.name&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span>&lt;span class="k">else&lt;/span>&lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> no one
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endfor&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 只有userlist列表为空时,才会渲染else块后的内容
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>for支持递归操作&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">{%&lt;/span> &lt;span class="k">set&lt;/span> &lt;span class="nv">dictionary&lt;/span>&lt;span class="o">={&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;:&amp;#39;bob&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s1">&amp;#39;son&amp;#39;&lt;/span>&lt;span class="o">:{&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;:&amp;#39;tom&amp;#39;&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="s1">&amp;#39;son&amp;#39;&lt;/span>&lt;span class="o">:{&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;:&amp;#39;jerry&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="nv">key&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nv">value&lt;/span> &lt;span class="k">in&lt;/span> &lt;span class="nv">dictionary.iteritems&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="k">recursive&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nv">key&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;name&amp;#39;&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">set&lt;/span> &lt;span class="nv">fathername&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">value&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endif&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nv">key&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s1">&amp;#39;son&amp;#39;&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">fathername&lt;/span> &lt;span class="o">~&lt;/span>&lt;span class="s2">&amp;#34;&amp;#39;s son is &amp;#34;&lt;/span>&lt;span class="o">~&lt;/span> &lt;span class="nv">value.name&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nb">loop&lt;/span>&lt;span class="o">(&lt;/span> &lt;span class="nv">value.iteritems&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="o">)&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endif&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endfor&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 使用了iteritems函数,在for循环的末尾,添加了recursive 修饰符,当for循环中有recursive时,表示这个循环是一个递归的循环,当需要在for循环中进行递归时,只要在需要进行递归的地方调用loop函数即可,上例中的&amp;#34;loop( value.iteritems() )&amp;#34;即为调用递归的部分,由于value也是一个字典,所以需要使用iteritems函数进行处理
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">bob&amp;#39;s son is tom
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">tom&amp;#39;s son is jerry
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="jinja2模板三">#jinja2模板(三)&lt;/h2>
&lt;p>1,jinja2模板文件中需要使用特殊字符&lt;/p>
&lt;ul>
&lt;li>最简单的方法就是直接在&amp;quot;双花括号&amp;quot;中使用引号将这类符号引起,当做纯粹的字符串进行处理&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test.j2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;{{&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;}}&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;{{ test string }}&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;{% test string %}&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;{# test string #}&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">test&lt;/span> &lt;span class="nv">string&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">test&lt;/span> &lt;span class="nv">string&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="c">{# test string #}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>如果有较大的段落时,可以借助raw块,来实现需求&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test.j2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">raw&lt;/span> &lt;span class="cp">%}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {{ test }}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {% test %}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {# test #}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {% if %}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> {% for %}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">{%&lt;/span> &lt;span class="k">endraw&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># &amp;#34;&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">raw&lt;/span> &lt;span class="cp">%}&lt;/span>&amp;#34;与&amp;#34;&lt;span class="cp">{%&lt;/span> &lt;span class="k">endraw&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">&amp;#34;之间的所有&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">&amp;#34;、&amp;#34;{% %}&amp;#34;或者&amp;#34;&lt;/span>&lt;span class="c">{# #}&lt;/span>&lt;span class="x">&amp;#34;都不会被jinja2解析,上例模板被渲染后,raw块中的符号都会保持原样
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">test&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">test&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="c">{# test #}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,在调用模板引擎时,手动的指定一些符号,这些符号可以替换默认的区块&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test.j2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">set&lt;/span> &lt;span class="nv">test&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;abc&amp;#39;&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">(( test ))
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">test&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">test1&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;test1&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 使用variable_start_string参数指定一个符号,这个符号用于替换&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">&amp;#34;中的&amp;#34;&lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="err">“&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="err">同时&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="err">可以使用&lt;/span>&lt;span class="nv">variable_end_string参数指定一个符号&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="err">这个符号用于替换&lt;/span>&lt;span class="s2">&amp;#34;{{ }}&amp;#34;&lt;/span>&lt;span class="err">中的&lt;/span>&lt;span class="s2">&amp;#34;}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span> &lt;span class="nv">ansible&lt;/span> &lt;span class="nv">node2&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nv">m&lt;/span> &lt;span class="nv">template&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="nv">a&lt;/span> &lt;span class="s2">&amp;#34;src=test.j2 dest=/opt/test variable_start_string=&amp;#39;((&amp;#39; variable_end_string=&amp;#39;))&amp;#39;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">#&lt;/span> &lt;span class="nv">cat&lt;/span> &lt;span class="nv">test&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">abc&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{{&lt;/span> &lt;span class="nv">test&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">test1&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="s1">&amp;#39;test1&amp;#39;&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 可以使用block_start_string参数指定一个符号, 这个符号用于替换&amp;#34;{% %}&amp;#34;中的&amp;#34;{% &amp;#34;,可以使用block_end_string参数指定一个符号,这个符号用于替换&amp;#34;{% %}&amp;#34;中的&amp;#34;%}&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,jinja2中也有类似函数的东西,名字叫做宏&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-jinja" data-lang="jinja">&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 最简单的宏
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># cat test.j2
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">macro&lt;/span> &lt;span class="nv">testfunc&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> test string
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endmacro&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">testfunc&lt;/span>&lt;span class="o">()&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"># 指定参数的宏,包含默认值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">&lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">macro&lt;/span> &lt;span class="nv">testfunc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="nv">tv1&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">111&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> test string
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span>&lt;span class="nv">tv1&lt;/span>&lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{%&lt;/span> &lt;span class="k">endmacro&lt;/span> &lt;span class="cp">%}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">testfunc&lt;/span>&lt;span class="o">(&lt;/span> &lt;span class="o">)&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="x"> &lt;/span>&lt;span class="cp">{{&lt;/span> &lt;span class="nv">testfunc&lt;/span>&lt;span class="o">(&lt;/span>&lt;span class="m">666&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="cp">}}&lt;/span>&lt;span class="x">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="ansible中的role">#ansible中的role&lt;/h2>
&lt;p>1,ansible官方定义的规范&lt;/p>
&lt;ul>
&lt;li>role的标准目录结构&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ tree role
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">role
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── defaults
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── main.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── files
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── handlers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── main.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── meta
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── main.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── tasks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── main.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── templates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── vars
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── main.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># tasks目录:角色需要执行的主任务文件放置在此目录中,默认的主任务文件名为main.yml,当调用角色时,默认会执行main.yml文件中的任务,也可以将其他需要执行的任务文件通过include的方式包含在tasks/main.yml文件中.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># handlers目录:当角色需要调用handlers时,默认会在此目录中的main.yml文件中查找对应的handler&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># defaults目录:角色会使用到的变量可以写入到此目录中的main.yml文件中,通常,defaults/main.yml文件中的变量都用于设置默认值,以便在你没有设置对应变量值时,变量有默认的值可以使用,定义在defaults/main.yml文件中的变量的优先级是最低的.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># vars目录:角色会使用到的变量可以写入到此目录中的main.yml文件中,看到这里你肯定会有疑问,vars/main.yml文件和defaults/main.yml文件的区别在哪里呢？区别就是,defaults/main.yml文件中的变量的优先级是最低的,而vars/main.yml文件中的变量的优先级非常高,如果你只是想提供一个默认的配置,那么你可以把对应的变量定义在defaults/main.yml中,如果你想要确保别人在调用角色时,使用的值就是你指定的值,则可以将变量定义在vars/main.yml中,因为定义在vars/main.yml文件中的变量的优先级非常高,所以其值比较难以覆盖.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># meta目录:如果你想要赋予这个角色一些元数据,则可以将元数据写入到meta/main.yml文件中,这些元数据用于描述角色的相关属性,比如 作者信息、角色主要作用等等,你也可以在meta/main.yml文件中定义这个角色依赖于哪些其他角色,或者改变角色的默认调用设定,在之后会有一些实际的示例,此处不用纠结.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># templates目录: 角色相关的模板文件可以放置在此目录中,当使用角色相关的模板时,如果没有指定路径,会默认从此目录中查找对应名称的模板文件.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># files目录:角色可能会用到的一些其他文件可以放置在此目录中,比如,当你定义nginx角色时,需要配置https,那么相关的证书文件即可放置在此目录中.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 当然,上述目录并不全是必须的,也就是说,如果你的角色并没有相关的模板文件,那么角色目录中并不用包含templates目录,同理,其他目录也一样,一般情况下,都至少会有一个tasks目录.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,调用role的方式&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">testrole test.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- hosts: node2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> roles:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - testrole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># ansible-playbook test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 调用testrole角色时,test.yml会从同级目录中查找与testrole角色同名的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 还有其他位置也可以被调用:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 1,当前系统用户的家目录中的.ansible/roles目录,即 ~/.ansible/roles目录中&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 2,同级目录中的roles目录中&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 3,修改ansible的配置文件,编辑/etc/ansible/ansible.cfg配置文件,设置roles_path选项&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">roles_path&lt;/span> &lt;span class="o">=&lt;/span> /etc/ansible/roles:/opt:/testdir
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 或者在playbook中,直接接上role的绝对路径&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,一些role使用的问题&lt;/p>
&lt;ul>
&lt;li>在默认情况下,角色中的变量是全局可访问的,可以将变量的访问域变成角色所私有的,如果想要将变量变成角色私有的,则需要设置/etc/ansible/ansible.cfg文件,将private_role_vars的值设置为yes,默认情况下,&amp;quot;private_role_vars = yes&amp;quot;是被注释掉的,将前面的注释符去掉皆可&lt;/li>
&lt;li>默认情况下,无法多次调用同一个角色,也就是说,如下playbook只会调用一次testrole角色:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- hosts: node2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> roles:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - role: testrole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - role: testrole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果想要多次调用同一个角色,有两种方法,如下:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 方法一:设置角色的allow_duplicates属性 ,让其支持重复的调用.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 方法二:调用角色时,传入的参数值不同.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 方法一需要为角色设置allow_duplicates属性,而此属性需要设置在meta/main.yml文件中,所以我们需要在testrole中创建meta/main.yml文件,写入如下内容:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat testrole/meta/main.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">allow_duplicates: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 方法二&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- hosts: node2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> roles:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - role: testrole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vars:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testvar: &lt;span class="s2">&amp;#34;zsythink&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - role: testrole
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vars:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> testvar: &lt;span class="s2">&amp;#34;zsythink.net&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,除了使用&amp;quot;-e&amp;quot;传入的变量的优先级,其他变量（包括主机变量）的优先级均低于vars/main.yml中变量的优先级&lt;/p>
&lt;p>5,调试handler方法&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat testrole/tasks/main.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- debug:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> msg: &lt;span class="s2">&amp;#34;hello testrole!&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> changed_when: &lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> notify: test_handler
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat testrole/handlers/main.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- name: test_handler
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> debug:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> msg: &lt;span class="s2">&amp;#34;this is a test handler&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常用技巧一">#常用技巧(一)&lt;/h2>
&lt;p>1,技巧一,在ansible中使用python字符串的一些特性&lt;/p>
&lt;ul>
&lt;li>ansible基于python实现,当我们在ansible中处理字符串时,能够借助一些python的字符串特性,比如,在python中可以使用中括号(方括号)截取字符串中的一部分,在ansible中也可以利用这一特性&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># cat test.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- hosts: me
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gather_facts: no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vars:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> a: &lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tasks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - debug:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> msg: &lt;span class="s2">&amp;#34;{{a[2]}}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用a[2:5]获取到a字符串的第3到第5个字符（不包含第6个字符）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用a[:5]获取到a字符串的第6个字符之前的所有字符（不包含第6个字符）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用a[5:]获取到a字符串的第6个字符之后的所有字符（包含第6个字符）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">## 之前成员运算符&amp;#34;in&amp;#34;和&amp;#34;not in&amp;#34;,也是python的字符串运算符&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">- hosts: me
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> gather_facts: no
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> vars:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> a: &lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> tasks:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> - debug:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> msg: &lt;span class="s2">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> when: &lt;span class="s2">&amp;#34;&amp;#39;va&amp;#39; in a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>运算符处理字符&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 使用加号&amp;#34;+&amp;#34;连接两个字符串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">b&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vbB67890&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{a+b}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 使用乘号&amp;#34;*&amp;#34;连续的重复输出字符串&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{a*3}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>使用find查找字符串中字符位置&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{a.find(&amp;#39;A1&amp;#39;)}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 输出如下:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="l">TASK [debug] xxxxxxxxxxxxxxxxxxxxx&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ok&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">me] =&amp;gt; {&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">&amp;#34;msg&amp;#34;: &lt;/span>&lt;span class="s2">&amp;#34;2&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>}&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 用作条件判断&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">a&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;vaA12345&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;not found&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">a.find(&amp;#39;A2&amp;#39;) == -1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2,指定任务在某个节点上运行&lt;/p>
&lt;ul>
&lt;li>通过&amp;quot;delegate_to&amp;quot;关键字,可以指定某个任务在特定的主机上执行,这个特定的主机可以是目标主机中的某一个,也可以不是目标主机中的任何一个&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2,me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/ttt&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/delegate&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">delegate_to&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/ttt1&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3,让某个人物在ansible主机上执行,不在目标主机上执行&lt;/p>
&lt;ul>
&lt;li>有两种方式,如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">## delegate_to&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2,node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/inAnsible&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">delegate_to&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/test&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## connection: local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">node2,node3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/inAnsible&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">connection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/test&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">state&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">touch&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>4,只跑一次的任务&lt;/p>
&lt;ul>
&lt;li>从网站上下载包,但目标主机共有5台&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">A,B,C,D,E&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">get_url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;http://nexus.zsythink.net/repository/testraw/testfile/test.tar&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/tmp/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 结合本机执行一起使用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">connection&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">local&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">run_once&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">copy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">src&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp/test.tar&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dest&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;/tmp&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="常用技巧二">#常用技巧(二)&lt;/h2>
&lt;p>1,向列表中追加项&lt;/p>
&lt;ul>
&lt;li>如下内容:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">l1&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">l2&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">b&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">l3&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ l1 + l2 }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">l3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 直接列表相加&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ tlist + [&amp;#39;a&amp;#39;] }}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># jinja2的语法,完成上述追加元素的过程&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{% set tlist = tlist + [&amp;#39;a&amp;#39;] %}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 使用extend()追加&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{% set tlist = tlist + [&amp;#39;a&amp;#39;] %}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># append追加&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">1&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ tlist.append(&amp;#39;a&amp;#39;) }}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2, 在列表中插入项&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 使用insert()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ tlist.insert(1,&amp;#39;a&amp;#39;) }}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>3, 在列表中删除项&lt;/p>
&lt;ul>
&lt;li>如下示例:&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 使用pop&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">msg&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{tlist.pop(2)}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 使用remove()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">3&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{{ tlist.remove(&amp;#39;b&amp;#39;) }}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># for循环匹配删除&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>- &lt;span class="nt">hosts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">me&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">gather_facts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">no&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">vars&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;a&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;b&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="m">11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;a11&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;1a&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="s1">&amp;#39;11&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tasks&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">set_fact&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tlist&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;{%for i in tlist%}{% if 11 in tlist%}{{tlist.remove(11)}}{%endif%}{%endfor%}{{tlist}}&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">debug&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">var&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">tlist&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/ops/" term="ops" label="ops"/><category scheme="https://ruisum.top/tags/ansible/" term="ansible" label="ansible"/><category scheme="https://ruisum.top/tags/ops/" term="ops" label="ops"/></entry><entry><title type="text">learning bash via abs</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/notes/bash%E5%AD%A6%E4%B9%A0/"/><id>https://ruisum.top/tech/basics/notes/bash%E5%AD%A6%E4%B9%A0/</id><updated>2020-03-20T10:18:17+08:00</updated><published>2018-03-20T10:18:17+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">通过advanced-bash-scripting学习bash的笔记内容</summary><content type="html">&lt;h2 id="变量及操作符">变量及操作符&lt;/h2>
&lt;h3 id="1-特殊字符使用">#1. 特殊字符使用&lt;/h3>
&lt;pre tabindex="0">&lt;code># --&amp;gt; 注释(不包括#!)
--&amp;gt; 变量替换使用 echo ${PATH#*:}
; --&amp;gt; 命令分隔符,用于连接多个命令
;; --&amp;gt; 用于终止一个case语句
. --&amp;gt; 等同于source命令
--&amp;gt; 可作为隐藏文件的文件名开头
--&amp;gt; 相对路径的表示,当前路径和父目录路径
--&amp;gt; 匹配单个字符
&amp;#39;&amp;#39; --&amp;gt; 忽略所有特殊字符,全部引用
&amp;#34;&amp;#34; --&amp;gt; 忽略除去`,$,\外所有的特殊字符,部分引用
, --&amp;gt; 连接一串运算,只返回最后一个的结果
let &amp;#34;t2 = ((a = 9, 15 / 3))&amp;#34; ## set &amp;#34;a=9&amp;#34; and &amp;#34;t2 = 15 / 3&amp;#34;
--&amp;gt; for file in /{,usr/}bin/*calc ## 与{}一起使用,用作选择的一种,简略代码
--&amp;gt; 变量替换中的大小写替换
echo ${var,} --&amp;gt; 第一个字符小写
echo ${var,,} --&amp;gt; 所有字符小写
echo ${var^} --&amp;gt; 第一个字符大写
echo ${var^^} --&amp;gt; 所有字符大写
\ --&amp;gt; 脱意符,除去特殊字符的含义,\X等效与&amp;#39;X&amp;#39;
` --&amp;gt; 运算符,将命令的输出结果作为内容传递给变量
: --&amp;gt; 空命令,no op,执行结果返回值为0
--&amp;gt; 在if/then记过中作为占位符使用
if condition;then :;else action;done
--&amp;gt; 为需要二进制文件存在的场合提供占位符
: ${username=`whoami`} | : ${1?&amp;#34;Usage: $0 ARGUMENT&amp;#34;}
--&amp;gt; 作为切片使用,同python中的切片
${var:1} ${var:3:3}
--&amp;gt; 同重定向一同使用,用于清空一个文件而不更改其权限,如果文件不存在,则创建该文件
: &amp;gt; /tmp/testfile
--&amp;gt; 可以用作注释符使用,但与#不同,:仍然会检查注释内容中命令是否正确
--&amp;gt; 用作/etc/passwd文件和$PATH的分隔符
! --&amp;gt; 更改命令返回值,反转test命令的含义
--&amp;gt; ${!variable},获取变量$variable的变量值
--&amp;gt; 调用历史命令,在脚本中无法使用
* --&amp;gt; 通配符,用以指代在给定的目录下的任何文件
--&amp;gt; 在正则表达式中,表示任意数量的(包括0)xxx
--&amp;gt; 运算符,**便是乘方
? --&amp;gt; 在双括号结构中,可以用做判断
(( var0 = var1&amp;lt;98?9:21 ))
--&amp;gt; 变量替换,当parameter不存在是,打印err_msg内容,返回值为1,两种形式的差别仅当parameter被声明且为空值时有差别
${parameter?err_msg}, ${parameter:?err_msg}
--&amp;gt; 通配符,给定目录中的单字符文件名,在扩展正则表达式中代表单个字符
$ --&amp;gt; 变量替换
--&amp;gt; 锚定符,代表行尾
${} --&amp;gt; 参数替换
$* --&amp;gt; 位置参数
$@ --&amp;gt; 位置参数
$? --&amp;gt; 命令返回值
$$ --&amp;gt; 进程ID
() --&amp;gt; 小括号中的一组命令开启一个子shell,在脚本当中,其他部分无法读取括号中定义的变量
--&amp;gt; 用于数组的初始化
Array=(e1 e2 e3)
{} --&amp;gt; 大括号展开
echo {file1,file2}\ :{\ A,&amp;#34; B&amp;#34;,&amp;#39; C&amp;#39;}
--&amp;gt; 扩展大括号展开
echo {a..e}
echo {1..10..2} 显示10以内的奇数，步长为2
--&amp;gt; 代码块,内联组(inline group), anonymous function, the variate in the inline group \
can be seen in the scripts anywhere
{ read line1
read line2
} &amp;lt; /tmp/passwd line1和line2可以直接读取passwd中的文件内容
在{}中的代码块,一般情况下不会开启一个新的子shell
--&amp;gt; {}可以用在非标准的for循环当中
for ((n=1; n&amp;lt;=10; n++)); { echo -n &amp;#34;* $n *&amp;#34;; }
--&amp;gt; many commands can be used in a {} section, just like a function, return the outcome
--&amp;gt; 占位符, use with xargs; &amp;#39;ls . | xargs -i -t cp ./{} $1&amp;#39;
{} \; --&amp;gt; 该结构用在find架构当中,不作为shell的关键字存在
The &amp;#34;;&amp;#34; ends the -exec option of a find command sequence. It needs to be escaped to protect it from interpretation by the shell.
[] --&amp;gt; test命令,[是test命令的内置指令(test的同义字),并不是test的链接
--&amp;gt; 数组元素,用于展开各个序号的数组元素
--&amp;gt; 正则表达式中使用,用于表示一个序列
&amp;#34;[B-Pk-y]&amp;#34;
$[] --&amp;gt; 运算符,等效与(())
echo $[$a+$b]
$[...] --&amp;gt; 整数扩展符, 可用于整数的计算; &amp;#39;echo $[3*5]&amp;#39;
(())--&amp;gt; 运算符
(( a = 23 )); (( a++ ))
&amp;lt;&amp;gt; --&amp;gt; 重定向,包含&amp;gt;,&amp;amp;&amp;gt;,&amp;gt;&amp;amp;,&amp;gt;&amp;gt;,&amp;lt;,&amp;lt;&amp;gt;
--&amp;gt; &amp;amp;&amp;gt; 把标准输出和标准错误都重定向
--&amp;gt; &amp;gt;&amp;amp;2重定向到标准错误
--&amp;gt; &amp;gt;&amp;gt; 追加
--&amp;gt; [i]&amp;lt;&amp;gt;filename 打开文件filename读写,分配文件描述符i给文件,若i不存在,则默认使用stdin
----------------------------------------------------------------
#!/bin/bash
## example 1-1
lock_file=/tmp/$(basename $0).lock
exec 300&amp;lt;&amp;gt;$lock_file
if ! flock -x -n 300; then
echo &amp;#34;already running&amp;#34;
else
echo &amp;#34;starting...&amp;#34;
sleep 30
fi
----------------------------------------------------------------
--&amp;gt; (command)&amp;gt; 进程替换, 暂且记下,后续有具体讲解
--&amp;gt; &amp;lt;&amp;lt; here document
--&amp;gt; &amp;lt;&amp;lt;&amp;lt; here string
--&amp;gt; askii 比较,对比文本字符顺序
\&amp;gt; --&amp;gt; 单词边界,同时还有\&amp;lt;
grep &amp;#39;\&amp;lt;the\&amp;gt;&amp;#39; textfile
[[]]--&amp;gt; test,比[]更灵活
| --&amp;gt; 管道,将命令的输出作为输入传递给下一个命令
echo ls -l | sh ## 可以作为一种方式执行命令
--&amp;gt; 管道运行在子shell当中,所以不能在管道中定义变量
variable=&amp;#34;initial_value&amp;#34;;echo &amp;#34;new_value&amp;#34; | read variable;echo &amp;#34;variable = $variable&amp;#34; # variable = initial_value
&amp;gt;| --&amp;gt; 强制重定向,强制清空文件内容,即使已经设置了noclobber属性已经设置了
|| --&amp;gt; 或逻辑运算符,在test结构中使用
&amp;amp; --&amp;gt; 在后台运行任务,在脚本中,命令甚至是循环结构可以运行在后台中
for i in {1..10};do echo -n &amp;#34;$i&amp;#34;; done &amp;amp;
脚本中包含后台运行的命令可能会导致脚本hang死,可以设置补救措施;
a,在后台命令后面增加一个wait命令可以解决该问题
b,在将结果重定向至/dev/null或者一个文件也可
ls -l &amp;amp;; ehco &amp;#34;Done.&amp;#34;; wait
&amp;amp;&amp;amp; --&amp;gt; 逻辑和运算符,用于test结构中
- --&amp;gt; 选项前缀, ls -l
--&amp;gt; 从stdin重定向输入或从stdout重定向输入
1, (cd /source/directory &amp;amp;&amp;amp; tar cf - . ) | (cd /dest/directory &amp;amp;&amp;amp; tar xpvf -)
2, bunzip2 -c linux-2.6.16.tar.bz2 | tar xvf -
3, grep Linux file1 | diff file2 -
--&amp;gt; 前一个工作目录,由$OLDPWD变量保存
--&amp;gt; 减号,用作逻辑运算符
-- --&amp;gt; 命令长格式选项前缀
ls --all
--&amp;gt; 与set结合使用,设置位置参数
----------------------------------------------------------------
variable=&amp;#34;one two three four five&amp;#34;
set -- $variable;
first_param=$1
second_param=$2
shift; shift
echo &amp;#34;first parameter = $first_param&amp;#34; # one
echo &amp;#34;second parameter = $second_param&amp;#34; # two
----------------------------------------------------------------
= --&amp;gt; 赋值运算符;a=28
+ --&amp;gt; 逻辑运算符,相加
--&amp;gt; 正则表达式,1各或者多个
--&amp;gt; 特定命令的参数前缀,+为开启,-为关闭,如set命令
% --&amp;gt; 逻辑运算符,余
~ --&amp;gt; 家目录,由$HOME保存
~+ --&amp;gt; 当前工作目录,由$PWD保存
~- --&amp;gt; 上一个工作目录,由$OLDPWD保存
=~ --&amp;gt; 正则表达式中匹配
variable=&amp;#34;This is a fine mess.&amp;#34;
if [[ &amp;#34;$variable&amp;#34; =~ T.........fin*es* ]]
^ --&amp;gt; 行开头
--&amp;gt; 参数替换中,大写替换
^^ --&amp;gt; 参数替换中,大写替换
&amp;#39; &amp;#39; --&amp;gt; 空格,用作命令或者是变量的分隔
&lt;/code>&lt;/pre>&lt;h3 id="2-变量及参数">#2. 变量及参数&lt;/h3>
&lt;pre>&lt;code>1, 变量名是变量值的占位符,获取变量值的操作称之为变量替换
2, 变量裸露的情况(没有前缀'$'符)
--&amp;gt; 变量声明或者是赋值的时候
--&amp;gt; 取消变量unset
--&amp;gt; 被export
--&amp;gt; 逻辑运算表达式(())中
3, 变量的赋值可以在如下结构中
--&amp;gt; '='中
--&amp;gt; read结构
--&amp;gt; 类似for var in xx的循环结构中
4, 变量引用中
--&amp;gt; 使用$a,不用&amp;quot;&amp;quot;括起来,移除变量中的tab和newline
--&amp;gt; 使用&amp;quot;$a&amp;quot;,保存whitespace(空白)
5, 使用$(...)替换`...`来进行变量赋值
6, shell变量没有类型
7, 特殊类型的变量
--&amp;gt; 本地变量: 只在代码块或者是函数中可见
--&amp;gt; 环境变量: 影响shell动作的变量,如PATH或者是PS1等
--&amp;gt; 位置参数: $0,$1这些,$0表示脚本;$*和$@代表所有的位置参数
8, 每次新建shell,在shell中会创建相应的环境变量
9, 使用export命令来将本地变量变成环境变量
--&amp;gt; 脚本中,变量只能export给子子进程,也即在脚本中声明的变量无法作用于脚本之外
10,shift命令的作用是重新赋值位置参数,每执行一次,位置参数向左偏移一位
--&amp;gt; 默认可调用10个
--&amp;gt; $0不参与
--&amp;gt; 被重新赋值的变量是move,不是copy(只有两个位置参数,shift后,$2不存在)
--&amp;gt; shift可接受数字,表示每次偏移多少
--&amp;gt; 如下示例:
----------------------------------------------------------------
# 脚本名称不变,使用软链接给创建多个脚本名称,调用不同的名称,执行不同的功能
ln -s /usr/local/bin/wh /usr/local/bin/wh-ripe
ln -s /usr/local/bin/wh /usr/local/bin/wh-apnic
ln -s /usr/local/bin/wh /usr/local/bin/wh-tucows
E_NOARGS=75
if [ -z &amp;quot;$1&amp;quot; ]; then
echo &amp;quot;Usage: `basename $0` [domain-name]&amp;quot;
exit $E_NOARGS
fi
case `basenam $0` in # Or: case ${0##*/} in
&amp;quot;wh&amp;quot; ) whois $1@whois.tucows.com;;
&amp;quot;wh-ripe&amp;quot; ) whois $1@whois.ripe.net;;
&amp;quot;wh-apnic&amp;quot; ) whois $1@whois.apnic.net;;
&amp;quot;wh-cw&amp;quot; ) whois $1@whois.cw.net;;
* ) echo &amp;quot;Usage: `basename $0` [domain-name]&amp;quot;;;
esac
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;h3 id="3--引用">#3. 引用&lt;/h3>
&lt;pre>&lt;code>1, grep '[Ff]irst' *.txt;在''中的特殊情况,这里并不会去除[]的作用,而是作为被保护的内容传递给grep
2, &amp;quot;&amp;quot;保护除过$,\,`的其他符号
3, 可以引用\n
quote=$'\116'
echo -e '\'${quote,}
4, $'...'可以将8进制或者16进制数转换成ascii字符保存到变量中
quote=$'\042'
5, echo -e用于转换特殊含义字符
&lt;/code>&lt;/pre>
&lt;h3 id="4--测试">#4. 测试&lt;/h3>
&lt;pre>&lt;code>测试结构:
1, if/then/elif/else结构,结合if后面的返回值确定执行顺序
--&amp;gt; if结构不仅仅只能判断[]结构,后面可借命令
--&amp;gt; if和then都是关键字参数,关键字开启代码块,在同一行开启一行新语句,就语句必须终结
2, []结构,等效于test
3, [[]]关键字结构,类比于test
4, ((...))和let ...结构,运算结果为非零时,返回值为0;运算结果为零时,返回值为非零
5, test是bash的内建命令,因此在一个脚本中使用test,使用的并不是/usr/bin/test二进制文件
--&amp;gt; 在脚本中需要使用/usr/bin/test命令,需要写全路径
6, 使用[[]]替换[]做测试结构可以防止很多脚本中的逻辑错误
--&amp;gt; &amp;amp;&amp;amp;, ||, &amp;lt;, &amp;gt;可以用在[[]]中,但无法在[]中使用
--&amp;gt; 8进制,10进制,16进制可在[[]]中进行比较,[]会报错
7, (())也可用于测试,展开并对括号中的变量进行运算;当运算结果非零或为0或者'true';当运算结果为零时返回1或者'false'
8, 文件测试,如下不同场景返回true
--&amp;gt; -e 文件存在
--&amp;gt; -f 是普通文件,不是目录或设备文件
--&amp;gt; -s 大小不为零
--&amp;gt; -d 是个目录
--&amp;gt; -b 块设备
--&amp;gt; -c 字符设备
--&amp;gt; -p 管道文件
----------------------------------------------------------------
# 示例内容:
function show_input_type()
{
[ -p /dev/fd/0 ] &amp;amp;&amp;amp; echo PIPE || echo STDIN
}
show_input_type &amp;quot;Input&amp;quot; # STDIN
echo &amp;quot;Input&amp;quot; | show_input_type # PIPE
----------------------------------------------------------------
--&amp;gt; -h 符号链接
--&amp;gt; -L 符号链接
--&amp;gt; -S socket文件
--&amp;gt; -t 文件绑定一个终端设备
[ -t 0 ]用来测试脚本执行是不是在终端上
--&amp;gt; -r/w/x/g/u/k 检测文件是否具有相应的权限
--&amp;gt; -O/G你是文件所属者(组)
--&amp;gt; f1 -nt f2 文件f1比f2新
--&amp;gt; f1 -ot f2 文件f1比f2旧
--&amp;gt; f1 -ef f2 文件f1和f2是指向同一个文件的硬链接
--&amp;gt; ! 非
&lt;/code>&lt;/pre>
&lt;h3 id="5--操作符">#5. 操作符&lt;/h3>
&lt;pre>&lt;code>--&amp;gt; bash不明白浮点数的运算,会将浮点数当作字符处理;需要处理浮点数的运算,可以使用bc操作
--&amp;gt; 逻辑运算符:
1, &amp;amp;&amp;amp; 和/与
--&amp;gt; if [ $condition1 ] &amp;amp;&amp;amp; [ $condition2 ] Same as: if [ $condition1 -a $condition2 ]
2, ! 非
--&amp;gt; if [ ! -f $file ]
3, || 或
--&amp;gt; if [ $condition1 ] || [ $condition2 ] Same as: if [ $condition1 -o $condition2 ]
4, &amp;amp;&amp;amp;/||在判断结构中的使用
--&amp;gt; if [[ $a -eq 24 &amp;amp;&amp;amp; $b -eq 24 ]] works.
--&amp;gt; if [ &amp;quot;$a&amp;quot; -eq 24 &amp;amp;&amp;amp; &amp;quot;$b&amp;quot; -eq 47 ] error
5, 进制换算
--&amp;gt; 可以使用$((...))结构对各个进制数进行换算
echo $((0x9abc))
--&amp;gt; 在shell中,默认使用10进制,当把8进制或者16进制数使用let赋值存储在变量中,打印后变为10进制
let 'hex = 0x32';echo $hex
--&amp;gt; 不限制进制数格式,可以使用let进行换算,可以使用10 digits + 26 lowercase characters + 26 uppercase characters + @ + _
echo $((36#zz)) $((2#10101010)) $((16#AF16)) $((53#1aA)) # 1295 170 44822 3375
--&amp;gt; 双括号结构:
同let,(())结构允许逻辑展开和运算
1, (( a = 23 )) 赋值,等号左右两侧都要有空格
2, (( --a ))和(( a-- ))都可以进行运算
3, (( t = a&amp;lt;45?7:11 ))
echo &amp;quot;if a &amp;lt; 45;then t = 7;else t = 11;fi&amp;quot; # a = 23
echo &amp;quot;t = $t &amp;quot; # t = 7
--&amp;gt; 运算符优先顺序:
if [ &amp;quot;$v1&amp;quot; -gt &amp;quot;$v2&amp;quot; -o &amp;quot;$v1&amp;quot; -lt &amp;quot;$v2&amp;quot; -a -e &amp;quot;$filename&amp;quot; ]
# Unclear what's going on here...,不能有超过三个的叠加存在(-a/-o)
if [[ &amp;quot;$v1&amp;quot; -gt &amp;quot;$v2&amp;quot; ]] || [[ &amp;quot;$v1&amp;quot; -lt &amp;quot;$v2&amp;quot; ]] &amp;amp;&amp;amp; [[ -e &amp;quot;$filename&amp;quot; ]]
# Much better -- the condition tests are grouped in logical sections.
&lt;/code>&lt;/pre>
&lt;h3 id="6--其他变量视角">#6. 其他变量视角&lt;/h3>
&lt;p>&lt;strong>内部变量&lt;/strong>&lt;/p>
&lt;pre>&lt;code>1, $BASHPID(返回当前shell),不同于$$(返回父shell),虽然大部分时候两个值相同
echo $BASHPID;(echo $BASHPID) ## output different
echo $$;(echo $$) ## output same
2, $DIRSTACK,在目录栈中的第一个值,被pushd和popd影响
内置变量响应dirs命令,dirs会显示栈中所有的信息
3, $EDITOR,默认被脚本引用的编辑器,一般是vi或者emacs,nano
4, $EUID,有效UID
5, $FUNCNAME,在函数中,显示当前函数的名字
6, $GROUPS,当前用户所属用户组,是一个数组
echo ${GROUPS[1]}
7, $HOSTTYPE,检查当前系统的硬件类型
echo $HOSTTYPE # i686
8, $IFS,内部边界分隔符;这个变量决定bash怎样判断词组,字符串的边界
--&amp;gt; 默认为空白符(空格,tab,新行)
--&amp;gt; 这个值可以被更改
bash -c 'set w x y z; IFS=&amp;quot;:-;&amp;quot;; echo &amp;quot;$*&amp;quot;' ## w:x:y:z
--&amp;gt; 在设置IFS时需要注意,IFS对待空格和其他字符不一样
var=&amp;quot; a b c &amp;quot;使用for循环打印出来时,会变成三行,而不是和','一样,变为多行(超过三行)
对于使用在awk中的FS也存在同样的问题
9, $PATH,二进制文件路径
10,$PIPESTATUS,保存上一条命令的执行返回值
11,$PPID,父进程的PID号
12,$PROMPT_COMMAND,保存将要被执行的命令(是否为该含义待查)
13,$PS1,主提示符,命令行界面显示
14,$PS2,备提示符,在需要输入额外输入是显示,显示为'&amp;gt;'
15,$PS3,select loop中使用
16,$PS4,set -x后界面显示的提示符'+'
17,$PWD,pwd命令显示结果
18,$REPLY,当且仅当上一条read命令无变量时,保存read的变量值
19,$SECONDS,当前脚本运行了多长时间
while [ &amp;quot;$SECONDS&amp;quot; -le &amp;quot;$TIME_LIMIT&amp;quot; ]
20,$SHELLOPTS,保存set -o的options项
21,$TMOUT,设置为一个非零值之后,超时会自动登出
--&amp;gt; 可以在脚本中设置超时,在一定时间内未输入,则退出
----------------------------------------------------------------
TMOUT=3
# Prompt times out at three seconds.
echo &amp;quot;What is your favorite song?&amp;quot;
echo &amp;quot;Quickly now, you only have $TMOUT seconds to answer!&amp;quot;
read song
if [ -z &amp;quot;$song&amp;quot; ]
then
song=&amp;quot;(no answer)&amp;quot;
# Default response.
fi
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>位置参数&lt;/strong>&lt;/p>
&lt;pre>&lt;code>1, $0,$1,$2...,位置参数,从命令行传递给脚本,函数;或者使用set进行设置
2, $#,位置参数或者命令行参数的数目
3, $*,所有的位置参数,视为一个word,需要使用&amp;quot;&amp;quot;外加
4, $@,同$*,但每个参数单独使用&amp;quot;&amp;quot;括起来,同样也需要使用&amp;quot;&amp;quot;括起来
--&amp;gt; 使用IFS和$@,$*时需要注意
--&amp;gt; $@和$*仅在使用双引号引用的时候有差别
5, $!,上一个跑在后台的job的进程号
--&amp;gt; 可用于任务控制
{ sleep ${TIMEOUT}; eval 'kill -9 $!' &amp;amp;&amp;gt; /dev/null; }
--&amp;gt; 另一种方式
----------------------------------------------------------------
TIMEOUT=30
count=0
possibly_hanging_job &amp;amp; {
while ((count &amp;lt; TIMEOUT )); do
eval '[ ! -d &amp;quot;/proc/$!&amp;quot; ] &amp;amp;&amp;amp; ((count = TIMEOUT))'
# /proc is where information about running processes is found.
# &amp;quot;-d&amp;quot; tests whether it exists (whether directory exists).
# So, we're waiting for the job in question to show up.
((count++))
sleep 1
done
eval '[ -d &amp;quot;/proc/$!&amp;quot; ] &amp;amp;&amp;amp; kill -15 $!'
# If the hanging job is running, kill it.
}
----------------------------------------------------------------
6, $_,映射为执行的上一个命令最后一项内容
--&amp;gt; du &amp;gt; /dev/null;echo $_ # du
--&amp;gt; ls -al &amp;gt; /dev/null;echo $_ # -al
7, $?,命令,函数或者是脚本的执行状态返回值
8, $$,脚本自己的pid号,常用于创建惟一的temp文件,相较于mktemp使用更简单
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>变量归类&lt;/strong>&lt;/p>
&lt;pre>&lt;code>1, 使用declare/typeset完成变量定义
2, declare/typeset属于内建命令
3, -r,设置只读变量
--&amp;gt; declare -r var1=xx 等效于 readonly var1=xx
4, -i,设置为整数变量
--&amp;gt; 设置为整数变量,允许直接进行运算,不需要expr结构
----------------------------------------------------------------
n=6/3
echo &amp;quot;n = $n&amp;quot;
declare -i n
echo &amp;quot;n = $n&amp;quot;
# n = 6/3
# n = 2
----------------------------------------------------------------
5, -a,设置为数组变量
6, -f,显示函数
--&amp;gt; declare -f后未接任何参数,显示所有的函数;可以用在ssh远程连接,传递函数使用
--&amp;gt; declare -f func_name仅显示func_name函数内容
7, -x,等效于export
8, 使用declare声明一个变量会限制其scope
9, 使用declare可以非常方便的辨别变量,尤其是在辨认数组时
--&amp;gt; declare | grep HOME
--&amp;gt; Colors=([0]=&amp;quot;purple&amp;quot; [1]=&amp;quot;reddish-orange&amp;quot; [2]=&amp;quot;light green&amp;quot;);declare |grep Colors
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>变量操作&lt;/strong>&lt;/p>
&lt;pre>&lt;code>--&amp;gt; bash允许大量字符串操作,部分属于变量替换操作,部分属于UNIX的expr功能
1, 字符串长度
--&amp;gt; ${井号string},显示变量string的长度
--&amp;gt; expr length $string,使用expr功能显示字符串长度
--&amp;gt; expr &amp;quot;$string&amp;quot; : '.*',同样是显示变量string中字符串的长度值
2, substring从string开头匹配的字符数,substring是正则表达式
--&amp;gt; expr match &amp;quot;$string&amp;quot; '$substring'
stringZ=abcABC123ABCabc
--&amp;gt; expr &amp;quot;$string&amp;quot; : '$substring'
echo `expr match &amp;quot;$stringZ&amp;quot; 'abc[A-Z]*.2'` # 8
echo `expr &amp;quot;$stringZ&amp;quot; : 'abc[A-Z]*.2'` # 8
3, substring在string中第一次匹配的下标号
--&amp;gt; expr index $string $substring
echo `expr index &amp;quot;$stringZ&amp;quot; 1c`
# 'c' (in #3 position) matches before '1'.
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>变量取出&lt;/strong>&lt;/p>
&lt;pre>&lt;code> 1, 切片用法
--&amp;gt; ${string:position} # 从position处开始抽取string,此处的position和length都可以是变量
--&amp;gt; ${string:position:length} # 从position处抽取length个string字符
----------------------------------------------------------------
stringZ=abcABC123ABCabc
echo ${stringZ:7} # 23ABCabc
echo ${stringZ:7:3} # 23A
echo ${stringZ:(-4)} # Cabc 区别于${stringZ:-4},这种形式等效于${string:-default}
----------------------------------------------------------------
--&amp;gt; ${*:position} # 从position处开始取位置参数
--&amp;gt; ${@:position} # 同上一条
--&amp;gt; ${*:position:length} # 同string 的用法,换成位置参数
--&amp;gt; expr substr $string $position $length # expr用法,切片用法
--&amp;gt; expr match &amp;quot;$string&amp;quot; '\($substring\)' # 获取第一次匹配的substring内容,substring为正则表达式
--&amp;gt; expr &amp;quot;$string&amp;quot; : '\($substring\)' # 同上
----------------------------------------------------------------
echo `expr match &amp;quot;$stringZ&amp;quot; '\(.[b-c]*[A-Z]..[0-9]\)'` # abcABC1
echo `expr &amp;quot;$stringZ&amp;quot; : '\(.[b-c]*[A-Z]..[0-9]\)'` # abcABC1
echo `expr &amp;quot;$stringZ&amp;quot; : '\(.......\)'` # abcABC1
----------------------------------------------------------------
--&amp;gt; expr match &amp;quot;$string&amp;quot; '.*\($substring\)' # 获取尾部第一次匹配的substring内容,substring为正则表达式
--&amp;gt; expr &amp;quot;$string&amp;quot; : '.*\($substring\)' # 同上
echo `expr match &amp;quot;$stringZ&amp;quot; '.*\([A-C][A-C][A-C][a-c]*\)'` # ABCabc
echo `expr &amp;quot;$stringZ&amp;quot; : '.*\(......\)'` # ABCabc
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>变量置换&lt;/strong>&lt;/p>
&lt;pre>&lt;code> file=/dir1/dir2/dir3/my.file.txt
--&amp;gt; ${file#*/} # 拿掉第一条/及其左边的字串：dir1/dir2/dir3/my.file.txt
--&amp;gt; ${file##*/} # 拿掉最后一条/及其左边的字串：my.file.txt
--&amp;gt; ${file#*.} # 拿掉第一个.及其左边的字串：file.txt
--&amp;gt; ${file##*.} # 拿掉最后一个.及其左边的字串：txt
--&amp;gt; ${file%/*} # 拿掉最后一条/及其右边的字串：/dir1/dir2/dir3
--&amp;gt; ${file%%/*} # 拿掉第一条/及其右边的字串：（空值）
--&amp;gt; ${file%.*} # 拿掉最后一个.及其右边的字串：/dir1/dir2/dir3/my.file
--&amp;gt; ${file%%.*} # 拿掉第一个.及其右边的字串：/dir1/dir2/dir3/my
mv $filename ${filename%$1}$2 # 可以用作重命名
--&amp;gt; ${file:0:5} # 提取最左边的5个字节：/dir1
--&amp;gt; ${file:5:5} # 提取第5个字节右边的连续5个字节：/dir2
--&amp;gt; ${file-my.file.txt} # 假如$file没有设定，则使用my.file.txt作传回值。（空值及非空值时不作处理）
--&amp;gt; ${file:-my.file.txt} # 假如$file没有设定或为空值，则使用my.file.txt作传回值。（非空值时不作处理）
${username-`whoami`} # when username has not been set, return the value of result of whoami
filename=${1:-DEFAULT_FILENAME}
--&amp;gt; ${file+my.file.txt} # 假如$file设为空值或非空值，均使用my.file.txt作传回值。（没设定时不作处理）
--&amp;gt; ${file:+my.file.txt} # 若$file为非空值，则使用my.file.txt作传回值。（没设定及空值时不作处理）
--&amp;gt; ${file=my.file.txt} # 若$file没设定，则使用my.file.txt作传回值，同时将$file赋值为my.file.txt。\
（空值及非空值时不作处理）
--&amp;gt; ${file:=my.file.txt} # 若$file没设定或为空值，则使用my.file.txt作传回值，同时将$file赋值为my.file.txt。\
（非空值时不作处理）
--&amp;gt; ${file?my.file.txt} # 若$file没设定，则将my.file.txt输出至STDERR,用于变量报错设置（空值及非空值时不作处理）
--&amp;gt; ${file:?my.file.txt} # 若$file没设定或为空值，则将my.file.txt输出至STDERR。（非空值时不作处理）
--&amp;gt; 要分清楚unset与null及non-null这三种赋值状态。一般而言，: 与null有关，若不带 : 的话，null不受影响，若带 : 则连null \
也受影响。
--&amp;gt; ${var,,} # 更改var的大小写,将$var中的大写字符转换成小写
--&amp;gt; ${井号var} # get the length of the variate of var
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>变量替换&lt;/strong>&lt;/p>
&lt;pre>&lt;code> stringZ=abcABC123ABCabc
--&amp;gt; echo ${stringZ/abc/xyz} # xyzABC123ABCabc,将开头的abc替换成xyz
--&amp;gt; echo ${stringZ//abc/xyz} # xyzABC123ABCxyz,将字符串中的所有abc替换成xyz
abc和xyz都可以使用变量替换
--&amp;gt; echo ${stringZ/abc} # ABC123ABCabc,不包含replacement时,则是直接删除第一处匹配内容
--&amp;gt; echo ${stringZ//abc} # ABC123ABC,同上,删除所有的匹配内容
--&amp;gt; echo ${stringZ/#abc/XYZ} # XYZABC123ABCabc,匹配前端的第一个,进行替换
--&amp;gt; echo ${stringZ/%abc/XYZ} # abcABC123ABCXYZ,匹配后端的最后一个,进行替换
--&amp;gt; echo ${!varprefix*} # 匹配所有已声明已xyz开头的变量
--&amp;gt; echo ${!varprefix@} # 匹配所有已声明已xyz开头的变量
abc23=something_else
b=${!abc*}
echo &amp;quot;b = $b&amp;quot; # b = abc23
c=${!b} # Now, the more familiar type of indirect reference.
echo $c
awk的使用,等效变量替换
String=23skidoo1
# 012345678 Bash 变量替换中bash的下标计算方式
# 123456789 awk 变量替换中awk的下标计算方式
--&amp;gt; echo | awk '{ print substr(&amp;quot;'&amp;quot;${String}&amp;quot;'&amp;quot;,3,4) }' # skid
前面使用空echo的作用是,所谓伪输入,不需要填写输入文件
&lt;/code>&lt;/pre>
&lt;h3 id="7-循环和分支结构">#7. 循环和分支结构&lt;/h3>
&lt;p>&lt;strong>for循环&lt;/strong>&lt;/p>
&lt;pre>&lt;code>for arg in [list]; do command;done
--&amp;gt; for循环和set结合使用,会很方便,以下是例子
--------------------------------------------------------------------------------
set `uname -a`; for item in $(seq $#); do echo ${!item}; done
for planet in &amp;quot;Mercury 36&amp;quot; &amp;quot;Venus 67&amp;quot; &amp;quot;Earth 93&amp;quot; &amp;quot;Mars 142&amp;quot; &amp;quot;Jupiter 483&amp;quot;; do
set -- $planet
echo &amp;quot;$1 $2,000,000 miles from the sun&amp;quot;
done
--------------------------------------------------------------------------------
--&amp;gt; set中使用的--,避免难预测的bug,当后面的变量为空或者是以'-'开头
--&amp;gt; [list]可以是一个变量,保存了多个值,用于for循环使用
--&amp;gt; [list]也可以使用*通配符
--&amp;gt; 无[list]项也可,循环使用的内容为位置参数
for a; do echo -n &amp;quot;$a &amp;quot;; done # 写入脚本后,执行脚本时,后接参数或者不接参数,得出结果不同
--&amp;gt; [list]内容同样可为命令替换后的结果
for name in $(awk 'BEGIN{FS=&amp;quot;:&amp;quot;}{print $1}' &amp;lt; &amp;quot;$PASSWORD_FILE&amp;quot; ) # 系统上所有用户
for word in $(generate_list) # 函数运行结果
--&amp;gt; for loop结束后,在done后面可直接使用管道进行操作,例如排序等
for file in &amp;quot;$( find $directory -type l )&amp;quot;;do echo &amp;quot;$file&amp;quot;; done | sort # 对循环执行后的结果进行排序
--&amp;gt; C风格的for循环,需要用到(());
LIMIT=10; for ((a=1; a &amp;lt;= LIMIT ; a++)); do echo $a; done
for ((a=1, b=1; a &amp;lt;= LIMIT ; a++, b++)); do echo -n &amp;quot;$a-$b &amp;quot;; done
--&amp;gt; 一般情况下,do和done分割for循环的结构,但在特定情况下,省略do和done
----------------------------------------------------------------
for((n=1; n&amp;lt;=10; n++))
{ # No do
echo -n &amp;quot;* $n *&amp;quot;
} # No done!
for n in 1 2 3
{ echo -n &amp;quot;$n &amp;quot;; } # 在经典的for结构中,花括号中需要包含;,用于结尾
----------------------------------------------------------------
--&amp;gt; E_NOARGS=65 --&amp;gt; The standards of variate naming, exit-because-no-arguments
--&amp;gt; read command read reads a line every time, in the function 'while read i j', i stands for the first word, j stands for the rest of this line
--&amp;gt; the difference between return and exit
若在script里，用exit RV来指定其值，若没指定，在结束时以最后一道命令之RV为值。
若在function里，则用return RV来代替exit RV即可。
若在loop里，则用break
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>while循环&lt;/strong>&lt;/p>
&lt;pre>&lt;code>相对于for循环,while循环更适合用于不确定condition情况下进行的循环
while [condition]; do command(s); done
--&amp;gt; 在while循环中可能存在多个条件,但只有最后一个条件决定什么时候终止循环
----------------------------------------------------------------
while echo &amp;quot;previous-variable = $previous&amp;quot;
echo
previous=$var1
[ &amp;quot;$var1&amp;quot; != end ]; do ...
----------------------------------------------------------------
--&amp;gt; 同for循环一样,while可以接收C风格的条件格式
----------------------------------------------------------------
while (( a &amp;lt;= LIMIT ))
do
echo -n &amp;quot;$a&amp;quot;
((a += 1)) # let &amp;quot;a+=1&amp;quot;
done
----------------------------------------------------------------
--&amp;gt; while的条件可以直接接函数
----------------------------------------------------------------
condition(){
((t++))
if [ $t -lt 5 ]; then
return 0 # true
else
return 1 # false
fi
}
while condition
----------------------------------------------------------------
--&amp;gt; 与read一起结合使用,得到while read结构
cat file | while read line # 同时是以管道作为输入内容
--&amp;gt; while可以在done后使用'&amp;lt;'来作为内容输入
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>until循环&lt;/strong>&lt;/p>
&lt;pre>&lt;code>循环体在顶部,直到条件正确,才退出执行循环结构中的内容;与while循环相反
until [ condition-is-true ]; do command(s); done
until循环结构格式类同于for循环
--&amp;gt; 条件为真才退出
----------------------------------------------------------------
END_CONDITION=end
until [ &amp;quot;$var1&amp;quot; = &amp;quot;$END_CONDITION&amp;quot; ]
# Tests condition here, at top of loop.
do
echo &amp;quot;Input variable #1 &amp;quot;
echo &amp;quot;($END_CONDITION to exit)&amp;quot;
read var1
echo &amp;quot;variable #1 = $var1&amp;quot;
echo
done
----------------------------------------------------------------
--&amp;gt; until同样接受C风格的判断条件,使用双括号的格式(())
until (( var &amp;gt; LIMIT ))
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>嵌套循环&lt;/strong>&lt;/p>
&lt;pre>&lt;code>一个循环结构属于另一个循环结构的构成部分,称为嵌套循环
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>循环控制&lt;/strong>&lt;/p>
&lt;pre>&lt;code>影响循环行为的命令
break;continue
--&amp;gt; break的作用为终止当前循环
--&amp;gt; continue的作用为跳过当前这次的循环,在该分支中,跳过该分支后面需要执行的命令和操作
----------------------------------------------------------------
while [ $a -le &amp;quot;$LIMIT&amp;quot; ]; do
a=$(($a+1))
if [ &amp;quot;$a&amp;quot; -eq 3 ] || [ &amp;quot;$a&amp;quot; -eq 11 ]; then # Excludes 3 and 11.
continue # Skip rest of this particular loop iteration.
fi
echo -n &amp;quot;$a&amp;quot; # This will not execute for 3 and 11.
done
while [ &amp;quot;$a&amp;quot; -le &amp;quot;$LIMIT&amp;quot; ]; do
a=$(($a+1))
if [ &amp;quot;$a&amp;quot; -gt 2 ]; then
break # Skip entire rest of loop.
fi
echo -n &amp;quot;$a&amp;quot;
done
----------------------------------------------------------------
--&amp;gt; break可以后接参数,单个的break表示终止当前循环;break N表示终止几层循环
--&amp;gt; continue也可以接参数,单个的continue表示此次循环,continue N会终止当前层级的循环,开始下一次的循环,从N层开始
&lt;/code>&lt;/pre>
&lt;p>&lt;strong>测试和分支&lt;/strong>&lt;/p>
&lt;pre>&lt;code>case和select结构不属于循环结构,但他们通过条件判断引导程序流向
--&amp;gt; case对标的是C/C++中的switch结构;case可以说是简化版的if/elif/elif/.../else结构,case可以用于设置程序接口
----------------------------------------------------------------
case &amp;quot;$variable&amp;quot; in
&amp;quot;$condition1&amp;quot;)
command...
;;
&amp;quot;$condition2&amp;quot;)
command...
;;
esac
----------------------------------------------------------------
--&amp;gt; 判断后接参数
----------------------------------------------------------------
E_PARAM=1
case &amp;quot;$1&amp;quot; in
&amp;quot;&amp;quot;) echo &amp;quot;Usage: ${0##*/} &amp;lt;filename&amp;gt;&amp;quot;; exit $E_PARAM;; # 提示信息,精简化
-*) FILENAME=./$1;; # 如果后面所接参数包含破折号,将其替换为./$1,这样后面的命令嗯就不会把其当做$1
* ) FILENAME=$1;;
esac
----------------------------------------------------------------
--&amp;gt; while和case一起使用:
----------------------------------------------------------------
while [ $# -gt 0 ]; do
case &amp;quot;$1&amp;quot; in
-d|--debug)
DEBUG=1
;;
-c|--conf)
CONFFILE=&amp;quot;$2&amp;quot;
shift
if [ ! -f $CONFFILE ]; then
echo &amp;quot;Error: Supplied file doesn't exist!&amp;quot;
exit $E_CONFFILE
fi
;;
esac
shift
done
----------------------------------------------------------------
--&amp;gt; 做匹配函数:
----------------------------------------------------------------
match_string (){
MATCH=0
E_NOMATCH=90
PARAMS=2
E_BAD_PARAMS=91
[ $# -eq $PARAMS ] || return $E_BAD_PARAMS
case &amp;quot;$1&amp;quot; in
&amp;quot;$2&amp;quot;) return $MATCH;;
* ) return $E_NOMATCH;;
esac
}
----------------------------------------------------------------
--&amp;gt; select继承自ksh,同样是一个可用于构建入口的工具
----------------------------------------------------------------
select variable [in list]
do
command...
break
done
----------------------------------------------------------------
--&amp;gt; select结构提示用户输入给定的选项之一,默认情况下使用环境变量PS3作为提示符,但这个可以被改变
----------------------------------------------------------------
PS3='Choose your favorite vegetable: ' # Sets the prompt string.
# Otherwise it defaults to #? .
select vegetable in &amp;quot;beans&amp;quot; &amp;quot;carrots&amp;quot; &amp;quot;potatoes&amp;quot; &amp;quot;onions&amp;quot; &amp;quot;rutabagas&amp;quot;
do
echo
echo &amp;quot;Your favorite veggie is $vegetable.&amp;quot;
echo &amp;quot;Yuck!&amp;quot;
echo
break # What happens if there is no 'break' here?
done
----------------------------------------------------------------
--&amp;gt; 如果结构中list不存在,select会使用传递给脚本或包含select结构的函数的位置参数$@;可类比for variable [in list]
----------------------------------------------------------------
PS3='Choose your favorite vegetable: '
choice_of(){
select vegetable # [in list] omitted, so 'select' uses arguments passed to function.
do
echo
echo &amp;quot;Your favorite veggie is $vegetable.&amp;quot;
echo &amp;quot;Yuck!&amp;quot;
echo
break
done
}
choice_of beans rice carrots radishes rutabaga spinach
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;h3 id="8-命令替换">#8. 命令替换&lt;/h3>
&lt;pre>&lt;code>命令替换重新单个甚至多个命令的输出结果,逐字的将输出内容传递给另一个上下文
--&amp;gt; 命令的输出结果可以是传递给其他命令的参数,可以是设置变量,甚至生成for循环需要使用的内容参数
--&amp;gt; 命令替换有两种形式:`commands`,$(commands),两种方式等效
--&amp;gt; 命令替换生成一个子shell
--&amp;gt; 命令替换可能把输出结果分片
----------------------------------------------------------------
COMMAND `echo a b` # 2 args: a and b
COMMAND &amp;quot;`echo a b`&amp;quot; # 1 arg: &amp;quot;a b&amp;quot;
note: 有时命令替换会出现不期望的结果
mkdir 'dir with trailing newline
'
cd &amp;quot;`pwd`&amp;quot; # error inform
cd &amp;quot;$PWD&amp;quot; # works fine
----------------------------------------------------------------
--&amp;gt; 使用echo输出命令替换厚的未括变量,echo会将换行符去除
--&amp;gt; 命令替换允许使用重定向或者cat来获取文件内容作为变量内容
echo ` &amp;lt;$0` # 输出脚本内容
--&amp;gt; 不要将一个长文本内容作为值赋给一个变量，也不要将二进制文件内容作为变量的值
--&amp;gt; 没有缓冲溢出的情况出现，这是翻译性语言的特性，相较编译语言提供更多的保护
--&amp;gt; 变量声明甚至可以通过一个循环结构来赋值
----------------------------------------------------------------
variable1=`for i in 1 2 3 4 5
do
echo -n &amp;quot;$i&amp;quot;
done`
----------------------------------------------------------------
--&amp;gt; 命令替换使用$()替换掉反引号的使用
允许这种形式：content=$(&amp;lt;$File2)
--&amp;gt; $()的形式允许多重嵌套
&lt;/code>&lt;/pre>
&lt;h3 id="9-运算展开">#9. 运算展开&lt;/h3>
&lt;pre>&lt;code>算数展开提供了一个强大的工具，用于在脚本中进行算数运算；常用的有反引号、双括号、let
变种：
--&amp;gt; 使用反引号的算数运算，常常和expr结合使用
z=`expr $z + 3`
--&amp;gt; 算数展开使用双括号和let，反引号的结构已经被(())，$(())和let替换
z=$(($z+3))或者z=$((z+3))也可以
(( n += 1 ))是正确的；(( $n += 1 ))是错误的
let z=z+3是正确的；let &amp;quot;z += 3&amp;quot;也可以
&lt;/code>&lt;/pre>
&lt;h2 id="linux命令">linux命令&lt;/h2>
&lt;h3 id="1-内部命令和内部指令">#1. 内部命令和内部指令&lt;/h3>
&lt;p>​ 内建指令是指包含在bash工具集内部的命令；内建命令的作用一方面是为了提升性能，常用于需要fork新进程的命令，另一方面是出于某些命令需要直接访问shell内部&lt;/p>
&lt;pre>&lt;code>--&amp;gt; 父进程获取到子进程的pid后，可以传递参数给子进程，反过来则不行；这个需要注意，出现这种问题时，一般难以排查
----------------------------------------------------------------
PIDS=$(pidof sh $0) # Process IDs of the various instances of this script.
P_array=( $PIDS )
echo $PIDS
let &amp;quot;instances = ${井号P_array[*]} - 1&amp;quot;
echo &amp;quot;$instances instance(s) of this script running.&amp;quot;
echo &amp;quot;[Hit Ctl-C to exit.]&amp;quot;;
echo
sleep 1
sh $0
exit 0
----------------------------------------------------------------
--&amp;gt; 一般来说，bash内建指令不会自动fork新的进程，外部命令或者管道过滤时会fork新进程
--&amp;gt; 内建指令可能和系统命令有同样的名字，但bash会使用内建命令，echo和/bin/echo并不一样
----------------------------------------------------------------
echo &amp;quot;This line uses the \&amp;quot;echo\&amp;quot; builtin.&amp;quot;
/bin/echo &amp;quot;This line uses the /bin/echo system command.&amp;quot;
----------------------------------------------------------------
--&amp;gt; 关键字是预留字、符号，或者是操作符；关键字对shell来说具有特殊的含义，是shell的语句块的构成部分；关键字属于bash的硬编码部分，不同于内建指令，关键字是命令的子单元
&lt;/code>&lt;/pre>
&lt;h3 id="2-io命令">#2. IO命令&lt;/h3>
&lt;pre>&lt;code>echo：打印表达式或者变量到标准输出
--&amp;gt; 和-e使用，用来打印脱意符
--&amp;gt; 默认情况下，每个echo会打印一个终端换行符，当与-n一起使用时，会将换行符省略掉
--&amp;gt; echo `command`的形式会删除所有由command生成的换行符
变量$IFS默认情况下降'\n'作为分隔符之一，bash将换行符后面的内容作为参数传递给echo，echo将这些参数打印出来，使用空格分隔
printf：格式化打印，增强型的echo，是一个C语言中printf()函数的限制型变体，部分内容与原函数使用不同
printf format-string... parameter...
--&amp;gt; 格式化输出
----------------------------------------------------------------
declare -r PI=3.14159265358979
printf &amp;quot;Pi to 2 decimal places = %1.2f&amp;quot; $PI
printf &amp;quot;Pi to 9 decimal places = %1.9f&amp;quot; $PI
----------------------------------------------------------------
--&amp;gt; 格式化输出错误内容很实用
----------------------------------------------------------------
# 注意$'strings...'的格式，在此处与%s的使用
error()
{
printf &amp;quot;$@&amp;quot; &amp;gt;&amp;amp;2 # Formats positional params passed, and sends them to stderr.
echo
exit $E_BADDIR
}
cd $var || error $&amp;quot;Can't cd to %s.&amp;quot; &amp;quot;$var&amp;quot;
----------------------------------------------------------------
read：通过标准输入读取变量值，动态的通过键盘获取值，与-a选项一起使用时可获取数组变量
--&amp;gt; read通常情况下，'\'会去除换行的含义，当与-r参数一同使用时，'\'按照原意进行输出
--&amp;gt; -s：不显示输入内容到屏幕上
--&amp;gt; -n：设置仅接收多少字符，-n同样能接受特殊按键，但需要清楚特殊按键对应的字符，但不能获取到回车的字符
----------------------------------------------------------------
arrowup='\[A'
arrowdown='\[B'
arrowrt='\[C'
arrowleft='\[D'
insert='\[2'
delete='\[3'
----------------------------------------------------------------
--&amp;gt; -p：在接收输入内容前，打印后续内容到屏幕上，作为提示用
--&amp;gt; -t：用在设置超时时间的场景下
--&amp;gt; -u：获取目标文件的文件描述符
--&amp;gt; read命令同样可以通过重定向到标准输入的文件来读取变量，如果文件内容超过一行，则只有第一行内容会被用于变量读取；
--&amp;gt; 当read后接的参数多余一个时，默认会以空格（或者连续空格）作为分隔符来读取变量，此行为可通过更改环境变量$IFS来改变
----------------------------------------------------------------
read var1 &amp;lt; /tmp/file1
read var1 var2 &amp;lt; /tmp/file1
while read line; do echo $line; done &amp;lt; /tmp/file1
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;h3 id="3-文件系统命令">#3. 文件系统命令&lt;/h3>
&lt;pre>&lt;code>cd：切换路径命令
--&amp;gt; 使用-P参数，忽略链接文件
--&amp;gt; cd -,切换到上一个目录，$OLDPWD变量保存的内容
--&amp;gt; 使用两个斜杠时，cd命令会出现我们不期望的情况
----------------------------------------------------------------
# 以下的问题在命令行和脚本中都存在，需要注意
$ cd //
$ pwd
//
----------------------------------------------------------------
pwd：显示当前工作目录路径
--&amp;gt;使用该命令的效果同$PWD完全相同
pushd,popd,dirs：这个命令集合是一个工作目录书签工具，用于在工作目录中有序的来回切换；后进先出的堆栈方式处理工作目录组，允许对这个堆栈进行各种不同的操作
--&amp;gt; pushd dir-name把目录dir-name放入到到堆栈中（栈顶），同时切换当前目录到dir-name中去
--&amp;gt; popd 将目录栈顶的目录从栈中移除，同时将工作目录切换至此时的栈顶目录中去
--&amp;gt; dirs 列出栈中的目录列表，popd和pushd会引用到dirs
在脚本中需要切换多个目录工作时，使用这个命令集可以方便的进行管理，$DIRSTACK数组包含有目录的列表栈内容
&lt;/code>&lt;/pre>
&lt;h3 id="4-变量操作命令">#4. 变量操作命令&lt;/h3>
&lt;pre>&lt;code>let：let命令执行对变量的算数运算操作，在很多种情况下，let相当于简化版的expr命令
----------------------------------------------------------------
let a=11; let a=a+5
let &amp;quot;a &amp;lt;&amp;lt;= 3&amp;quot;
let &amp;quot;a += 5&amp;quot;
let a++(++a)
let &amp;quot;t = a&amp;lt;7?7:11&amp;quot;
----------------------------------------------------------------
--&amp;gt; 使用let命令，在特定情况下，命令返回值和通常情况不同
----------------------------------------------------------------
$ var=0
$ echo $?
0
$ let var++
$ echo $?
1
----------------------------------------------------------------
eval：
eval arg1 [arg2] ... [argN]
结合一个表达式或者一列表达式中的参数，是这些参数联合；所有在表达式中的变量都会被展开，得出的字符串被转换为命令
----------------------------------------------------------------
$ command_string=&amp;quot;ps ax&amp;quot;
$ eval &amp;quot;$command_string&amp;quot;
----------------------------------------------------------------
--&amp;gt; 每次调用eval都会强制重新评估其参数
----------------------------------------------------------------
$ a=&amp;quot;$b&amp;quot;
$ b=&amp;quot;$c&amp;quot;
$ c=d
$ echo $a
$ eval echo $a
$ eval eval echo $a
----------------------------------------------------------------
----------------------------------------------------------------
params=$#
param=1
while [ &amp;quot;$param&amp;quot; -le &amp;quot;$params&amp;quot; ]
do
echo -n &amp;quot;Command-line parameter &amp;quot;
echo -n \$$param
echo -n &amp;quot; = &amp;quot;
eval echo \$$param
(( param ++ ))
done
----------------------------------------------------------------
--&amp;gt; 使用eval命令有一定的风险，如果存在替换的方案，尽量使用替换方案来实现目的；像是eval $COMMANDS，在命令的返回结果中可能存在危险的内容如rm -rf *等
set：
set命令可用于更改脚本内部的变量值或者脚本选项，用法之一是可以设置option flags来更改脚本执行的动作；另一个用法是可以是将命令的输出结果设置为位置参数。
----------------------------------------------------------------
set `uname -a`
----------------------------------------------------------------
--&amp;gt; 当单独使用set命令时，终端显示所有的环境变量以及已经设置的变量
--&amp;gt; set后接--,表示将一个变量的内容设置为位置参数,当--后没有任何参数时,表示取消所有的位置参数
----------------------------------------------------------------
variable=&amp;quot;one two three four five&amp;quot;
set -- $variable
first_param=$1
second_param=$2
shift; shift
remaining_params=&amp;quot;$*&amp;quot;
echo &amp;quot;first parameter = $first_param&amp;quot; # one
echo &amp;quot;second parameter = $second_param&amp;quot; # two
echo &amp;quot;remaining parameters = $remaining_params&amp;quot; # three four five
set --
first_param=$1
second_param=$2
echo &amp;quot;first parameter = $first_param&amp;quot; # (null value)
echo &amp;quot;second parameter = $second_param&amp;quot; # (null value)
----------------------------------------------------------------
unset:
unset命令删除一个shell变量,将变量的值设置为null,改命令不影响位置参数
--&amp;gt; 大多数情况下,使用unset设置过的变量和undeclare设置过的变量是等效的;但对于${parameter:-default}还是有区分的
export:
export命令将变量的值声明至所有由脚本生成的子shell或者是shell,令其都可使用;在开机启动脚本中使用是export一个重要使用场景,有初始化环境的作用,让后启用的脚本能够继承环境变量
--&amp;gt; 父进程是没有办法获取到子进程的变量的
--&amp;gt; 大部分情况下,export var=xxx和var=xxx;export var是等效的,但在某些情况下有差别
----------------------------------------------------------------
bash$ export var=(a b); echo ${var[0]}
(a b)
bash$ var=(a b); export var; echo ${var[0]}
a
----------------------------------------------------------------
declare/typeset:
这两个命令用来设定或者限制变量的属性
readonly:
等效于declare -r,将一个变量设置为只读,或者实际效用为设置成一个常量,这个命令类似于C中的const
getopsts:
这个强大的命令解析命令行参数,传递给脚本使用,这个命令类似于C中的外部命令getopt,getopt库函数;命令允许传递和连接多个选项,并且为脚本联合多个参数,如下所示:
----------------------------------------------------------------
scriptname -abc -e /usr/local
----------------------------------------------------------------
--&amp;gt; getopts使用两个默认的变量:
$OPTIND(OPTion INDex)是参数指针
$OPTARG(OPTion ARGument)是参数指定一个选项
选项名声明时后接冒号表明这个选项有一个指定的参数
--&amp;gt; getopts结构一般会同while循环使用,每次处理一个选项和参数,然后变量$OPTIND指针指向下一个值
命令行传递给脚本的参数前面必须接'-',存在'-'的前缀,让getopts识别命令行参数为选项;实际上,没有'-'时,getopts不会去处理这些参数,直接当作缺失选项处理
getopts模板与while循环有些许差别
getopts结构是外部命令getopt命令的替换
----------------------------------------------------------------
while getopts &amp;quot;:abcde:fg&amp;quot; Option
# Initial declaration.
# a, b, c, d, e, f, and g are the options (flags) expected.
# The : after option 'e' shows it will have an argument passed with it.
do
case $Option in
a ) # Do something with variable 'a'.
b ) # Do something with variable 'b'.
...
e) # Do something with 'e', and also with $OPTARG,
# which is the associated argument passed with option 'e'.
...
g ) # Do something with variable 'g'.
esac
done
shift $(($OPTIND - 1)) # Move argument pointer to next.
# All this is not nearly as complicated as it looks &amp;lt;grin&amp;gt;.
----------------------------------------------------------------
----------------------------------------------------------------
NO_ARGS=0
E_OPTERROR=85
if [ $# -eq &amp;quot;$NO_ARGS&amp;quot; ] # Script invoked with no command-line args?
then
echo &amp;quot;Usage: `basename $0` options (-mnopqrs)&amp;quot;
exit $E_OPTERROR
# Exit and explain usage.
# Usage: scriptname -options
# Note: dash (-) necessary
fi
while getopts &amp;quot;:mnopq:rs&amp;quot; Option
do
case $Option in
m) echo &amp;quot;Scenario #1: option -m- [OPTIND=${OPTIND}]&amp;quot;;;
n | o ) echo &amp;quot;Scenario #2: option -$Option- [OPTIND=${OPTIND}]&amp;quot;;;
p) echo &amp;quot;Scenario #3: option -p- [OPTIND=${OPTIND}]&amp;quot;;;
q) echo &amp;quot;Scenario #4: option -q- with argument \&amp;quot;$OPTARG\&amp;quot; [OPTIND=${OPTIND}]&amp;quot;;;
r | s ) echo &amp;quot;Scenario #5: option -$Option-&amp;quot;;;
*) echo &amp;quot;Unimplemented option chosen.&amp;quot;;; # Default.
esac
done
shift $(($OPTIND - 1))
exit $?
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;h3 id="5-脚本行为命令">#5. 脚本行为命令&lt;/h3>
&lt;pre>&lt;code>source/. (点命令)
这个命令,当在脚本外使用时,作用为调用一个脚本;
在脚本内部使用,source file-name的作用为加载file-name的内容;
--&amp;gt; source一个文件,将该文件的代码加载进入当前脚本(作用内容于C里面的#include作用)
--&amp;gt; 最终结果是,一个被source过的文件,代码就像在当前脚本物理上包含了被source过的文件的代码内容;当多个脚本使用同一个数据文件时,这种方式很有用
--&amp;gt; 如果被source的文件本身是一个可执行脚本,当source后,脚本会执行,然后将控制权交回调用其的脚本;一个可执行的source文件可以使用return来实现目的
--&amp;gt; 参数(可选)可以传递给被source的文件作为位置参数
----------------------------------------------------------------
source $filename $args1 $args2
----------------------------------------------------------------
--&amp;gt; 脚本甚至可以在执行时source自己,随然可能没有什么实际的应用场景
----------------------------------------------------------------
#!/bin/bash
MAXPASSCNT=100
echo -n &amp;quot;$pass_count &amp;quot;
let &amp;quot;pass_count += 1&amp;quot;
while [ &amp;quot;$pass_count&amp;quot; -le $MAXPASSCNT ]; do
. $0
done
echo
exit 0
----------------------------------------------------------------
exit
无条件的终止一个脚本;exit命令可以选择性的后接一个整数参数,用作脚本的exit返回状态
--&amp;gt; 最简单的方式是直接使用exit 0, 指明此次运行成功
--&amp;gt; 如果一个脚本以未接参数的exit作为结尾,那么脚本的返回值则为最后一条命令的返回值,等效于exit $?
--&amp;gt; 一个exit命令也可以用于终止一个子shell
exec
这个shell内建命令替换当前进程为一个指定的命令
--&amp;gt; 通常情况下,当shell遇到一个命令时,会fork一个子进程来执行该命令,当使用exec命令时,shell不再fork子进程,并且exec调用的命令替换了shell
--&amp;gt; 当exec在脚本中使用时,当exec调用的命令结束时,会强制退出脚本
----------------------------------------------------------------
#!/bin/bash
exec echo &amp;quot;Exiting \&amp;quot;$0\&amp;quot; at line $LINENO.&amp;quot; # Exit from script here.
# $LINENO is an internal Bash variable set to the line number it's on.
# The following lines never execute.
echo &amp;quot;This echo fails to echo.&amp;quot;
exit 99
----------------------------------------------------------------
----------------------------------------------------------------
#!/bin/bash
# self-exec.sh
# Note: Set permissions on this script to 555 or 755,
# then call it with ./self-exec.sh or sh ./self-exec.sh.
echo
echo &amp;quot;This line appears ONCE in the script, yet it keeps echoing.&amp;quot;
echo &amp;quot;The PID of this instance of the script is still $$.&amp;quot;
# Demonstrates that a subshell is not forked off.
echo &amp;quot;==================== Hit Ctl-C to exit ====================&amp;quot;
sleep 1
exec $0 # Spawns another instance of this same script
#+ that replaces the previous one.
echo &amp;quot;This line will never echo!&amp;quot; # Why not?
exit 99 # Will not exit here!
# Exit code will not be 99!
----------------------------------------------------------------
--&amp;gt; exec同时还具有重新声明文件描述符的功能,例如:exec &amp;lt;zzz-file用文件zzz-file内容替换标准输入
--&amp;gt; 在find命令中使用的-exec选项和shell内建命令exec不同,需要注意
shopt
这个命令允许在运行的过程中更改shell选项,通常出现在bash启动文件中,同样在脚本中可以使用,需要version 2以上版本的bash
----------------------------------------------------------------
shopt -s cdspell
# Allows minor misspelling of directory names with 'cd'
# Option -s sets, -u unsets.
cd /hpme # Oops! Mistyped '/home'.
pwd # /home
# The shell corrected the misspelling.
----------------------------------------------------------------
caller
在一个函数中放置一个caller命令,会打印出是在第几行调用这个函数,不再函数中使用没有作用
----------------------------------------------------------------
#!/bin/bash
function1 ()
{
caller 0 # Tell me about it.
}
function1
----------------------------------------------------------------
--&amp;gt; caller命令在被source后,同样能够打印出在被source文件中的位置,类似于一个函数,这个被称作为子程序
--&amp;gt; caller在debug中比较有用
&lt;/code>&lt;/pre>
&lt;h3 id="6-常用命令">#6 常用命令&lt;/h3>
&lt;pre>&lt;code>true
一个返回成功(0)的退出状态码命令,不做任何其他动作
常用与无限循环结构中: while true
false
一个返回失败(非0)退出状态码命令,不做任何其他动作
常用场景同样为无限循环结构: while false
type[cmd]
类似于which的外部命令,type命名用于鉴定cmd命令;
--&amp;gt; 不同于which,type是一个内建命令
--&amp;gt; type使用-a参数时,用于鉴定关键字和内建命令,同样定位命令在系统上的唯一名称
----------------------------------------------------------------
bash$ type '['
[ is a shell builtin
bash$ type -a '['
[ is a shell builtin
[ is /usr/bin/[
bash$ type type
type is a shell builtin
----------------------------------------------------------------
--&amp;gt; 在测试一个命令是否存在时,type命令非常有用,可以在判断结构中使用
----------------------------------------------------------------
bash$ type bogus_command &amp;amp;&amp;gt;/dev/null
bash$ echo $?
1
----------------------------------------------------------------
hash [cmds]
记录指定命令的path名--在shell的哈希表中--因此shell或者脚本不需要逐次的查找$PATH变量目录来调用这些命令
--&amp;gt; 当hash命令后不接参数时,则仅仅将已经hash的命令列出来
--&amp;gt; 使用-r参数是清空hash表操作
bind
内建命令bind显示或者修改readline关键子绑定
readline:The readline library is what Bash uses for reading input in an interactive shell.
help
获取简短的shell内建命令帮助信息,这个命令whatis的副本,但是是一个内建命令
help命令在bash v4后显示的信息详尽很多
&lt;/code>&lt;/pre>
&lt;h3 id="7-job控制命令">#7. job控制命令&lt;/h3>
&lt;pre>&lt;code>该部分内容的部分命令需要后接任务鉴定符作为参数
jobs
列出当前在后台运行的所有job,给出job数字,没有ps有用
--&amp;gt; job和process的概念很容易混淆;一些特定的内建命令,像kill,disown,wait后接job号或者进程号作为参数;但fg,bg和jobs命令则仅接收任务号(job号)作为参数
----------------------------------------------------------------
bash$ sleep 100 &amp;amp;
[1] 1384
bash $ jobs
[1]+ Running sleep 100 &amp;amp;
----------------------------------------------------------------
上面的命令及其输出中,数字1是任务号(由当前shell获取的job号),1384是进程号(由系统获取),杀掉job/process,使用kill %1或者kill 1384
disown
移除shell中table内正在运行的job
----------------------------------------------------------------
$ jobs
[1] Running sleep 1000 &amp;amp;
[2] Running sleep 1000 &amp;amp;
[3]- Running sleep 1000 &amp;amp;
[4]+ Running sleep 1000 &amp;amp;
$ disown
$ jobs
[1] Running sleep 1000 &amp;amp;
[2]- Running sleep 1000 &amp;amp;
[3]+ Running sleep 1000 &amp;amp;
----------------------------------------------------------------
fg,bg
fg命令将一个运行在后台的任务切换至前台. bg命令重新启动一个挂起的任务,并在后台执行
--&amp;gt; 如果没有指定任务号,则默认fg和bg会作用与当前正在running状态的任务
wait
暂时挂起脚本的执行过程,直到所有的后台运行任务已经结束,或者是作为参数的任务号/进程号已经终止,返回wait后接命令的返回状态码
--&amp;gt; 使用wait的场景通常为:指定的后台任务已完成,再继续执行脚本后续内容
----------------------------------------------------------------
#!/bin/bash
ROOT_UID=0 # Only users with $UID 0 have root privileges.
E_NOTROOT=65
E_NOPARAMS=66
if [ &amp;quot;$UID&amp;quot; -ne &amp;quot;$ROOT_UID&amp;quot; ]; then
echo &amp;quot;Must be root to run this script.&amp;quot; # &amp;quot;Run along kid, it's past your bedtime.&amp;quot;
exit $E_NOTROOT
fi
if [ -z &amp;quot;$1&amp;quot; ]; then
echo &amp;quot;Usage: `basename $0` find-string&amp;quot;
exit $E_NOPARAMS
fi
echo &amp;quot;Updating 'locate' database...&amp;quot;
echo &amp;quot;This may take a while.&amp;quot;
updatedb /usr &amp;amp; # Must be run as root.
wait
# Don't run the rest of the script until 'updatedb' finished.
# You want the the database updated before looking up the file name.
locate $1
# Without the 'wait' command, in the worse case scenario,
#+ the script would exit while 'updatedb' was still running,
#+ leaving it as an orphan process.
exit 0
----------------------------------------------------------------
--&amp;gt; wait也可以后接一个任务识别号作为参数,例如: wait %1或者wait $PPID
--&amp;gt; 在一个脚本中,使用&amp;amp;符号让命令在后台执行可能会导致脚本hang死直到按下enter键,这种情况主要出现在需要输出到标准输出的命令,这种情况的出现比较让人烦;在这种命令后接wait
----------------------------------------------------------------
#!/bin/bash
# test.sh
ls -l &amp;amp;
echo &amp;quot;Done.&amp;quot;
wait
bash$ ./test.sh
Done.
[bozo@localhost test-scripts]$ total 1
-rwxr-xr-x 1 bozo bozo 34 Oct 11 15:09 test.sh
----------------------------------------------------------------
将命令输出写入到文件或者/dev/null中也可以解决这个问题
suspend
改命令与ctrl+Z有相似的效果,但是这个命令是挂起shell(shell的父进程应该在合适的时候恢复该shell的运行)
logout
退出一个登录shell,后面可借参数n,指定登出shell的状态返回码
times
显示进程执行用时数据,区别于time命令;得出的信息价值有限,对于profile和基础shell脚本并不通用
kill
强制终止一个进程,通过传递合适的终止信号
----------------------------------------------------------------
#!/bin/bash
# self-destruct.sh
kill $$ # Script kills its own process here.
# Recall that &amp;quot;$$&amp;quot; is the script's PID.
echo &amp;quot;This line will not echo.&amp;quot;
# Instead, the shell sends a &amp;quot;Terminated&amp;quot; message to stdout.
exit 0 # Normal exit? No!
# After this script terminates prematurely,
#+ what exit status does it return?
#
# sh self-destruct.sh
# echo $?
# 143
#
# 143 = 128 + 15
# TERM signal
----------------------------------------------------------------
--&amp;gt; kill -l列出所有支持的信号列表(包含在文件/usr/include/asm/signal.h)
--&amp;gt; kill -9是一个确认杀死,通常使用在单独使用kill命令无法杀死的场景下,有时,kill -15也能生效
--&amp;gt; 僵尸进程是一个子进程已经终止,但父进程还没有被kill,无法被一个loged-on用户杀死--你无法杀死一个已经死的物件--但是init迟早会清理这些进程
killall
killall命令通过名字杀死一个运行进程,而不是通过pid
--&amp;gt; 如果同时存在多个命令运行实例,则执行killall命令会将所有的这些实例全部杀死
--&amp;gt; 此处的killall是指在/usr/bin/下的命令,而不是/etc/rc.d/init.d下的killall脚本
command
command命令禁用接在其后的命令的alias和function
--&amp;gt; 这个命令是三个影响脚本命令执行的指令之一,其他两个分别是builtin和enable
builtin
使用命令builtin BUILTIN_COMMAND将命令BUILTIN_COMMAND当作一个shell内建命令来执行;临时禁用与调用命令同名的functions或者是系统外部命令
enable
改命令能够启用或者禁用一个shell内建命令
例如: 命令enable -n kill禁用了shell内建命令kill,当bash继续调用kill时,调用的是外部命令kill
--&amp;gt; enable的-a选项列出所有的shell内建命令,指示这些命令是否被enable
--&amp;gt; -f filename选项让enable加载一个内建命令作为一个共享库模块从一个正确编译的二进制文件
&lt;/code>&lt;/pre>
&lt;h3 id="8-任务识别符">#8. 任务识别符&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">内容&lt;/th>
&lt;th style="text-align:left">含义&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">%N&lt;/td>
&lt;td style="text-align:left">任务号&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%S&lt;/td>
&lt;td style="text-align:left">引用以S开头的job&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%?S&lt;/td>
&lt;td style="text-align:left">引用包含S的job&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%%&lt;/td>
&lt;td style="text-align:left">当前job(最后一个在前台停止的任务或者是最后一个在后台启动的任务)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%+&lt;/td>
&lt;td style="text-align:left">当前job(最后一个在前台停止的任务或者是最后一个在后台启动的任务)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">%-&lt;/td>
&lt;td style="text-align:left">上一个job&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">$!&lt;/td>
&lt;td style="text-align:left">上一个后台任务&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="9-外部过滤器程序及命令">#9. 外部过滤器,程序及命令&lt;/h3>
&lt;p>标准的UNIX命令让shell脚本更加灵活,shell脚本的能力通过多个系统命令和shell指令的整合来实现&lt;/p>
&lt;h3 id="10-基础命令">#10. 基础命令&lt;/h3>
&lt;pre>&lt;code>ls
基础文件罗列命令.很容易理解这个命令的低调;
用-R参数是递归的罗列出当前目录下的内容
用-S参数是按照文件的大小来排序
用-t参数是按照文件的修改时间来排序
用-v参数是文件名逆序罗列(依照数值顺序)
用-b参数是显示脱意字符
用-i参数是显示inode信息
--&amp;gt; ls返回一个非零返回值,当目标文件不存在时
cat/tac
cat是concatenate的缩写,获取一个文件的内容,显示到标准输出,当与重定向符(&amp;gt;或者&amp;gt;&amp;gt;)一同使用时,一般用来连接文件
--&amp;gt; -n参数是在文件的前面加上行号
--&amp;gt; -b参数是只显示非空行内容
--&amp;gt; -v参数是显示不可打印字符
--&amp;gt; -s参数是将多行空行显示为一行空行
--&amp;gt; 在一个管道中,直接使用重定向会比cat的效率更高
----------------------------------------------------------------
cat filename | tr a-z A-Z
tr a-z A-Z &amp;lt; filename
----------------------------------------------------------------
--&amp;gt; tac是cat的反向命令,反向输出一个文件的内容(最后一行变为第一行,依次向上)
rev
将文件的每一行内容反向输出到标准输出,注意这个通tac功能是不一样的
cp
文件复制命令
cp file1 file2 --&amp;gt; 将file1复制到文件file2,如果file2存在,则覆盖文件file2内容
--&amp;gt; 尤其注意-a(archive)参数的使用,可以用于将一个目录完整复制
--&amp;gt; -u(update)参数避免覆盖
--&amp;gt; -r/-R 递归的复制
move
文件移动命令
命令等效与cp和rm的结合体,用来将多个文件移动到一个文件夹中,或者重命名文件夹;
--&amp;gt; 当mv用在一个非交互的脚本中时,mv会使用-f(force)参数来忽略用户的输入内容
--&amp;gt; 当把一个目录mv为另一个已经存在目录名称时,该目录会变成已存在目录的子目录
rm
删除文件命令
--&amp;gt; -f(force)参数用于强制删除文件,即使该文件为只读,在脚本中使用,用来绕开用户输入非常有用
--&amp;gt; 当一个文件以'-'开头时,使用rm删除会失败;rm将以'-'的内容作为参数使用
a.解决方式之一是在要删除文件的前面加上'--'(选项结束标识符)
b.另一种方式是,在文件名前加上./,表示是在当前目录下的文件
----------------------------------------------------------------
rm -- -badname
rm ./-badname
----------------------------------------------------------------
--&amp;gt; 当使用-r参数时,表示从当前指定目录递归删除
a.使用路径名称中包含变量的时候,尤其小心,当变量不存在时,有可能就变成了rm -rf /
b.使用rm -rf *时需要注意;若命令执行时,当前工作路径不对,改命令结束后,效果将等同如rm -rf /
rmdir
删除文件夹命令
当使用这个命令删除文件夹时,目录必须为空(包括.文件--隐藏文件)
--&amp;gt; 特定场景下使用这个命令来替代rm -rf dirname,防止误删错误文件夹
mkdir
创建文件夹命令
创建一个新的文件夹,如: mkdir -p project/programs/December; -p参数会自动创建任何必需的父目录
chmod
更改已存在文件或者文件夹的属性命令
--&amp;gt; 数字方式 chmod 755 /dirname
--&amp;gt; 字符方式 chmod u+rwx /filename
chattr
更改文件属性命令,这个命令与chmod的功能类似,但是使用不同的选项和语法方式,(仅在ext文件系统上使用?)
--&amp;gt; chattr的一个特殊的参数'i'(immutable),当一个文件具有了i属性,表示这个文件是不可更改的,不能被修改,删除,链接(root也不行)
--&amp;gt; 当一个文件具有了's'(secure)属性时,文件被删除后,之前文件占用的块将被二进制0填充
--&amp;gt; 当一个文件具有了'u'(undelete)属性时,文件被删除后,文件内容仍能够获取到(状态为undeleted)
--&amp;gt; 当一个文件具有了'c'(compress)属性时,当文件被写时,自动压缩到磁盘文件,当文件被读时,自动从磁盘解压读取
--&amp;gt; chattr包含的文件属性不同使用ls -l显示出来
ln
为存在的文件创建链接,链接是一个文件的映射,文件的别名
--&amp;gt; ln命令允许被链接的文件包含不止一个映射名
--&amp;gt; ln命令还可以用作别名来使用,在脚本中充作别名(abs-p38)
--&amp;gt; ln只创建文件的映射,指向文件的指针大小只有几个字节大小
--&amp;gt; ln命令最常与-s选项一同使用(符号链接或者称为软链接);软链接的优势之一是可以跨越文件系统创建
ln -s oldfile newfile将oldfile链接一个新的文件名称newfile
--&amp;gt; 更改文件被链接文件的内容时,软链接和硬链接同时能够体现更改的文件内容;不同点是
a.删除或者重命名被链接文件后,硬链接不受影响,源文件的存储块内容并没有发生变化;但对于指向源文件名称的软链接来说,旧文件名称已经不存在,软链接将失效
b.软链接的优点是可以跨越文件系统进行链接,并且,不同于硬链接,软链接还可以指向文件夹,硬链接则不行
--&amp;gt; 链接的存在可以让脚本(或其他任何可执行的文件)通过不同的名称来调用(eg:/sbin/iptables -&amp;gt; xtables-multi),通过名称来限定脚本执行哪部分功能
----------------------------------------------------------------
#!/bin/bash
# hello.sh
ln -s hello.sh goodbye
HELLO_CALL=65
GOODBYE_CALL=66
if [ $0 = &amp;quot;./goodbye&amp;quot; ]; then
echo &amp;quot;Good-bye!&amp;quot; # Some other goodbye-type commands, as appropriate.
exit $GOODBYE_CALL
fi
echo &amp;quot;Hello!&amp;quot;
exit $HELLO_CALL
----------------------------------------------------------------
man/info
获取帮助文档,info文档一般描述信息会比man文档更详尽
--&amp;gt; man文档的书写可以通过脚本来优化(abs-709)
&lt;/code>&lt;/pre>
&lt;h3 id="11-高级命令">#11. 高级命令&lt;/h3>
&lt;pre>&lt;code>find
命令形式: -exec COMMAND \;
为每一行find匹配的内容执行COMMAND命令,命令序列是以';'结尾
--&amp;gt; 此处使用的-exec与shell自带命令exec别混淆了
--&amp;gt; 注意此处不是命令分隔使用到的';',find命令序列中';'是脱意的,为了确保shell将';'按照字面意思传递给find
--&amp;gt; 如果COMMAND中包含有{},则find将find匹配的路径或者文件名通过{}来替换;
----------------------------------------------------------------
find ~/ -name 'core*' -exec rm {} \;
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find /home -type f -atime +5 -exec rm {} \;
----------------------------------------------------------------
--&amp;gt; 时间匹配: find可以通过文件的时间戳进行查找匹配
mtime = last modification time of the target file
ctime = last status change time (via 'chmod' or otherwise)
atime = last access time
(-mtime -1表示前一天被修改过的文件)
--&amp;gt; 文件匹配: find可以通过文件类型进行查找匹配
f = regular file
d = directory
l = symbolic link, etc.
----------------------------------------------------------------
## 删除当前目录下包含特殊字符的文件
find . -name '*[+{;&amp;quot;\\=?~()&amp;lt;&amp;gt;&amp;amp;*|$ ]*' -maxdepth 0 -exec rm -f '{}' \;
## 通过inum删除文件
inum=`ls -i | grep &amp;quot;$1&amp;quot; | awk '{print $1}'`
find . -inum $inum -exec rm {} \;
----------------------------------------------------------------
xargs
一个用来传递参数给命令的过滤器,同样也是一个集合命令的工具
--&amp;gt; xargs将数据流打散成足够小的块,用来给命令或者进程处理,可以将这个命令想成更加强大的后向引用
--&amp;gt; 在有些场景下,命令替换报too many arguements时,用xargs却可以使用
--&amp;gt; 一般场景下,xargs通过管道或者标准输入读取数据,但也可以通过一个文件的内容来获取
--&amp;gt; 默认传递给xargs的命令是echo,这表示当输入管道给到xargs时,换行符和一些其他空白字符会被跳过
----------------------------------------------------------------
bash$ ls -l | xargs
total 0 -rw-rw-r-- 1 bozo bozo 0 Jan 29 23:58 file1 -rw-rw-r-- 1 bozo bozo 0 Jan...
----------------------------------------------------------------
--&amp;gt; 命令ls | xargs -p -l gzip 将当前目录下的每个文件用gzip打包,每次一个,每进行一次会提示一次
--&amp;gt; xargs依次序处理传递给其的参数,一次一项
--&amp;gt; -n NN形式;限制每次传递给命令的参数数目,ls | xargs -n 3 echo -- 每次打印三个名字
--&amp;gt; 另外一个有用的参数是-0,通常和find -print0或者grep -lZ一同使用;这个场景下允许处理的参数中包含空白字符或者引用
----------------------------------------------------------------
find / -type f -print0 | xargs -0 grep -liwZ GUI | xargs -0 rm -f
grep -rliwZ GUI / | xargs -0 rm -f
----------------------------------------------------------------
--&amp;gt; -P选项允许并行执行命令,在多核机器中能够提高执行速度
----------------------------------------------------------------
ls *gif | xargs -t -n1 -P2 gif2png
# Converts all the gif images in current directory to png.
# Options:
# =======
# -t Print command to stderr.
# -n1 At most 1 argument per command line.
# -P2 Run up to 2 processes simultaneously.
----------------------------------------------------------------
--&amp;gt; 在find中使用,一对花括号的作用是作为占位符使用的
----------------------------------------------------------------
ls . | xargs -i -t cp ./{} $1
# -t is &amp;quot;verbose&amp;quot; (output command-line to stderr) option.
# -i is &amp;quot;replace strings&amp;quot; option.
# {} is a placeholder for output text.
# This is similar to the use of a curly-bracket pair in &amp;quot;find.&amp;quot;
----------------------------------------------------------------
expr
通用表达式求值运算命令
连接并对给出的命令选项和参数进行求值操作(各个参数之间必须用空格隔开)
--&amp;gt; 可进行的操作包括有: 算数运算,比较,字符或者逻辑运算
----------------------------------------------------------------
expr 3 + 5
expr 5 % 3
expr 1 / 0
expr 5 \* 3 # 乘法运算,在expr表达式中,乘号需要脱意
y=`expr $y + 1` # 变量自增,等效于 let y=y+1 and y=$(($y+1))
z=`expr substr $string $position $length` # 获取变量string中position位置length长度的字符
----------------------------------------------------------------
--&amp;gt; ':'运算符可以用来替代match;命令 b=`expr $a : [0-9]*`等效于 b=`expr match $a [0-9]*`
&lt;/code>&lt;/pre>
&lt;h3 id="12-时间日期命令">#12. 时间/日期命令&lt;/h3>
&lt;pre>&lt;code>date
打印当前时间和日期信息到标准输出,这个命令的格式化输出和解析选项很有用
--&amp;gt; -u选项显示UTC时间
--&amp;gt; date可以用来计算不同时间之间的时间间隔
--&amp;gt; date有大量的输出选项可供选择;比如%N是给出当前时间的纳秒格式,这个形式可以用来获取随机数
----------------------------------------------------------------
date +%N | sed -e 's/000$//' -e 's/^0//'
date --date='6 days ago'
date --date='1 year ago'
----------------------------------------------------------------
zdump
时区dump:打印指定时区的时间
----------------------------------------------------------------
bash$ zdump EST
EST Tue Sep 18 22:09:22 2001 EST
----------------------------------------------------------------
time
显示执行一个命令的准确时间
--&amp;gt; time不同于命令times,注意
----------------------------------------------------------------
bash$ time ls -l /
real 0m0.004s
user 0m0.004s
sys 0m0.001s
----------------------------------------------------------------
touch
更新文件的访问/修改时间为系统/指定时间,同时具有新建一个文件的功能
--&amp;gt; 当文件zzz不存在时,touch zzz会创建一个大小为0的文件zzz;这种方式用来存储日期/时间戳很有用
--&amp;gt; touch命令等效于:&amp;gt;&amp;gt; newfile或者&amp;gt;&amp;gt; newfile(普通文件)
--&amp;gt; 可以结合cp -a一起使用,使用touch更新不想被覆盖的文件时间戳,再用cp -u
at
at任务控制命令在指定的时间执行一系列指定的命令;命令类似于cron,at命令很适合只执行一次的命令
--&amp;gt; 使用-f选项或者&amp;lt;输入重定向,at充文件中读取命令;文件应该是一个可执行的shell脚本,同时是非交互式脚本
--&amp;gt; 需要执行较多内容时,可以结合run-parts命令来实现
----------------------------------------------------------------
bash$ at 2:30 am Friday &amp;lt; at-jobs.list
job 2 at 2000-10-27 02:30
----------------------------------------------------------------
batch
batch命令类似于at命令,但要求在系统负载低于0.8时执行;类似于at,可以接-f选项
cal
打印简化版的日历到标准输出,可接不同选项,显示不同年份和月份的日历
sleep
这个是shell形势下的wait循环;命令暂停指定秒数的时间,什么都不做
--&amp;gt; 对于后台运行的命令或者定时进程很有用,定时检查事件
--&amp;gt; sleep命令默认情况下是使用秒,但也可以用分钟,小时或者天来定时
--&amp;gt; watch命令比sleep命令更适合周期性检查命令执行情况
usleep
类似与sleep,但默认时间为微秒,用在对时间更加精准或查询更加频繁的场景下
hwclock/clock
命令hwclock获取或者调整机器的硬件时间,某些选项需要root权限才能使用
--&amp;gt; 在rhel6中,启动时,/etc/rc.d/rc.sysinit启动文件通过hwclock获取硬件时间来设置系统时间
--&amp;gt; clock是hwclock的同义词
&lt;/code>&lt;/pre>
&lt;h3 id="13-文本处理命令">#13. 文本处理命令&lt;/h3>
&lt;pre>&lt;code>sort
文件归类工具,通常用在管道后过滤使用
--&amp;gt; 命令用来正序,逆序或者指定位置关键字/字符位置来处理文本流或者文件
--&amp;gt; 使用-m选项,合入预处理过的文件
--&amp;gt; 可以查看info文档来获取sort的使用场景
tsort
拓扑排序,读取以空格分隔的字符串对，并根据输入模式进行排序;通常情况下tsort命令排序的结果与sort排序结果有较大差别
uniq
该命令移除文件中重复出现的行,通常会结合sort和管道一同使用
----------------------------------------------------------------
cat list-1 list-2 list-3 | sort | uniq &amp;gt; final.list
----------------------------------------------------------------
--&amp;gt; 使用-c选项,在输出结果中显示重复出现的次数
--&amp;gt; sort INPUTFILE | uniq -c | sort -nr　命令打印出在INPUTFILE中出现的频次信息,使用场景为分析log文件或者字典列表等
----------------------------------------------------------------
sed -e 's/\.//g' -e 's/\,//g' -e 's/ //g' &amp;quot;$1&amp;quot; | tr 'A-Z' 'a-z' | sort | uniq -c | sort -nr
----------------------------------------------------------------
expand/unexpand
命令expand用来将tab展开为空格,通常与管道结合使用
命令unexpand将空格转换为tab,是expand的反转命令
cut
展开文件指定区域的命令.命令类似于在awk结构中的print $N,但相比较之下,限制更多.在脚本中使用cut命令会比使用awk更简单.cut重要的选项-f和-d
----------------------------------------------------------------
# 使用cut来获取挂载文件系统列表
cut -d ' ' -f1,2 /etc/mtab
# 使用cut列出OS和内核版本
uname -a | cut -d&amp;quot; &amp;quot; -f1,3,11,12
# 使用cut来解析email信息头部
bash$ grep '^Subject:' read-messages | cut -c10-80
Re: Linux suitable for mission-critical apps?
MAKE MILLIONS WORKING AT HOME!!!
Spam complaint
Re: Spam complaint
----------------------------------------------------------------
--&amp;gt; 甚至可以指定换行符作为分隔符
----------------------------------------------------------------
bash$ cut -d'
' -f3,7,19 testfile
This is line 3 of testfile.
This is line 7 of testfile.
This is line 19 of testfile.
----------------------------------------------------------------
--&amp;gt; cut -d ' ' -f2,3 filename的结果等效于awk -F'[ ]' '{ print $2, $3 }' filename
paste
用于将多个文件合成为一个文件,将合成的结果输出到标准输出
join
这是一个特殊形式的paste命令;这个强大的程序允许按照一定的关联关系来合并两个文件内容,这实际上已经是一个简化版的关系数据库形式了
--&amp;gt; join命令只对两个文件进行操作，但只粘贴那些带有公共标记字段（通常是数字标签）的行，并将结果写入stdout
--&amp;gt; 要加入的文件应根据标记字段进行排序，以使匹配正常工作
----------------------------------------------------------------
File: 1.data
100200300Shoes
Laces
Socks
File: 2.data
100200300$40.00
$1.00
$2.00
bash$ join 1.data 2.data
File: 1.data 2.data
100 Shoes $40.00
200 Laces $1.00
300 Socks $2.00
# 标识字段只出现一次
----------------------------------------------------------------
head
打印一个文件的启示内容到标准输出,默认行数是10,但允许设置不同数字
--&amp;gt; head有多个不同的参数可以使用,如-c(字符数),-n(行数)
tail
打印一个文件的尾部到标准输出,默认行数是10,但该数字可以通过接-n选项更改;通常用来追踪一个文件内容的变化
--&amp;gt; tail -f等效于tailf,动态实时的显示文件内容
--&amp;gt; 显示某个文件的指定行内容,其中一种方式: head -n 8 database.txt | tail -n 1 l
--&amp;gt; 使用新的 tail -n $LINES filename 代替旧有形式tail -$LINES filename
grep
一个多功能的搜索工具,可以使用正则表达式;命令形式grep pattern [file...]
--&amp;gt; -i选项,忽略大小写
--&amp;gt; -w选项,仅匹配整个单词
--&amp;gt; -l选项,仅显示匹配相关内容的文件名
--&amp;gt; -r选项,递归搜索
--&amp;gt; -n选项,显示匹配到的内容所在行,并将行数显示在匹配内容的前面
--&amp;gt; -v选项,不显示匹配到的内容
--&amp;gt; -c选项,显示匹配到的次数
--&amp;gt; --color选项,将匹配到的内容上色显示
--&amp;gt; -o选项,仅打印匹配到的内容,不显示一整行
--&amp;gt; -q选项,不打印任何内容,在判断结构中使用很方便
--&amp;gt; 当仅搜索一个文件时,在输出结果中要将文件名一同打印,可以后接/dev/null作为第二个文件名
----------------------------------------------------------------
bash$ grep Linux osinfo.txt /dev/null
----------------------------------------------------------------
--&amp;gt; grep匹配到相关内容后,返回值为0,这样可以结合判断结构来使用
--&amp;gt; 使用sed命令可以仿真grep的行为: sed -n /&amp;quot;$1&amp;quot;/p $file
--&amp;gt; 怎样让grep匹配两个不同的匹配模式,可以使用方式grep pattern1 | grep pattern2来实现
--&amp;gt; egrep等效于grep -E,允许使用扩展正则表达式来进行匹配,形式更加灵活
--&amp;gt; fgrep等效于grep -F,逐字匹配(不使用正则表达式),速度会更快一些
--&amp;gt; agrep(近似匹配/模糊匹配),扩展grep的能力,使其能够进行模糊匹配
--&amp;gt; 匹配压缩文件内容时,使用zgrep/zegrep/zfgrep,这些命令同样能用在普通文件,虽然速度慢一些,但对于包含多种文件类型(普通文件/压缩文件)的场景下操作则更方便
--&amp;gt; 匹配bzip文件时使用bzgrep命令
look
look命令工作形式类似于grep,但是是基于字典(一个已排序的单词列表)进行查询;默认情况下,look在/usr/dict/words下进行匹配,但可以指定进行匹配的字典
----------------------------------------------------------------
file=words.database # Data file from which to read words to test.
while [ &amp;quot;$word&amp;quot; != end ]; do # Last word in data file.
read word
look $word &amp;gt; /dev/null
lookup=$?
if [ &amp;quot;$lookup&amp;quot; -eq 0 ]; then
echo &amp;quot;\&amp;quot;$word\&amp;quot; is valid.&amp;quot;
else
echo &amp;quot;\&amp;quot;$word\&amp;quot; is invalid.&amp;quot;
fi
done &amp;lt;&amp;quot;$file&amp;quot;
----------------------------------------------------------------
sed/awk
脚本语言,非常适合用来处理文本文件和标准输出的内容
sed
非交互式的流编辑器,在batch(不需要用户介入的情况下运行一组命令)模式下允许使用很多ex命令,在脚本中使用很广泛
awk
可编程式文件内容提取及格式化程序,适合用来操作或展开格式化的文本文件的列,语法格式类似于C语言
wc
计数程序
--&amp;gt; -w:单词数;-l:行数;-c:字节数;-m:字符数;-L:给出最长行的长度
tr
字符转化过滤器
--&amp;gt; 视情况决定是否需要使用引用或者括号,引号引用可以防止shell将属于tr的特殊字符先行处理了,括号必须被引起来,防止直接被展开
----------------------------------------------------------------
tr &amp;quot;A-Z&amp;quot; &amp;quot;*&amp;quot; &amp;lt;filename
tr A-Z \* &amp;lt;filename
----------------------------------------------------------------
--&amp;gt; 接上-d选项,用于删除一系列的指定字符
--&amp;gt; --squeeze-repeats(-s)选项用来删除连续的字符(保留第一个),这个选项用来移除多余的空白字符很有用
--&amp;gt; -c(补足)选项将未匹配的内容用指定的字符替代
----------------------------------------------------------------
bash$ echo &amp;quot;acfdeb123&amp;quot; | tr -c b-d +
+c+d+b++++
bash$ echo &amp;quot;abcd2ef1&amp;quot; | tr '[:alpha:]' -
----2--1
----------------------------------------------------------------
fold
将输入的行折叠成指定宽度的过滤器
--&amp;gt; 使用-s选项用来以空格作为隔断符,防止直接截断字符
----------------------------------------------------------------
b=`ls /usr/local/bin`
$ echo $b | fold - -s -w 40
cnpm compile cops-cli gitbook pacvim
ptyping qr-filetransfer runenpass sle
study s-tui t termtosvg tget tiv
# 等效于echo $b | fmt -w $WIDTH
----------------------------------------------------------------
fmt
简单的格式化工具,用于将长行分割为多行
column
列格式化工具,将列类型的文本输出转换成格式友好的打印形式,在合适的位置插入tab
--&amp;gt; 对于文件中存在多列内容,但未对齐的格式,使用column -t处理会很方便
colrm
列删除处理器,该命令删除文件中的列内容并直接写该文件
--&amp;gt; colrm 2 4 &amp;lt;filename 删除文件中的第二到第四列内容
--&amp;gt; 上列命令使用时,若文件中包含有tab之类的不可打印字符,则可能导致无法预估的结果,考虑使用expand/unexpand命令处理之后再管道传输给colrm
nl
打印文件内容并附上行号
--&amp;gt; 打印的是非空行内容
--&amp;gt; nl的操作非常类似于cat -b,同样是不打印非空行
cpio
这个特定的归档复制命令已经很少用了,基本已经被tar/gzip取代;但在某些场景下,还是能够使用
--&amp;gt; 指定块大小进行复制,速度会比tar更快
find &amp;quot;$source&amp;quot; -depth | cpio -admvp &amp;quot;$destination&amp;quot;
rpm2cpio
这个命令从rpm包中解压一个cpio文件出来
gzip
结合-c选项使用时,将gzip的输出写入到标准输出,结合管道使用非常有用
zcat/bzcat
可以用来查看gzip/bzip文件中的内容,相当与bzip/gzip文件下的cat
readlink
获取符号链接指向的文件
strings
用来获取二进制文件或其他数据文件中的可打印字符
diff
逐行打印两个对比文件的不同内容
--&amp;gt; 使用--side-by-side选项,每个文件内容显示一列,相较原来的形式更方便对比查看
--&amp;gt; 使用-c和-u选项可以让输出结果更适合查看
--&amp;gt; 可以在判断结构中使用diff命令,当比较的两个文件同一的时候,命令返回值为0,当比较的两个文件不一样时,返回值非零
patch
一个非常灵活的版本记录命令,结合diff使用比较常见,可以给出一个由diff命令创建的差异文件
diff3
diff命令的升级版命令,可以一次比较三个文件,正常执行后命令返回值为0,但改命令不会打印文件差异内容出来
split/csplit
用于将一个文件切片为小块的工具,使用场景一般为文件太大,需要切片后邮件发送或者拷贝到移动磁盘
csplit命令通过文件内容来进行分片
sum,cksum,md5sum,sha1sum
以上命令是用于创建校验和的工具,校验和是通过对一个文件内容进行数学计算得出的字符串,用于检查文件的完整性
openssl
可以用于加密使用,结合tar一同使用,可以方便的加密相关目录和文件
shred
用随机字符多次重写文件,可用在安全要求高的场景下
mktemp
创建一个拥有唯一名称的临时文件,不使用其他参数是,在/tmp目录下创建一个大小为0的文件
--&amp;gt; tempfile=`mktemp $PREFIX.XXXXXX` 指定创建的新文件包含有多少个随机字符
ptx
ptx[targetfile]命令输出目标文件的排列索引（交叉引用列表）。如有必要，可以在管道中进一步过滤和格式化。
ipcalc
用于换算和查看ip相关的内容
traceroute
通过发送的包追踪路由
sx,rx
命令集通过xmodem协议与远端服务器传输文件
sz,rz
命令集通过zmodem协议与远端服务器传输文件,zmodem的速度相对xmodem更快
ssh
--&amp;gt; 在循环中使用ssh时,可能出现不可预期的情况,可以后接-f或者-n选项来避免
tput
--&amp;gt; 初始化终端和/或从terminfo数据中获取有关它的信息。各种选项允许某些终端操作：tput clear等于clear；tput reset等于reset。
--&amp;gt; tput可以用来对终端进行操作,更改字符显示方式等
reset
重置终端参数并且清屏
script
记录键盘敲击记录,执行该命令后,会在当前目录下生成一个文件,用于记录后面敲击的键盘记录
factor
后接一个数字,将该数字的各个因数打印出来
bc
bash无法进行浮点数计算,且缺少一些重要的运算功能,bc可以满足部分需求
--&amp;gt; bc可以用在脚本中,用来对变量进行计算获值variable=$(echo &amp;quot;OPTIONS; OPERATIONS&amp;quot; | bc)
--&amp;gt; 另外一种形式是结合here document的方式来作为输入
----------------------------------------------------------------
&amp;lt;&amp;lt; EOF
18.33 * 19.78
EOF
----------------------------------------------------------------
awk
另外一种进行浮点数运算的方式是使用awk命令
----------------------------------------------------------------
AWKSCRIPT=' { printf( &amp;quot;%3.7f\n&amp;quot;, sqrt($1*$1 + $2*$2) ) } '
# command(s) / parameters passed to awk
# Now, pipe the parameters to awk.
echo -n &amp;quot;Hypotenuse of $1 and $2 = &amp;quot;
echo $1 $2 | awk &amp;quot;$AWKSCRIPT&amp;quot;
----------------------------------------------------------------
jot,seq
生成一个整数序列,用户可以自定义步长和分隔符
--&amp;gt; seq -s : 5 指定分隔符为:,默认情况下是换行符
--&amp;gt; jot和seq都可以用在for循环中
run-parts
run-parts命令会执行目标目录下的所有脚本,默认依照ascii字母顺序执行,当然,脚本需要有执行权限
yes
yes默认的动作为返回y及换行符到标准输出,需要使用ctrl+C来终止
--&amp;gt; 使用yes string,则后面会不断重复出现string
--&amp;gt; 使用场景: yes | rm -r dirname
tee
类似与重定向,但与重定向不同
(redirection)
|----&amp;gt; to file
|
==========================|====================
command ---&amp;gt; command ---&amp;gt; |tee ---&amp;gt; command ---&amp;gt; ---&amp;gt; output of pipe
===============================================
mkfifo
命令创建一个命名管道,一个临时的first-in-first-out用于在不同的进程之间传递数据,一般情况下,一个进程向FIFO中写数据,另一个进程则从FIFO中读取数据
----------------------------------------------------------------
(cut -d' ' -f1 | tr &amp;quot;a-z&amp;quot; &amp;quot;A-Z&amp;quot;) &amp;gt;pipe2 &amp;lt;pipe1 &amp;amp;
ls -l | tr -s ' ' | cut -d' ' -f3,9- | tee pipe1 | cut -d' ' -f2 | paste - pipe2
rm -f pipe1
rm -f pipe2
----------------------------------------------------------------
&lt;/code>&lt;/pre>
&lt;h3 id="14-其他命令">#14. 其他命令&lt;/h3>
&lt;pre>&lt;code>groups
显示当前用户属于哪些组
lid
命令将显示给出的用户名所属的groups列表
logname
显示登录当前终端登录系统的用户名称,即使su之后,改命令仍显示为源用户
ac
显示用户登录的时长
newgrp
更改当前用户的组id而不需要登出系统
tty
显示当前终端所在的文件名称
stty
显示或者是更改终端的设置,改命令较复杂,在脚本中使用时,可以控制终端的行为以及其输出内容的形式
setterm
设置指定的终端属性,这条命令会更改输出到标准输出结果的显示情况
getty/agetty
使用getty/agetty来初始化终端进程,这些命令不能在脚本中使用,脚本中可使用的是stty
lastcomm
显示上一条执行命令的一些相关信息,内容是存储在/var/accounut/pacct文件中的
strace(system trace)
用于诊断和debug系统调用的工具,该命令和ltrace可用来查找一个程序运行失败的原因
itrace(library trace)
用于诊断和debug库调用的工具
nc(netcat)
nc工具集是一个用来连接和监听TCP/UDP端口的工具
dmesg
打印所有的系统启动日志信息到标准输出
size
size /path/to/binary 会给出一个二进制文件的各个段大小,对于程序员来说,需要使用
logger
追加用户自定义的内容到/var/log/messages中去,普通用户也可以使用
--&amp;gt; 该命令可以用来在脚本中增加debug信息到日志中
logrotate
该工具用于管理系统的日志文件,轮转,压缩,删除或者email发送等,一般是结合cron一起使用来实现日志管理的
fuser
获取当前正在访问给定文件,文件集,或者目录的进程(通过进程号显示)
--&amp;gt; 同-k选项一同使用时,杀掉这些进程,在插拔可移动设备的场景下使用较多
--&amp;gt; 同-n选项一同使用时,获取到当前在访问指定端口的进程,与nmap一同搭配使用非常有用
----------------------------------------------------------------
# nmap localhost
PORT STATE SERVICE
25/tcp open smtp
# fuser -un tcp 25
25/tcp: 2095(root)
----------------------------------------------------------------
nmap
network mapper and port scanner,网络映射和端口扫描,查看指定主机开放的端口
sync
执行命令后,强制当前环境下,将buffer中的数据写入到磁盘中
losetup
创建或者配置loop设备
mkswap
创建一个swap分区或者文件,swap区域启动需要使用swapon命令
swapon/swapoff
启用/关闭swap设备
dumpe2fs
打印显示详细的文件系统相关信息,必须由root用户调用
hdparm
显示/更改磁盘参数,必须由root用户使用,错误使用很危险
badblocks
检查一个存储设备的坏块,在一个刚格式化后的设备或者备份文件时使用
lsusb,usbmodules
显示所有的usb设备信息
lspci
列出当前使用到的pci总线
chroot
顾名思义,更改当前的根目录位置
lockfile
属于procmail包的一部分,他创建一个lock 文件,用于作为一个标记文件存在,控制文件,设备或者资源的可获取性
flock
命令给文件设置一个锁信息的公告,当命令执行完成之后,其他命令或者进程才能操作刚才的文件
----------------------------------------------------------------
flock $0 cat $0 &amp;gt; lockfile__$0
# Set a lock on the script the above line appears in,
#+ while listing the script to stdout.
----------------------------------------------------------------
--&amp;gt; 与lockfile命令不同的是,flock命令不会自动创建一个lock文件
mknod
创建一个块设备或者字符设备(当在系统上新增了一个新的设备之后可能有必要这样做),MAKEDEV工具比mknod更容易使用,且具备相应的功能
MAKEDEV
用于创建设备文件的命令,必须由root用户来执行,文件保存在/dev下,是高级版的mknod
tmpwatch
自动删除有一段时间没有被访问过的文件,通常结合cron一同使用,用于删除log文件
dump/restore
dump命令是设计用于备份文件系统的命令,命令读取磁盘分区的裸数据并写一个二进制文件
ulimit
设置一个更高的系统使用极值
quota
显示用户或者组的磁盘配额信息
setquota
设置用户或者组的磁盘配额
depmod
生成模块依赖文件,通常会被启动脚本调用
ldd
显示一个可执行文件需要使用到的共享库依赖
watch
以特定间隔运行一个命令
&lt;/code>&lt;/pre>
&lt;h2 id="特殊内容">特殊内容&lt;/h2>
&lt;h3 id="1-here-document">#1. here document&lt;/h3>
&lt;pre>&lt;code>&amp;lt;&amp;lt; 可以结合vi一同使用,如下所示:
----------------------------------------------------------------
# Insert 2 lines in file, then save.
#--------Begin here document-----------#
vi $TARGETFILE &amp;lt;&amp;lt;x23LimitStringx23
i
This is line 1 of the example file.
This is line 2 of the example file.
^[
ZZ
x23LimitStringx23
#----------End here document-----------#
----------------------------------------------------------------
可以使用vi +n的形式指定文件打开后在第几行
&lt;/code>&lt;/pre></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/notes/" term="notes" label="notes"/><category scheme="https://ruisum.top/tags/bash/" term="bash" label="bash"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/" term="基础知识" label="基础知识"/></entry><entry><title type="text">Linux 学习笔记</title><link rel="alternate" type="text/html" href="https://ruisum.top/tech/basics/notes/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/><id>https://ruisum.top/tech/basics/notes/linux%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id><updated>2022-04-13T22:56:06+08:00</updated><published>2017-11-16T22:56:06+08:00</published><author><name>newiur</name><uri>https://ruisum.top</uri><email>rwen913@gmail.com</email></author><rights>[CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh)</rights><summary type="html">用户管理 ## 2017-11-12 ## redhat 禁止空密码用户登录 pwck 检查用户帐号完整性，依据 /etc/passwd useradd/groupadd -r 添加一个系统帐号/组，uid/gid 小于 500/1000，系统用户/组默认不存在家目录 newgrp 临时更改用户的初始组(登录到一个新组)，用户属于切换组时不需要密码，需要退出时使用 exit(newgrp 为登录属性)命令即可 用户在/etc/passwd 文件中保存的注……</summary><content type="html">&lt;h2 id="用户管理">用户管理&lt;/h2>
&lt;p>## 2017-11-12 ##&lt;/p>
&lt;ul>
&lt;li>redhat 禁止空密码用户登录&lt;/li>
&lt;li>&lt;code>pwck&lt;/code> 检查用户帐号完整性，依据 &lt;code>/etc/passwd&lt;/code>&lt;/li>
&lt;li>&lt;code>useradd/groupadd -r&lt;/code> 添加一个系统帐号/组，&lt;code>uid/gid&lt;/code> 小于 500/1000，系统用户/组默认不存在家目录&lt;/li>
&lt;li>newgrp 临时更改用户的初始组(登录到一个新组)，用户属于切换组时不需要密码，需要退出时使用 exit(newgrp 为登录属性)命令即可&lt;/li>
&lt;li>用户在/etc/passwd 文件中保存的注释信息顺序-c，name,office,office-phone,home-phone&lt;/li>
&lt;li>新增一个用户可完全使用手动添加的方式，涉及 4 个文件，/etc/{passwd,shadow,group,skel/*}，skel 目录下的文件全部复制后需要修改文件权限和属组;&lt;/li>
&lt;/ul>
&lt;h2 id="权限管理">权限管理&lt;/h2>
&lt;p>## 2017-11-12 ##&lt;/p>
&lt;ul>
&lt;li>
&lt;p>普通权限&lt;/p>
&lt;pre tabindex="0">&lt;code>r--&amp;gt; 文本文件 cat,more,less; 目录文件 ls,不能使用 cd,ls -l;
w--&amp;gt; 文本文件 可写，可编辑，可删除; 目录文件 可在该目录下新建文件;
x--&amp;gt; 文本文件 判断运行方式，新启动一个进程; 目录文件，可在该目录下 ls -l,cd 进入，获取目录下文件的详细信息;
&lt;/code>&lt;/pre>
&lt;div class="notice tip" >
&lt;div class="notice-title">&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon notice-icon" viewBox="0 0 512 512">&lt;path d="M504 256a248 248 0 11-496 0 248 248 0 01496 0zm-248 50a46 46 0 100 92 46 46 0 000-92zm-44-165l8 136c0 6 5 11 12 11h48c7 0 12-5 12-11l8-136c0-7-5-13-12-13h-64c-7 0-12 6-12 13z"/>&lt;/svg>&lt;/div>
&lt;p>目录文件的执行权限不同于普通文件，具备了执行权限之后，才允许用户获取目录下的文件详情&lt;br>
The execute bit on a directory allows you to access items that are inside the directory, even if you cannot list the directories contents.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>可使用 openssl 生成密码&lt;/p>
&lt;pre tabindex="0">&lt;code># 生成后的字符串可放入 /etc/shadow 文件中
$ openssl passwd -1 -salt &amp;#39;123456&amp;#39;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>shell 类型&lt;/p>
&lt;pre tabindex="0">&lt;code>登录式 shell: 正常通过某终端登录，su - USERNAME，su -l USERNAME;
非登录式 shell: su USERNAME，图形终端下打开的命令窗口，自动执行的shell脚本;
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>环境变量保存文件：&lt;/p>
&lt;pre tabindex="0">&lt;code>profile类文件: 设定环境变量，运行脚本或命令;
bashrc类文件: 设定本地变量，定义命令别名;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="重定向">重定向&lt;/h2>
&lt;p>## 2017-11-16 ##&lt;/p>
&lt;ul>
&lt;li>系统设定
&lt;pre tabindex="0">&lt;code>默认输出设备：标准输出，STDOUT 1
默认输入设备：标准输入，STDIN 0
标准错误输出：STDERR，2
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>标准输入：键盘,标准输出：显示器&lt;/li>
&lt;li>set -C 可以关闭重定向清空非空文件，set +C 关闭该功能；在-C 指定时&amp;gt;|可强制清空&lt;/li>
&lt;li>并无 &amp;amp;&amp;gt;&amp;gt; 的追加重定向&lt;/li>
&lt;li>cat 与重定向结合使用
&lt;pre tabindex="0">&lt;code>cat &amp;lt;&amp;lt; END --&amp;gt; Here Document
cat &amp;lt;&amp;lt; END &amp;gt;&amp;gt;/&amp;gt; 追加/创建文件
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>管道：把前一个命令的输出当作下一个命令的输入&lt;/li>
&lt;li>tee ：ls /etc | tee /tmp/tmp.out&lt;/li>
&lt;/ul>
&lt;h2 id="正则表达式">正则表达式&lt;/h2>
&lt;p>## 2017-11-16 ##&lt;/p>
&lt;ul>
&lt;li>元字符
&lt;pre tabindex="0">&lt;code>.：匹配任意单个字符
[]：匹配指定范围内的任意字符
[^]：匹配指定范围外的任意字符
字符集合：[:digit:],[:upper:],[:punct:],[:space:],[:alpha:],[:alnum:]
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>匹配次数
&lt;pre tabindex="0">&lt;code>- *:匹配其前面的字符任意次
?:匹配其前面的字符0次或1次
\{m,n\}:匹配其前面的字符至少m次,至多n次
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>位置锚定
&lt;pre tabindex="0">&lt;code>^:锚定行首,此字符后出现的任意字符必须出现在行首
$:锚定行尾,此字符前出现的任意字符必须出现在行尾
^$:空白行
\&amp;lt;或\b:锚定词首,其后面的任意字符必须作为单词的首部出现
\&amp;gt;或\b:锚定词尾,其后面的任意字符必须作为单词的尾部出现
eg:
egrep &amp;#34;^(root|hadoop)\b&amp;#34; /etc/passwd
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>分组
&lt;pre tabindex="0">&lt;code>\(\):括号中的内容作为一个整体,主要是作为后向引用.
\1:引用第一个左括号以及与之对应的右括号所包括的所有内容
\2:
\3:
eg:
1-&amp;gt; grep \(ab\)* /tmp/tmpfile
2-&amp;gt; he love his lover
grep &amp;#39;\(l..e\).*\1r&amp;#39; /tmp/tmpfile
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>默认情况下,正则表达式工作在贪婪模式下,尽可能多的匹配&lt;/li>
&lt;li>grep/egrep -o 的使用（主要是正则表达式的使用）
&lt;pre tabindex="0">&lt;code>$ echo aaabbbccabababcaccaccacbabcbabbacbcacabcba | egrep -o &amp;#39;[abc]{1,3}&amp;#39;
aaa
bbb
cca
bab
abc
acc
acc
acb
abc
bab
bac
bca
cab
cba
# 抓取出来的结果是在[]中三个字母的任意组合
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="扩展正则表达式">扩展正则表达式&lt;/h2>
&lt;p>## 2017-11-21 ##&lt;/p>
&lt;ul>
&lt;li>grep: 使用基本正则表达式定义的模式来过滤文本的命令；
&lt;pre tabindex="0">&lt;code>-A
-B
-C
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>扩展正则表达式:&lt;/li>
&lt;/ul>
&lt;pre tabindex="0">&lt;code>字符匹配同基本正则表达式
次数匹配:
*:
?:
+:匹配其前面的字符至少一次
{m,n}
位置锚定同基本正则表达式
分组:
():分组
\1,\2,\3,.....
或者: |
分组示例:
grep -E &amp;#39;(C|c)at&amp;#39; test6.txt
匹配0-255之间的数字: \&amp;lt;([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\&amp;gt;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>fgrep:不支持正则表达式,可快速搜索&lt;/li>
&lt;/ul>
&lt;h2 id="bash-scripts-1">bash scripts 1&lt;/h2>
&lt;p>## 2017-11-21 ##&lt;/p>
&lt;ul>
&lt;li>shell 编程:
&lt;pre tabindex="0">&lt;code>编译器,解释器
编程语言:
机器语言,汇编语言,高级语言
静态语言:编译型语言
强类型(变量)
实现转换成可执行程序
C,C++,JAVA,C#
动态语言:解释型语言 on the fly
弱类型
边解释边执行
PHP,SHELL,python,perl
面向对象
面行过程
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>变量:内存空间,被命名的内存空间
&lt;pre tabindex="0">&lt;code>内存:编址的存储单元
变量类型:事先确定数据的存储格式和长度
字符
数值
整形
浮点型
bull类型:逻辑运算,与,或,非,抑或
与:只要一个为假,结果一定为假
或:只要一个为真,结果一定为真
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>shell:弱类型编程语言
&lt;pre tabindex="0">&lt;code>强类型:变量在使用前,必须事先声明,甚至还需要初始化.
弱类型:变量用时声明.甚至不区分类型.
变量赋值:VAR_NAME=VALUE
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>bash 变量:
&lt;pre tabindex="0">&lt;code>环境变量:作用与为当前shell及其子进程,export NAME=xxx
本地变量:整个bash进程
局部变量:作用域为当前代码块
位置变量:
特殊变量(系统变量):
$?:上一个命令的执行状态返回值
程序执行,可能有两类返回值:
程序执行结果
程序状态返回代码(0-255)
0:正确执行
1-255:错误执行,1,2,127系统预留
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>脚本在执行时会启动一个子 shell 进程&lt;br>
命令行中启动的脚本会继承当前 shell 环境变量;&lt;br>
系统自动执行的脚本(非命令行启动)就需要自我定义各种环境变量;&lt;/li>
&lt;li>/dev/null --&amp;gt; bit bucket 软件设备&lt;/li>
&lt;li>撤销变量:用于回收资源,内存空间,unset VAR_NAME&lt;/li>
&lt;li>默认情况下,bash 将所有变量均识别为字符串&lt;/li>
&lt;li>脚本:命令的堆砌,按照实际需求,结合命令流程控制机制实现的源程序&lt;/li>
&lt;/ul>
&lt;h2 id="bash-scripts-2">bash scripts 2&lt;/h2>
&lt;p>## 2017-11-21 ##&lt;/p>
&lt;ul>
&lt;li>bash 中如何实现条件判断
&lt;pre tabindex="0">&lt;code>条件测试类型:
整数测试:
字符测试:
文件测试:
条件测试的表达式:
[ expression ]
[[ expression ]]
test expression
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>整数测试:
&lt;pre tabindex="0">&lt;code>-eq:测试两个整数是否相等
-ne:测试两个整数是否不等,不等,为真;相等,为假;
-le:
-ge:
-lt:
-gt:
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>命令间的逻辑关系:
&lt;pre tabindex="0">&lt;code>逻辑与: &amp;amp;&amp;amp;
第一个条件为假时,第二个条件不用再判断,最终结果已有;
第一个条件为真时,第二个条件必须得判断;
逻辑非: ||
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="软件包管理-rpm-1">软件包管理 rpm 1&lt;/h2>
&lt;p>## 2017-11-21 ##&lt;/p>
&lt;p>1,应用程序&lt;/p>
&lt;pre>&lt;code>程序,architecture
源代码--&amp;gt;编译--&amp;gt;链接--&amp;gt;运行
程序:
库
静态
动态
静态链接
动态链接
共享库
&lt;/code>&lt;/pre>
&lt;p>2,程序组成部分:&lt;/p>
&lt;pre>&lt;code>二进制文件
库
配置文件
帮助文件/usr/share/man
/etc,/bin /sbin,/lib --&amp;gt; 均不可使用单独分区,必须在根文件系统分区上,系统启动就需要使用的程序
/usr/ --&amp;gt; 操作系统核心功能,可以单独分区(可以单独格式化根分区,在挂载/usr可使用)
bin
sbin
lib
/usr/local
bin
sbin
lib
etc
man
&lt;/code>&lt;/pre>
&lt;p>3,/proc,/sys 不能单独分区,默认为空;&lt;/p>
&lt;pre>&lt;code>proc接口,sys硬件接口
&lt;/code>&lt;/pre>
&lt;p>4,/dev:设备,不能单独分区&lt;/p>
&lt;pre>&lt;code>udev:能够利用内核识别到的硬件信息,动态的创建设备名;内核识别设备是通过驱动程序来实现的;
&lt;/code>&lt;/pre>
&lt;p>5,/boot:内核,initrd(initramfs)&lt;/p>
&lt;pre>&lt;code>内核:
POST--&amp;gt;BIOS(HD)--&amp;gt;(MBR)bootloader(文件系统结构,ext2,ext3,xfs)--&amp;gt;内核
/boot分区其实是先被访问后,启动内核再被挂载起来的
lvm是属于内核中的功能,所以尽量不要将boot分区与根目录放在一个分区上
&lt;/code>&lt;/pre>
&lt;p>5,程序=指令+数据&lt;/p>
&lt;pre>&lt;code>指令:芯片
CPU:普通指令,特权指令
指令集:
&lt;/code>&lt;/pre>
&lt;p>6,软件包管理器:&lt;/p>
&lt;pre>&lt;code>a,打包成一文件:二进制文件,库文件,配置文件,帮助文件
b,生成数据库,追踪所安装的每一个文件
&lt;/code>&lt;/pre>
&lt;p>7,软件包管理器的核心功能:&lt;/p>
&lt;pre>&lt;code>a,制作软件包
b,安装,卸载,升级,查询,校验
c,RedHat,SUSE,Debian
RedHat SUSE
RedHat Package Manager
RPM is Package Manager
Debian:dpt
&lt;/code>&lt;/pre>
&lt;p>8,前端工具:yum(yellowdog update modifier),apt-get&lt;/p>
&lt;pre>&lt;code>后端工具:RPM,dpt
&lt;/code>&lt;/pre>
&lt;h2 id="软件包管理-rpm-2">软件包管理 rpm 2&lt;/h2>
&lt;p>## 2017-11-27 ##&lt;br>
1,rpm 命令:&lt;/p>
&lt;pre>&lt;code>rpm:
数据库/var/lib/rpm
rpmbuild:
&lt;/code>&lt;/pre>
&lt;p>2,安装,卸载,升级,查询,校验,数据库的重建,验证数据包等工作&lt;br>
3,rpm 命名:&lt;/p>
&lt;pre>&lt;code>包:组成部分
主包:
bind-9.7.1-1.i586.el5.rpm
子包:
bind-libs-9.7.1-1.i586.el5.rpm
包名格式:
name-version-release.arch.rpm
bind-major.minor.release-release.arch.rpm
主版本号:重大改进
次版本号:某个子功能发生重大变化
发行版:修正了部分bug,调整了一点功能
release1:开发者
release2:制作者
&lt;/code>&lt;/pre>
&lt;p>4,rpm 安装&lt;/p>
&lt;pre>&lt;code>-h:显示安装进度,以#显示,每个#表示2%的进度
-v:表示详细过程
-vv:更详细的过程
--nodeps:忽略依赖关系
--replacepkgs:重新安装,替换原有安装
--oldpackage:使用就的软件包替换新的软件包
--force:强制安装,可以实现重装或降级
&lt;/code>&lt;/pre>
&lt;p>5,rpm 查询--&amp;gt; rpm -q PKGS_NAME&lt;/p>
&lt;pre>&lt;code>-qa:查询所有安装的软件包
-qi:查询指定软件包的说明信息
-ql:查询指定包安装后生成的文件列表
-qf:查询指定的文件是由哪个rpm包安装后生成的
-qc:查询指定的包安装的配置文件
-qd:查询指定包安装的帮助文件
-q --scripts:查询指定包中包含的脚本
-qp*:查询尚未安装的软件包的相关内容,承接已安装的软件包的查询内容
&lt;/code>&lt;/pre>
&lt;p>6,rpm 升级&lt;/p>
&lt;pre>&lt;code>-Uvh: 如果装有老版本的,则升级;否则,则安装;
-Fvh: 如果装有老版本的,则升级;否则,则退出;
--oldpackage:降级
&lt;/code>&lt;/pre>
&lt;p>7,rpm 卸载&lt;/p>
&lt;pre>&lt;code>-e:若有依赖关系,则不允许卸载
&lt;/code>&lt;/pre>
&lt;p>8,rpm 校验&lt;/p>
&lt;pre>&lt;code>rpm -V PKG_NAME --&amp;gt;检查文件在安装后是否被改动过
&lt;/code>&lt;/pre>
&lt;p>9,重建数据库&lt;/p>
&lt;pre>&lt;code>rpm --rebuilddb:重建数据库(不管有没有都重建,一定会重新建立)
rpm --initdb:初始化数据库(没有才建立,有就不重建)
&lt;/code>&lt;/pre>
&lt;p>10,检验来源合法性,及软件完整性&lt;/p>
&lt;pre>&lt;code>加密类型:
对称:加密解密使用同一个密钥
公钥:一对密钥,公钥,私钥:公钥隐含于私钥中,可以提取出来,并公开出去;
rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
rpm -K PKG_NAME
dsa,gpg:验证来源合法性,也即验证签名;--nosignature略过
sha1,md5:验证包完整性;使用--nodigist略过
单向:
&lt;/code>&lt;/pre>
&lt;p>11，在 rescue 模式下安装 rpm 软件包&lt;/p>
&lt;pre>&lt;code>rpm --ivh --replacepkgs --root /mnt/sysimage bash-××××
&lt;/code>&lt;/pre>
&lt;h2 id="软件包管理-yum-1">软件包管理 yum 1&lt;/h2>
&lt;p>## 2017-11-28 ##&lt;br>
1,yum&lt;/p>
&lt;pre>&lt;code>createrepo --&amp;gt; 创建元数据
XML:eXtended mark language
xml,json:半结构化的数据
&lt;/code>&lt;/pre>
&lt;p>2,yum 仓库中的元数据文件:&lt;/p>
&lt;pre>&lt;code>primary.xml.gz
a,包含所有rpm包的列表
b,依赖关系
c,每个rpm生成的文件列表
filelists.xml.gz
a,当前仓库中所有rpm包的所有文件列表;
other.xml.gz
a,额外信息
repomd.xml
a,记录的是上面三个文件的时间戳和校验和
comps*.xml.gz
a,rpm包分组信息
更改了镜像中的包后，此文件需要重新生成
&lt;/code>&lt;/pre>
&lt;p>3,*.repo 文件&lt;/p>
&lt;pre>&lt;code>[Repo_ID]
name=Description
baseurl=
ftp://
http://
file:///
enabled={1|0}
gpgcheck={1|0}
gpgkey=
ftp://
http://
file:///
&lt;/code>&lt;/pre>
&lt;p>4,yum 命令&lt;/p>
&lt;pre>&lt;code>list:列表
all:所有(默认)
available:可用的
installed:已安装的
updates:可用的升级
clean:清理缓存
all:
packages:
headers:
metadata:
dbcache:
install:安装
--nogpgcheck
-y
update:升级
update-to:升级至指定版本
&lt;/code>&lt;/pre>
&lt;p>5,createrepo&lt;/p>
&lt;pre>&lt;code>-g comps*.xml /path
&lt;/code>&lt;/pre>
&lt;h2 id="软件包管理-yum-2">软件包管理 yum 2&lt;/h2>
&lt;p>## 2017-11-28 ##&lt;br>
1,rpm 安装:&lt;/p>
&lt;pre>&lt;code>二进制格式:
源程序--&amp;gt;编译--&amp;gt;二进制格式
有些特性是编译选定的,如果编译未选定此特性,将无法使用
rpm包的版本会落后于源码包,甚至落后很多
&lt;/code>&lt;/pre>
&lt;p>2,rpm 包定制:手动编译安装&lt;/p>
&lt;pre>&lt;code>前提:准备需要的环境编译环境,开发环境,开发库,开发工具
安装:&amp;quot;development tools&amp;quot;和&amp;quot;Development libraries&amp;quot;
C,C++:静态语言,linux上最流行的开发环境
gcc:GNU C Complier,C
g++:
make:项目管理工具
makefile:定义了make(gcc,g++)按照何种次序去编译这些源程序文件中的源程序
automake --&amp;gt; makefile.in(半成品) --&amp;gt; makefile
autoconf --&amp;gt; configure(100个可选择特性,用户自定义哪些加入)
&lt;/code>&lt;/pre>
&lt;p>3,编译安装的三个步骤:&lt;/p>
&lt;pre>&lt;code># tar
# cd
# ./configure
--help
--prefix=/path/to/somewhere
--sysconfdir=/path/to/conffile_path
# make
# make install
若指定了安装路径:
1,修改PATH环境变量,以能够识别此程序的二进制文件路径;
a,修改/etc/profile文件
b,在/etc/profile.d/目录下建立一个以.sh为名称后缀的文件
2,默认情况下,系统搜索库文件的路径/lib,/usr/lib;要增添额外搜寻路径;
在/etc/ld.so.conf.d/中创建以.conf为后缀名的文件,而后把要增添的路径直接写至此文件中
a,默认情况下需要重启才能生效
b,可使用如下方式即时生效,ldconfig 通知系统重新搜寻库文件(-v显示重新搜寻库的过程)
3,头文件(#include):输出给系统
a,默认:/usr/include
b,增添头文件搜寻路径,使用链接进行:
ln -s /usr/local/tengine/include/* /usr/include/ 或者
ln -s /usr/local/tengine/include /usr/include/tengine
4,帮助文档路径:默认安装在--prefix指定的目录下的man目录
a,man -M /PATH/TO/MAN_DIR COMMAND
b,在/etc/man.config中添加一条MANPATH
c,可直接在man后接上准备需要查看相关帮助的文件的绝对路径
man /etc/passwd
&lt;/code>&lt;/pre>
&lt;p>4,netstat 命令&lt;/p>
&lt;pre>&lt;code>-r:显示路由表
-a:监听和不监听的端口都显示出来
-n:不解析主机名
-t:显示tcp连接
-u:显示udp连接
-l:显示监听状态的连接
-p:显示监听指定的套接字的进程的进程号和服务名
&lt;/code>&lt;/pre>
&lt;h2 id="磁盘管理-1">磁盘管理 1&lt;/h2>
&lt;p>## 2017-11-30##&lt;br>
1,机械式硬盘：U 盘，光盘，软盘，硬盘，磁带&lt;br>
2,文件名字并不保存在该文件的 inode 中，而是保存在文件夹的 block 中&lt;/p>
&lt;pre>&lt;code>a,文件系统是内核中的功能，可以说是一个软件
&lt;/code>&lt;/pre>
&lt;p>3,文件的 inode 保存内容有：block 号，属组，属者，权限，大小，时间戳&lt;br>
4,找文件的步骤：&lt;/p>
&lt;blockquote>
&lt;p>内核找到根目录的保存块（自引用）--&amp;gt; 读取内容（权限） --&amp;gt; 找到根目录中名为var的目录对应的inode号 --&amp;gt; var目录inode号找到var目录保存块 --&amp;gt; 读取内容（权限） --&amp;gt; 找到var目录中名为log的目录对应的inode号 --&amp;gt; log目录中找到名为messages的文件的保存块 --&amp;gt; 读取内容 --&amp;gt; 核对权限 --&amp;gt; 读取文件&lt;/p>
&lt;/blockquote>
&lt;p>5,目录中存储的内容为：文件名和对应的 inode 号码（dentry 目录项）&lt;br>
6,块位图（bitmap）：用来标记硬盘中块是否被使用（0 和 1 来表示）&lt;br>
7,inode 位图（bitmap）：用来标记 inode 是否被使用（0 和 1 来表示，所以 8 个标记才记录为 1 字节）&lt;br>
8,在系统中创建文件/backup/test.txt（文件大小 10k，文件系统块大小为 2k）：&lt;/p>
&lt;pre>&lt;code>a，扫描inode位图，分配一个空闲inode
b，查看backup目录inode中权限情况，核查是否有权限增加文件
c，修改backup目录保存块的内容，增加一行 --&amp;gt; test.txt与新分配inode号的条目
d，扫描块位图，分配8（假设）个块（多余的两个块用于后续的文件增长，防止文件增长后，保存块不连续的情况）
&lt;/code>&lt;/pre>
&lt;p>9,在系统中删除文件/backup/test.txt（文件大小 10k，文件系统块大小为 2k）：&lt;/p>
&lt;pre>&lt;code>a，找到文件保存目录所在的区块
b，删除目录区块中test.txt与相应分配inode号的条目
c，在inode位图中将文件的inode标记为未使用
d，inode找到文件对应的区块，在块位图中将相应的块标记为未使用
&lt;/code>&lt;/pre>
&lt;p>10,复制文件与剪切文件（同一个分区）速度相差比较大，原因为复制文件相当于新建文件;剪切文件仅更改文件名&lt;br>
11,文件系统情况：&lt;/p>
&lt;pre>&lt;code>a，super block保存文件系统所有block group信息
b，block group保存块位图，inode位图，inode，block信息
&lt;/code>&lt;/pre>
&lt;p>12,（特殊文件）指向同一个 inode 的不同路径，称为硬链接，信息保存在目录文件中;ls -l 第二列显示的数字为硬链接的个数&lt;br>
13,（特殊文件）一个指向另一个的路径（保存的是路径字符串），称为软链接，文件大小由字符个数决定，&lt;/p>
&lt;pre>&lt;code>软链接权限为777,完全不影响源文件的权限
&lt;/code>&lt;/pre>
&lt;h2 id="磁盘管理-2">磁盘管理 2&lt;/h2>
&lt;p>## 2017-11-30##
1,设备&lt;/p>
&lt;pre>&lt;code>字符设备：按字符为单位，线性设备;
块设备：按块为单位，随机访问的设备;
&lt;/code>&lt;/pre>
&lt;p>2,/dev（特殊文件）&lt;/p>
&lt;pre>&lt;code>主设备号（major number）：标识设备类型
次设备号（minor number）：同一种类型下的不同设备
&lt;/code>&lt;/pre>
&lt;p>3,创建设备文件（mknod）：连接入口，访问入口&lt;/p>
&lt;pre>&lt;code>mknod OPTION NAME TYPE major minor
-m：指定
&lt;/code>&lt;/pre>
&lt;p>4,格式化：&lt;/p>
&lt;pre>&lt;code>a，低级格式化：创建磁道
b，高级格式化：创建文件系统
&lt;/code>&lt;/pre>
&lt;p>5,文件系统：&lt;/p>
&lt;pre>&lt;code>a，FAT32在linux下称为vfat
b，vfs（同文件系统一样，也是内核的功能）：virtual filesystem --&amp;gt; linux下的虚拟文件系统，作用为提供统一的封装，
使得同样的命令能够在不同的文件系统上使用（例子：mkfs）
文件系统（软件）自己提供相应的调用（不同的文件系统，不同的调用;例如在ext2上是open1,在ext3可能就是open）
为了使软件能够专用于核心功能的实现，vfs把一些基础的调用封装起来
c，/var，/usr等单独分区，目录仍是存在于/目录下的，只是作为了一个入口，指向了第二分区。。。
d，挂在用目录独立于挂载分区存在，/var目录挂载分区sda2,但/var目录只存在于sda1
&lt;/code>&lt;/pre>
&lt;h2 id="磁盘管理-3">磁盘管理 3&lt;/h2>
&lt;p>## 2017-11-30 ##&lt;br>
1,用户模式：用户空间&lt;br>
2,内核模式：内核空间&lt;br>
3,文件在 linux 上存储，分为元数据和数据，元数据保存文件的属性，目录是完成文件路径的映射的&lt;br>
4,cpu（intel，amd）分为四个环，内核在 ring0（特权指令）上运行，普通进程运行在 ring3（ring1,ring2 不使用，历史原因）&lt;br>
5,文件系统上 block size：1024,2048,4096&lt;br>
6,软链接，设备文件，管道文件，套接字文件其实都没有大小，占据的都是 inode 的空间&lt;br>
7,超级块：用来存储文件系统中块组的信息，有多少个块组，块大小，已用块多少，可用块多少，空闲 inode，已用 inode&lt;br>
8,一个块组能够有多少个块，取决于块的大小（块位图占用空间为 1 个块），一般一个块组的数量为一个块存储的位数（1×1024×8）;创建块组的原因为，在一个很大的文件系统上，就算有块位图，去寻找也会很麻烦，所以再切割，减小找寻时间&lt;br>
9,块组描述符：用于存储 superblock 无法存储下的各块组信息，含有备份&lt;br>
10,任何一个分区的第一个块不能被使用，名字为 boot block，在多引导的情况下需要被使用到&lt;br>
11,mbr（master boot recoder 程序）不属于任何分区，是盘的第一个扇区（sector）&lt;br>
12,分区的构成为：boot block + n 个 block group&lt;br>
13,每个 block group 组成为 super-block+GDT+block-bitmap+inode-bitmap+inode-table+data-block&lt;br>
14,每个 block group 均有一个 super block 太浪费空间，后更改为少量的备份，比如 1,5,7,当第一个损坏后，会自动寻找下一个&lt;br>
15,GDT（group description table）块组描述符表，记录边界信息等&lt;br>
16,占据块空间的文件主要是目录文件和普通文件&lt;br>
17,ext3（日志文件系统）：相对于 ext2 文件系统来说，除去元数据和数据区，多出一个日志区（功能为在存储数据时突然断电，开机后能够直接发现文件所在位置，减少文件系统修复的时间），在存储文件时，inode 先放在日志区而不是在元数据区，存储完成后才被移到元数据区去;基于以上的情况，在写操作时 ext2 的速度会快过 ext3（很小）,读操作时无影响。&lt;br>
18,位图索引，oracle 使用，备注&lt;/p>
&lt;h2 id="磁盘管理-4">磁盘管理 4&lt;/h2>
&lt;p>## 2017-12-05 ##&lt;br>
&lt;em>rhel6与rhel5有差异，在执行命令时，先确认命令使用&lt;/em>&lt;/p>
&lt;p>1,重新创建文件系统会损坏文件&lt;br>
2,创建文件系统完成后，使用 cat /proc/partitions 用于查看是否已经被内核识别，若为识别，使用 partprobe 命令&lt;br>
3,使用 cat /proc/filesystems 查看当前内核支持哪些操作系统&lt;br>
4,mkfs 完成系统分区后，在输出的提示信息中能看到，系统会预留 5%的空间给超级用户，用于当系统空间使用完后，仍保留部分空间给 root 用户进行修复工作（这个可以调整）
5,mkfs -t ext2 = mkfs.ext2;mkfs 为一个统一调用格式化命令的接口&lt;br>
6,专门管理 ext 系列文件系统：mke2fs，直接创建文件系统;&lt;/p>
&lt;pre>&lt;code>-j 创建ext3文件系统
-b 创建指定块大小
-L 指定分区卷标
-m 指定预留给超级用户的块百分比
-i 用于指定为多少字节的空间创建一个inode，默认为8192;给出的数值应为块大小的2××n倍
-N 指定要创建的inode的个数
&lt;/code>&lt;/pre>
&lt;p>7,查询或查看磁盘设备的相关属性：blkid&lt;/p>
&lt;pre>&lt;code>UUID
TYPE
LABEL
&lt;/code>&lt;/pre>
&lt;p>8,用于查看或定义卷标：e2label&lt;br>
9,调整文件系统的相关属性：tune2fs&lt;/p>
&lt;pre>&lt;code>-j 不损坏文件的情况下，将ext2升级为ext3
-L 用于设定卷标
-m 调整预留百分比
-r 指定预留块数
-o 设定默认挂载选项
-c 指定挂载次数达到#后进行自检，0或-1表示关闭此功能
-i 指定挂载多少天后进行自检，0或-1表示关闭此功能
-l 查看super block中的信息
&lt;/code>&lt;/pre>
&lt;p>10,显示文件系统相关信息：dumpe2fs&lt;/p>
&lt;pre>&lt;code>-h 仅显示super block中的信息
dumpe2fs和tune2fs无法对包含在lvm中的设备进行查看，可以查看lv的
可以显示详细的信息内容
&lt;/code>&lt;/pre>
&lt;p>11,检查并修复 linux 文件系统 fsck&lt;/p>
&lt;pre>&lt;code>-t # 指定文件系统格式
-a 自动进行修复，不需要交互的模式下进行
&lt;/code>&lt;/pre>
&lt;p>12,专门用于检查修复 ext2/3 文件系统：e2fsck&lt;/p>
&lt;pre>&lt;code>-f 强制检查
-p 自动修复
&lt;/code>&lt;/pre>
&lt;p>13,挂载：将新的文件系统关联至当前根文件系统&lt;/p>
&lt;pre>&lt;code>卸载：将某文件系统取消与当前根文件系统的关联
mount：设备 挂载点
设备文件：
/dev/sd×
UUID：uuid=“”
LABEL：label=“”
挂载点：
1,此目录未被其他进程使用
&lt;/code>&lt;/pre>
&lt;p>14,mount 使用&lt;/p>
&lt;pre>&lt;code>-a 挂载/etc/fstab文件中定义的所有文件系统
-n 默认情况下，mount命令每挂载一个设备，都会把挂载的设备信息保存至/etc/mtab文件中;使用-n选项意味着挂载设备时，
不把信息写入该文件中
mount -n 的效果类似于cat /proc/mounts
-t 指定挂载的文件系统格式，省略时，mount会从blkid命令读取
-o 指定额外的选项
async 默认选项，异步写入，可提高读写性能
atime 每访问一次文件，都将访问时间更新一下，繁忙的服务器不建议使用该选项
_netdev 指若为网络共享设备，当开机时无网络，可跳过
remount 重新挂载
loop 挂载本地回环设备，光盘镜像
--bind
--move
&lt;/code>&lt;/pre>
&lt;h2 id="磁盘管理-5">磁盘管理 5&lt;/h2>
&lt;p>## 2017-12-05 ##&lt;br>
&lt;em>rhel6与rhel5有差异，在执行命令时，先确认命令使用&lt;/em>&lt;/p>
&lt;p>1,page out：内存中数据移到 swap 空间中&lt;/p>
&lt;pre>&lt;code>page in ：swap空间中的数据移到内存中
swap out：对应page in
swap in ：对应page out
&lt;/code>&lt;/pre>
&lt;p>2,buffer 与 cache：&lt;/p>
&lt;pre>&lt;code>buffer缓冲--&amp;gt; 蓄水池，照顾吞吐量小/慢的设备;保存元数据--&amp;gt; 查找/var/log/messages，查找中用到的数据
cache：缓存--&amp;gt; 保存数据，用于重复读取，加快读取性能;保存数据--&amp;gt; 块内保存的数据
&lt;/code>&lt;/pre>
&lt;p>3,fdisk 分区后，注意必须调整分区类型，不然错乱后，可能会导致后期管理的混乱&lt;br>
4,swap：交换分区&lt;/p>
&lt;pre>&lt;code>mount -t swap /dea/sda8
swapon /dev/sda8
-a 启用所有定义在/etc/fstab下的设备文件
swapoff /dev/sda8
&lt;/code>&lt;/pre>
&lt;p>5,回环设备：loop&lt;/p>
&lt;pre>&lt;code>使用软件来模拟实现硬件
&lt;/code>&lt;/pre>
&lt;p>6,复制和转换文件：dd&lt;/p>
&lt;pre>&lt;code>if=数据来源
of=数据存储文件
dd if=/etc/inittab of=/root/inittab
dd复制的为底层的数据流，底层的10...,直接操作的是底层的存储设备
cp复制为文件复制，是基于操作系统之上才能使用的
dd if=/dev/zero of=/tmp/swapfile bs=1M count=1024 seek=1023 创建的文件大小问1M，但在系统识别为1G，使用du能看占用的磁盘空间大小
seek=# 表示创建文件时，跳过多大空间
&lt;/code>&lt;/pre>
&lt;p>7,/etc/fstab&lt;/p>
&lt;pre>&lt;code>设备 挂载点 文件系统类型 挂载选项（默认为defaults） 转储频率（每多少次做一次完全备份） 文件系统检测顺序（只有根可以为1）
&lt;/code>&lt;/pre>
&lt;p>8,设备被占用而无法卸载时，可以使用 fuser -v 来查看被谁占用，命令是什么，进程号是多少&lt;br>
9,fuser：验证进程正在使用的文件或套接字&lt;/p>
&lt;pre>&lt;code>-v：显示占用
-k：中止占用的进程
-m：对挂载点和目录使用 fuser -mk /directory
&lt;/code>&lt;/pre>
&lt;h2 id="lvm管理-1">lvm管理 1&lt;/h2>
&lt;p>## 2017-12-05 ##
&lt;em>rhel6与rhel5有差异，在执行命令时，先确认命令使用&lt;/em>&lt;/p>
&lt;p>1,MD，DM&lt;/p>
&lt;pre>&lt;code>DM：device mapper将多个硬件设备映射为逻辑设备
LVM2
快照
多路径
可实现动态增减
&lt;/code>&lt;/pre>
&lt;p>2,LVM2：&lt;/p>
&lt;pre>&lt;code>PE：physical extend;物理卷只有加入卷组之后才有PE
LE：logical extend;
&lt;/code>&lt;/pre>
&lt;p>3,fdisk 可支持 15 个分区，不知道在 6 当中有没有提升 2&lt;/p>
&lt;h2 id="lvm管理-2">lvm管理 2&lt;/h2>
&lt;p>## 2017-12-07 ##&lt;br>
逻辑边界包含在物理边界内&lt;br>
1,扩展逻辑卷&lt;/p>
&lt;pre>&lt;code>lvextend -L [+]# /PATH/TO/LV
resize2fs -p /PATH/TO/LV --&amp;gt; 能有多大就扩展到多大
&lt;/code>&lt;/pre>
&lt;p>2,缩减逻辑卷&lt;/p>
&lt;pre>&lt;code>注意：
a，缩减逻辑卷的风险很大，不要随便进行该操作
b，不能在线缩减，请先卸载
c，确保缩减后的空间大小依然能够存储原有的所有数据
d，在缩减之前应该先强行检查文件系统，以确保文件系统处于一致状态;
df -lh --&amp;gt; umount --&amp;gt; e2fsck -f --&amp;gt; resize2fs /PATH/TO/LV --&amp;gt; lvreduce -L [-]# /PATH/TO/LV
&lt;/code>&lt;/pre>
&lt;p>3,快照卷&lt;/p>
&lt;pre>&lt;code>1,生命周期为整个数据时长：在这段时间内，数据的增长量不能超出快照卷大小;
2,快照卷应该为只读
3,快照卷必须与备份卷在同一个卷组中
4，快照卷也是一个lv，注意，它可以被挂载
5，生命周期结束，lvremove /PATH/TO/LV
lvcreate -L 50M -n S_NAME -s -p r /PATH/TO/LV
lvcreate
-s：创建
-p：r|w 权限，只读
&lt;/code>&lt;/pre>
&lt;h2 id="mdadm管理-1">mdadm管理 1&lt;/h2>
&lt;p>## 2017-12-07 ##&lt;br>
1,颜色设置：&lt;/p>
&lt;pre>&lt;code>echo -e &amp;quot;\033[1;37;41mHello\033[0m world!&amp;quot;
-e：启用脱意符
\033：表示ctrl
\033[31m：red
\033[32m：绿色
\033[33m：yellow
\033[34m：blue
[x,y,zm：x为1-9,表示为不同的显示方式，粗体、斜体等;yz为不同颜色的代号（y表示前景色,z表示背景色）
[0m：表示显示结束
read -p -e &amp;quot;\033[1;37;41mYour choice :\033[0m&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>2,计算机的核心主件：&lt;/p>
&lt;pre>&lt;code>a，cpu
b，内存
c，输入/出设备
&lt;/code>&lt;/pre>
&lt;p>3,设备接口转换，光电转换器，网卡等&lt;/p>
&lt;pre>&lt;code>a，集成在主板上的叫做controller（控制器）
b，需要外接进来的叫做adapter（适配器）
&lt;/code>&lt;/pre>
&lt;p>4,计算机中发出的 01 信号，指定在各不同位代表的含义，称之为协议&lt;/p>
&lt;pre>&lt;code>a，双方都遵循的方式
&lt;/code>&lt;/pre>
&lt;p>5,IDE 和 SATA 接口（1MB=8Mb）&lt;/p>
&lt;pre>&lt;code>IDE：133Mbps 理论值 并行
a，一个IDE控制器上能够连接2个IDE盘
SATA（1-3）：300Mbps，600Mbps，6Gbps 串行
a，一个SATA控制器只能连一个SATA盘
USB（1.0，2.0,3.0）：480Mbps（3.0）并行
SCSI(small computer system filesystem)：ultrascsi 320Mbps 串行 --&amp;gt; 以前工业生产用，速度快，功能强大
a，scsi基于IDE接口
b，数据在scsi上传输存储时，也是以包的形式进行传输的
外接的设备成为target;分为两种：
窄带--&amp;gt; 8 --&amp;gt; 1 initiator，7 targets
宽带--&amp;gt; 16 --&amp;gt; 1 initiator，15 targets
SAS：更小
&lt;/code>&lt;/pre>
&lt;p>6,RAID&lt;/p>
&lt;pre>&lt;code>a，级别：仅代表磁盘组织方式不同，没有上下之分
b，raid1+0和raid0+1是不一样的概念，有先后之分;raid10好于raid01
0：条带
性能提升，读写性能都有提升;但不提供冗余功能，无法容错，空间利用率100%
1：镜像mirror
写性能下降，读性能提升;具有冗余能力，可以容错，空间利用率50%
2：
3：
4：校验码（校验盘容易成为瓶颈）
5：校验码（轮流做校验盘）
读写都提升;具备冗余能力，空间利用率（n-1）/n
10：
01：
50：先5后0
空间利用率（n-2）/n;最少需要6块盘
c，jbod：简单的将多个盘叠加成一个大的盘（适用于hadoop）
性能提升无；冗余能力无；空间利用率100%
&lt;/code>&lt;/pre>
&lt;h2 id="mdadm管理-2">mdadm管理 2&lt;/h2>
&lt;p>## 2017-12-07 ##
硬件 RAID 和软件 RAID&lt;br>
1,MD：multi disks&lt;br>
2,逻辑 RAID（软件 RAID）&lt;/p>
&lt;pre>&lt;code>a，制作了软RAID设备文件后，必须选择类型为fd，因为这个逻辑RAID依赖于系统;当系统损坏后，可能导致之前的数据不可使用; 标识为fd设备后，在保存数据后会写入一些元数据，以便在重装系统后加载模块直接使用
b，软RAID不建议配置（生产环境），可能导致数据丢失，要考虑是否可以接受这个结果
c，需要模块md
d，mdadm：将任何块设备做成RAID
模式化的命令：
1,创建模式（-C）
专用选项：
-l：级别
-n：设备个数
-a：自动为其创建设备文件
-c：chunk大小，2的n次方，默认为64K
-x：指定空闲盘
2,管理模式
--add
mdadm --manage /dev/md0 --fail /dev/sdb1
mdadm --manage /dev/md0 --remove /dev/sdb1
3,监控模式（-F），
4,增长模式（-G），
5,装配模式（-A）
6,查看信息（-D）
&lt;/code>&lt;/pre>
&lt;p>3,创建 raid0：&lt;/p>
&lt;pre>&lt;code>a，raid0需要使用的两个盘必须大小相同
b，mdadm -C /dev/md0 -l 0 -n 2 /dev/sda{5,6}
&lt;/code>&lt;/pre>
&lt;p>4,创建 raid1：&lt;/p>
&lt;pre>&lt;code>a，raid1需要使用两个盘的大小必须相同
&lt;/code>&lt;/pre>
&lt;p>5,mdadm --detail（-D） /dev/md1 查看 md1 的详细信息&lt;br>
6,mdadm --stop（-S）/dev/md1 关闭使用&lt;br>
7,mdadm -D --scan &amp;gt; /etc/mdadm.conf&lt;/p>
&lt;h2 id="linux-文件查找">linux 文件查找&lt;/h2>
&lt;p>## 2017-12-11 ##&lt;br>
1，locate&lt;/p>
&lt;pre>&lt;code>a、非实时，模糊匹配，查找是根据全系统文件数据库进行的;
b、手动生成文件数据库，updatedb（可能需要很长时间）;
c、速度快;
&lt;/code>&lt;/pre>
&lt;p>2，find&lt;/p>
&lt;pre>&lt;code>a、实时
b、精确
c、支持众多查找标准
d、遍历指定目录中的所有文件完成查找，速度慢
e、find 查找路径 查找标准 查找到以后的处理动作
查找路径：默认为当前目录
查找标准：默认为当前目录下的所有文件
处理动作：默认为显示
&lt;/code>&lt;/pre>
&lt;p>3,find 匹配标准&lt;/p>
&lt;pre>&lt;code>-name ‘filename’：对文件名做精确查找
文件名通配：
×：任意长度任意字符
？
[]
-iname ‘filename’：查找文件名不区分大小写
-regex PATTERN：基于正则表达式进行文件名匹配
-user USERNAME：根据文件名查找
-group GROUPNAME：根据组名
-uid UID：使用uid进行查找
-nouser：查找没有属主的文件
-nogroup：没有属组的文件
-type
f：普通文件 b，c，s，p
d：目录文件
-size
[+|-]k，M，G：省略+|-为精确查找，+为大于，-为小于
find -size 10M --&amp;gt; 显示的是9-10M之间的文件，
&lt;/code>&lt;/pre>
&lt;p>4,find 组合条件&lt;/p>
&lt;pre>&lt;code>-a
find -type d -a -nogroup
-o
find -type d -o -nogroup
-not
find -not -type d
find -not -type d -a -type s
&lt;/code>&lt;/pre>
&lt;p>5,find 时间戳查找&lt;/p>
&lt;pre>&lt;code>-mtime：修改时间
-ctime：改变时间
-atime：访问时间
[+|-] #单位为天
-amin：单位为分钟
-cmin：单位为分钟
-mmin：单位为分钟
[+|-] #单位为分钟
&lt;/code>&lt;/pre>
&lt;p>6,find 使用权限来查找&lt;/p>
&lt;pre>&lt;code>-perm：
mode：必须精确匹配
-mode：文件的权限完全包含该mode时才匹配
/mode：9为权限位中只要一位匹配即可
&lt;/code>&lt;/pre>
&lt;p>7,find 动作：&lt;/p>
&lt;pre>&lt;code>-print：显示（默认）
-ls：类似ls -l的形式或显示每一个文件的详细情况
-ok ls {} \; --&amp;gt; 每一次操作都需要用户确认
-exec chmod u-w {} \; --&amp;gt;不需要用户确认
eg：
find ./ -perm -020 -exec mv {} {}.new \;只要引用文件的文件名，都需要使用{}。
find / \( -nouser -o -nogroup \) -a -atime -1 -exec chown root:root {} \;
find /etc/ -mtime -7 -a -not -user root
find /etc/ -size +1M &amp;gt; /tmp/etc.largetfiles
find /etc/ -size +1M -exec echo {} &amp;gt;&amp;gt; /tmp/etc.largefiles \;
find /etc/ -size +1M | xargs echo {} &amp;gt;&amp;gt; /tmp/etc.largefiles
find /etc/ -not \( -perm -002 -o -perm -020 -o -perm -200 \) -ls
find /etc/ -not -perm -002 -a -not -perm -020 -a -not -perm -200 -ls
find /etc/ -not -perm /222 -ls
&lt;/code>&lt;/pre>
&lt;h2 id="linux-special-permission">linux special permission&lt;/h2>
&lt;p>## 2017-12-11 ##&lt;br>
SUID：运行某程序时，相应进程的属主是程序文件自身的属主，而不是启动者;&lt;/p>
&lt;pre>&lt;code>chmod u+s FILE
如果FILE本身原来就有执行权限，则SUID显示为s;否则显示为S
&lt;/code>&lt;/pre>
&lt;p>SGID：运行某程序时，相应进程的属组是程序文件自身的属主，而不是启动者;&lt;/p>
&lt;pre>&lt;code>chmod g+s DIRECTORY
在文件夹下面创建文件，文件的属组将继承文件夹的属组
&lt;/code>&lt;/pre>
&lt;p>Sticky：在一个公共的目录中，每个都可以创建文件，删除自己的文件，但不能删除别人的文件&lt;/p>
&lt;pre>&lt;code>chmod o+t DIR
chmod o-t DIR
&lt;/code>&lt;/pre>
&lt;p>umask 0002：第一位对应的是特殊权限位&lt;/p>
&lt;h2 id="linux-facl-permission">linux facl permission&lt;/h2>
&lt;p>## 2017-12-12 ##&lt;br>
1,FACL--&amp;gt;filesystem access control list&lt;/p>
&lt;pre>&lt;code>利用文件的扩展保存额外的访问控制权限
&lt;/code>&lt;/pre>
&lt;p>2,setfacl：&lt;/p>
&lt;pre>&lt;code>-m：设定
[d]： u：UID：perm [设置默认]
[d]： g：GID：perm [设置默认]
-x：取消
u：UID
g：GID
文件权限顺序：
Owner--&amp;gt;Group--&amp;gt;Other
Owner--&amp;gt;facl，user--&amp;gt;Group--&amp;gt;facl，group--&amp;gt;Other
&lt;/code>&lt;/pre>
&lt;p>3,ls -l 显示文件最后具有+&lt;/p>
&lt;pre>&lt;code>归档具有facl属性的文件，很可能文件facl属性被取消，未被归档进去;需要使用特定的命令和选项才行
&lt;/code>&lt;/pre>
&lt;h2 id="linux-terminal">linux terminal&lt;/h2>
&lt;p>## 2017-12-12 ##&lt;br>
1,whoami&lt;br>
2,终端类型：&lt;/p>
&lt;pre>&lt;code>console：控制台--&amp;gt;直接连到设备的硬件
pty：物理终端（VGA显卡）
tty#：虚拟终端（VGA显卡）
ttyS#：串行终端
pts/#:伪终端（伪文件系统）
&lt;/code>&lt;/pre>
&lt;p>3,su 过去的用户不是登录用户，虽然有效用户是期望用户（whoami 有效用户/who 登录用户）的差别&lt;/p>
&lt;pre>&lt;code>w：显示哪些用户登录并且正在执行的命令是什么
who：显示哪些用户登录
whoami：显示当前有效用户是哪个
&lt;/code>&lt;/pre>
&lt;p>4,显示过去登录情况信息&lt;/p>
&lt;pre>&lt;code>last：显示/var/log/wtmp显示系统的用户登录历史和重启历史
last -n 显示近期几次的信息
lastb：显示/var/log/btmp显示系统上错误的登录尝试信息last（b：bad）
lastb -n 显示近期几次失败登录信息
lastlog：显示每一个用户的最近一次的登录信息
lastlog -u username显示特定用户最近的登录信息
basename：直接获取一个文件或路径的基名
$0：执行脚本是的脚本路径及名称
mail：邮件使用
-s：指定主题
cat /etc/fstab | mail -s ‘How are you？’ root
hostname：显示当前主机的主机名
$HOSTNAME：系统环境下的主机名变量
$RANDOM：保存0-32768之间的随机数
&lt;/code>&lt;/pre>
&lt;p>5,随机数生成器：熵池（要用到的时候就被那走了，不是复制），大量的加密软件需要用到该随机数&lt;/p>
&lt;pre>&lt;code>/dev/urandom（软件模拟）:可能被攻破，但数量可大量获取
/dev/random（cpu中断，敲键盘间隔时间获取）:安全系数高，但量少，可能导致进程堵塞
&lt;/code>&lt;/pre>
&lt;h2 id="linux-sed">linux sed&lt;/h2>
&lt;p>## 2017-12-16 ##&lt;br>
1、linux 下需要掌握的三大文本处理器：grep、sed、awk&lt;/p>
&lt;pre>&lt;code>sed：流编辑器
awk：报告文本生成器
&lt;/code>&lt;/pre>
&lt;p>2、sed 的基本用法（string editor）：只用于处理纯 askii 文本&lt;/p>
&lt;pre>&lt;code>a、逐行处理（行编辑器）：每次读取一行到内存当中，在内存中处理，而后将模式空间打印至屏幕
b、在内存中占用的空间称之为模式空间
c、默认情况下，sed仅处理模式空间中复制的文本，不更改源文件
d、命令格式：
sed ‘AddressCommand’ file ... address和command之间不需要空格间隔
-n：静默模式，不再默认显示模式空间中的内容
-i：直接修改源文件
-e SCRIPT -e SCRIPT：可以同时使用多个脚本
-f /PATH/TO/SCRIPT：读取sed脚本文件
sed -f /path/to/script file
-r：表示使用扩展正则表达式（未加该参数，默认使用基本正则表达式）
Address：
1、StartLine，Endline --&amp;gt; 1,100
$:最后一行
$-1：倒数第二行
2、/RegExp/做模式匹配，内部有特殊字符时，需要转意 --&amp;gt; /^root/
3、/pattern1/,/pattern2/ --&amp;gt; 第一次被pattern1匹配到的行开始，到第一次被pattern2匹配到的行结束
这中间的所有行
4、LineNumber
指定的行
5、StartLine,+N
从StartLine开始，往后的N行
Command：
p：打印符合条件的行（默认），使用该命令时，会将匹配的内容打印两次（结合sed默认行为）
sed '1,+2p' /etc/fstab
d：删除符合条件的行
sed '1,$d' /etc/fstab
sed -i '/pattern to match/d' ./infile
sed -i '/^abc/,+4d' ./xxxfile
# To directly modify the file (and create a backup):
sed -i.bak '/pattern to match/d' ./infile
a \string：在指定的行后面追加新行，内容为“string”
sed '/^\//a \#hello world \n #hello linux' /etc/fstab
i \string：在指定的行前面追加新行，内容为“string”
sed '/^\//i \Hello.....' /etc/fstab
r FILE：将制定的文件的内容添加至符合条件的行处
sed ’$r /etc/issue' /etc/fstab
sed ’1,2r /etc/issue' /etc/fstab
w FILE：将地址指定范围内的内容另存至指定的文件中
sed ’/oot/w /tmp/oot.file‘ /etc/fstab
s/pattern/string/:pattern可以使用正则表达式，string不能(/可以替换成其他的符号）
sed ‘s/oot/OOT/’ /etc/fstab
sed ‘s/^\//#/' /etc/fstab（默认替换每行中第一次被模式匹配到的字符串）
sed ‘s/^\//#/g' /etc/fstab
加修饰符：
g：全局
i：忽略大小写
后向引用：\(\),\1,\2,..
sed ’#\(l..e\)#\1r#g' sed.txt --&amp;gt; like替换成liker
&amp;amp;：引用模式匹配到的内容
sed ‘s#l..e#&amp;amp;r#g' sed.txt --&amp;gt; like替换成liker
有些时候只能使用后向引用而不能使用&amp;amp;符号，当要替换匹配内容中的内容时
sed ‘s#l\(..e\)#L\1#g’ /etc/fstab
&lt;/code>&lt;/pre>
&lt;h2 id="linux-归档">linux 归档&lt;/h2>
&lt;p>## 2017-12-16 ##&lt;br>
1,linux 下常用的压缩格式：gz，bz2,xz，gzip，Z&lt;br>
2,压缩的方式，使用替换的方式进行，abcd--&amp;gt;将 a 替换成 1,后续全部采用该方式&lt;/p>
&lt;pre>&lt;code>算法不同，压缩比也不相同
&lt;/code>&lt;/pre>
&lt;p>3,gzip：.gz&lt;/p>
&lt;pre>&lt;code>gzip /path/to/somefile：压缩完成后会删除源文件
gzip -d /path/to/somefile：解压缩
gzip -#：1-9，指定压缩比，默认为6;
gunzip：解压缩，解压完成后删除源文件
&lt;/code>&lt;/pre>
&lt;p>4,zcat：在不解压的情况下查看文本文件内容，zcat /path/to/somefile&lt;br>
5,bzip2：.bz2 比 gzip 有着更大的压缩比，使用格式近似&lt;/p>
&lt;pre>&lt;code>bzip2 /path/to/somefile
-k：压缩时保留源文件
bunzip2 /path/to/somefile
...
...
bzcat：不解压的情况下查看文本文件内容
&lt;/code>&lt;/pre>
&lt;p>6,xz：.xz 压缩比更大&lt;/p>
&lt;pre>&lt;code>xz /path/to/somefile
-k：压缩时保留源文件
unxz /path/to/somefile
xzcat：不解压的情况下查看文本文件内容
默认这些压缩软件压缩完文件会删除源文件
&lt;/code>&lt;/pre>
&lt;p>7,zip：大多数系统默认支持的工具，既归档又压缩的工具&lt;/p>
&lt;pre>&lt;code>zip FILENAME.zip FILE1 FILE2 ...
默认保存源文件
unzip filename.zip
&lt;/code>&lt;/pre>
&lt;p>8,tar：归档工具，只归档不压缩&lt;/p>
&lt;pre>&lt;code>-c：常见归档文件
-f FILENAME.tar：操作的归档文件
-x：还原归档，归档文件不动
--xattrs：zai归档时保留文件的扩展文件属性
-t：不展开归档，直接查看归档了哪些文件
-zcf：调用gzip归档并压缩
-zxf：调用gzip解压缩（-z可省略，下同）
-jcf：调用bzip归档并压缩
-jxf：调用bzip归解压缩
-Jcf：调用xz归档并压缩
&lt;/code>&lt;/pre>
&lt;p>9,cpio：归档工具（比较特殊，在/boot/×.img 文件需要使用）&lt;br>
10,脚本编程结构：&lt;/p>
&lt;pre>&lt;code>a、顺序
b、循环
for
while
until
c、选择
if
case
&lt;/code>&lt;/pre>
&lt;h2 id="linux-network-1">linux network 1&lt;/h2>
&lt;p>## 2017-12-21 ##&lt;br>
1、电磁信号&lt;br>
2、协议&lt;br>
3、网卡速度需要转换&lt;br>
4、计算机通信模型：线路、网卡、数据流大小&lt;br>
5、常用网络模型：&lt;/p>
&lt;pre>&lt;code>a、总线网络：需要用到线路仲裁，防止通信冲突，一根总线，各台机单独连接上这根线
批注 -- 总线网络基础推出网桥，相当于是网桥上的每两个口互连时只有这两台机占用‘总线’
b、环状网络：主机以环形的方式连接成网络，令牌在哪台机上主机才能发送信号（IBM专利）
c、星型网络：需要有集线器（HUB），可以理解为变形的总线，线变成了一个设备
&lt;/code>&lt;/pre>
&lt;p>6、MAC：media access control（MAC 地址）&lt;br>
7、单播与多播：&lt;/p>
&lt;pre>&lt;code>多播：一对多的形式
单播：一对一的形式
&lt;/code>&lt;/pre>
&lt;p>8、CSMA/CD：carrier sense multipath access collision detection（载波侦听，多路访问，冲突检测）
具有该特征的称为以太网，以太网的标志; Ethernet --&amp;gt; 以太网
9、信号的传输受线路的长度影响，若太长，电阻会减弱信号。此时需要中继器来增强信号，将信号放大之后再传输。&lt;br>
10、当总线网络大到一定程度后，需要拆分为多个小的总线网络。当分属于两个不同总线网络的主机需要通信时，需要借助网桥来进行通信。&lt;br>
11、网桥内部存有一个网络和主机对应的信息表，因此在数据传输时，能够正常不出错&lt;/p>
&lt;pre>&lt;code>a、网桥极端，就是一台主机一个总线网络，两台主机之间发信号，不影响其他主机之间的通信
1、半双工，A给B发信号的时候，B不能给A发;同轴线 --&amp;gt; 对讲机
2、全双工，可以同时互相之间发信号;双绞线 --&amp;gt; 电话
b、变成了交换机，只能的体现在内部的信息表
c、任何一台主机在实现通信之前，新来的成员，让大家认识，都要喊一嗓子，广播寻人
d、交换机（网桥）并不能隔离广播，在主机发出广播之后，交换机必须转发广播;隔离的是冲突，冲突域的概念
e、当一个交换机上连接的主机数很多，因为通信需要广播，会导致很多的问题，所以此时需要再次细分网络
f、细分网络后，交换机与交换机之间增加一个设备，称之为网关设备，
g、源ＭＡＣ为自己的ＭＡＣ地址，目标ＭＡＣ则是ｆｆｆｆｆｆｆｆ，交换机（网桥）无条件转发
总线网络(一条总线接多台设备) --&amp;gt; 多个总线网络(网桥连接多个小的总线网络) --&amp;gt; 多个总线网络(一条总线一台设备,全双工,互传不影响) --&amp;gt; 交换机
&lt;/code>&lt;/pre>
&lt;p>12、以上所讲均为平面地址（物理地址，基于 MAC 地址）;交换机之间通信引入另一个地址（逻辑地址，基于 IP 地址）&lt;/p>
&lt;pre>&lt;code>a、MAC地址的工作机制就是基于广播的
b、交换机接收到报文之后不做任何处理，直接转发出去
c、网管设备在接收到报文之后，需要先处理
d、网络传输包的形式：
1.1 | 2.1 -&amp;gt; 1.1 | 2.1 | A | R1 -&amp;gt; 1.1 | 2.1 -&amp;gt; 1.1 | 2.1 | R2 | M
1.1 | 2.1的作用是在网络之间传输数据包
ｅ、网关设备连接交换网络
&lt;/code>&lt;/pre>
&lt;p>13、网络类型&lt;/p>
&lt;pre>&lt;code>a、环型网络中，环状网路中有一个token，在没有传输时，令牌游走在环状网路中，当有机器需要传输时，拿到令牌开始发送
b、星型网络中，居中的设备是一个HUB，在整体结构上来说，仍属与总线型网络
&lt;/code>&lt;/pre>
&lt;p>14、网络的进化&lt;/p>
&lt;pre>&lt;code>总线网络 -- 集线器连接网络（星型网络） -- 网桥连接网络 -- 网桥（交换机VLAN）连接网络
a、总线用于联通，只满足各pc之间可以通信的功能
b、星型网络，仍只是满足各pc之间通信的功能，只是网线变成了一个设备
c、为了隔离冲突域，出现了网桥，可以将网络细分，减少每个总线网络中的主机数;当到达极致时，就是一台主机一个总线网络
d、当网桥上连接的总线网络过多时，因不能隔离广播，会导致各种问题;此时就出现了VLAN的概念（可隔离广播）
&lt;/code>&lt;/pre>
&lt;p>15、几种设备的差别&lt;/p>
&lt;pre>&lt;code>a、集线器：创建一个冲突域和广播域
b、网桥：网桥分割冲突域，但只形成一个大型广播域，使用硬件地址来过滤网络
c、交换机：交换机是一个更智能的多端口网桥，可以分割冲突域，淡漠人创建一个大型广播域，交换机使用硬件地址来过滤网络
d、路由器：路由器分割冲突域和广播域，并使用逻辑地址过滤网络;路由器执行分组交换、过滤和路径选择，帮助完成互联网通信
- 冲突域: 是一个以太网术语,指的是这样一种网络情形 -&amp;gt; 某台设备在网络上发送分组时,当前网段中的所有其他设备都必须注意到这一点
- 广播域: 同一网段中所有设备的集合,这些设备侦听该网段中发送的所还有广播
&lt;/code>&lt;/pre>
&lt;h2 id="linux-network-2">linux network 2&lt;/h2>
&lt;p>## 2017-12-23 ##&lt;br>
1、当增加了网关设备之后，有了逻辑地址，同一个交换网络之间的通信也通过逻辑地址来进行&lt;br>
2、最底层的通信仍然是依赖于 MAC 地址通信，此时引入一个概念，ip 地址和 MAC 地址之间的转换，ARP 协议，地址转换协议&lt;br>
5、路由器隔离广播&lt;br>
3、总线网络下，最多只能有一路信号发送，不然会发生冲突&lt;br>
4、网桥可以理解为就是两个口的交换机&lt;br>
5、路由器隔离广播&lt;br>
6、IP 和端口绑定起来，称之为 socket（套接字）IP：port&lt;br>
7、协议分层（OSI 模型）&lt;br>
8、各种设备的差别：&lt;/p>
&lt;pre>&lt;code>总线：一条网线，一次只允许单台机单向通信
集线器：多个网线接口，可以连接多条网线，每次只能允许两个接口直接的单向通信;可理解为变形的总线，线变成了一个设备
简单交换机：可理解为复杂化的集线器，多个网线接口，可以连接多条网线，但可允许同时多个接口对（两两之间）互相通信
网桥：隔离冲突域的作用，主要是用来联通各个网段
路由器：
&lt;/code>&lt;/pre>
&lt;p>9、分辨一台设备工作是在 OSI 模型的第二层还是第三层，最主要的区别的是看是否具有路由选择功能。&lt;br>
10、网桥工作在 OSI 模型的第二层：数据链路层，因为网桥不具备路由选择功能。&lt;br>
11、面向连接的网络服务和无连接网络服务&lt;/p>
&lt;pre>&lt;code>a、面向连接的网络服务使用确认和流量控制来建立可靠的会话;相较无连接服务而言，开销更高
b、无连接服务用于发送无需进行确认和流量控制的数据，但不可靠
&lt;/code>&lt;/pre>
&lt;p>12、OSI（Open system interconnection 开放系统互联）七层模型&lt;/p>
&lt;pre>&lt;code>a、应用层、表示层和会话层属于上层，负责用户界面和应用程序之间的通信
b、传输层提供分段、排序和虚电路（三次握手建立的东西之类的）
c、网络层提供逻辑网络编址以及在互联网络中路由的功能
d、数据链路层提供了将数据封装成帧并将其放到网络介质上的功能
e、物理层负责将收到的0和1编码成数字信号，以便在网段中传输
&lt;/code>&lt;/pre>
&lt;h2 id="bash-scripts-3">bash scripts 3&lt;/h2>
&lt;p>## 2018-01-16 ##&lt;br>
1、执行结果不是执行状态结果，这个要搞清楚&lt;br>
2、shell 中怎样进行运算&lt;/p>
&lt;pre>&lt;code>A=3;B=6
a、let加上算数表达式
let C=$A+$B
b、$[算数表达式]
$[$A+$B]
c、$((算数运算表达式))
$(($A+$B))
d、expr 算数运算表达式：表达式中各操作数及运算符之间要有空格，而且要使用命令引用
D=$(expr $A + $B)
e、圆整，丢弃小数点后数字
&lt;/code>&lt;/pre>
&lt;p>3、脚本中分区块判断是否需要执行下去，如果达不到条件，则没有必要继续执行下去，浪费系统资源&lt;/p>
&lt;pre>&lt;code>如果系统中没有某个用户，则不需要在后续继续做基于该用户名字的判断和操作
&lt;/code>&lt;/pre>
&lt;h2 id="bash-scripts-4">bash scripts 4&lt;/h2>
&lt;p>## 2018-01-16 ##&lt;br>
1、exit&lt;/p>
&lt;pre>&lt;code>退出脚本，返回脚本执行结果状态值，可自定义;如果没有明确定义退出状态码，那么最后一条命令的退出码即为脚本的退出码
&lt;/code>&lt;/pre>
&lt;p>2、学习完成后，需要单独整理完成，成为一篇单独的博客&lt;br>
3、bash 中常用的条件判断有三种&lt;/p>
&lt;pre>&lt;code>整数测试：这种情况做对比，需要使用中括号
-gt
-lt
-le
-ge
-ne
-eq
文件测试：
-e FILE：是否存在，单目操作
-f FILE：测试文件是否为普通文件
-d FILE：测试指定路径是否为目录
-r/w/x FILE：测试当前用户对指定文件是否具有r/w/x权限
&lt;/code>&lt;/pre>
&lt;p>4、测试方法：&lt;/p>
&lt;pre>&lt;code>[ expression ] --&amp;gt;命令测试法，[为命令
[[ expression ]] --&amp;gt;关键字测试法，[[为关键字
test expression --&amp;gt;test命令测试
&lt;/code>&lt;/pre>
&lt;p>5、bash 相关参数&lt;/p>
&lt;pre>&lt;code>bash -n scripts：不能作为依据，模糊参考作用
bash -x scripts：单步执行，可用来做测试，检验脚本中的错误
&lt;/code>&lt;/pre>
&lt;p>6、bash 变量的类型：&lt;/p>
&lt;pre>&lt;code>本地变量（局部变量） a=1这种方式定义
环境变量（当前shell进程及其子进程） export a=1这种方式定义
位置变量：
$1,$2 ...
shift:位置参数的更改，执行一次shift（不加数字），位置参数向左移一个
特殊变量：
$?:
$#:参数的个数
$*:参数列表
$@:参数列表
&lt;/code>&lt;/pre>
&lt;h2 id="bash-scripts-5">bash scripts 5&lt;/h2>
&lt;p>## 2018-01-18 ##&lt;br>
1、字符测试：&lt;/p>
&lt;pre>&lt;code>==：测试是否相等，在[[]],[]中使用时，=两端需要有空格，否则变成了赋值运算
！=：测试是否不等，不等为真，相等为假
&amp;gt;
&amp;lt;
-n string：测试指定字符串是否为空，空则真，不空则假
-s string：测试指定字符串是否为空，空则假，不空则真
&lt;/code>&lt;/pre>
&lt;p>2、bc 的使用&lt;/p>
&lt;pre>&lt;code>脚本中可以使用两种方式传递参数给bc
bc &amp;lt;&amp;lt;&amp;lt; ‘xxxxx;xxxx’
echo “scale=2；222/333” | bc
&lt;/code>&lt;/pre>
&lt;p>3、循环：进入条件、退出条件&lt;/p>
&lt;pre>&lt;code>for巡检
seq [start [length]] last
declare声明：
-i：声明为整数
-x：将一个变量声明为环境变量
while循环
until循环
&lt;/code>&lt;/pre>
&lt;h2 id="bash-进程管理-1">bash 进程管理 1&lt;/h2>
&lt;p>## 2018-01-22 ##&lt;br>
1、内存：&lt;/p>
&lt;pre>&lt;code>线性内存：
32bit：
进程开始即给自己分配4G大小的空间，1G留给内核，剩余均认为属于自己
物理内存
&lt;/code>&lt;/pre>
&lt;p>2、接口&lt;/p>
&lt;pre>&lt;code>内核空间：涉及到敏感信息均由内核空间进行
内核需要记录追踪每一个进程的运行状态信息，明确知道当前系统运行多少个进程
用户空间
&lt;/code>&lt;/pre>
&lt;p>3、内核数据结构（task structure）&lt;/p>
&lt;pre>&lt;code>保存在内核当中，用于记录追踪进程状态信息（每一个进程都有）;进程执行到一半（mkdir为例），交接了，执行完交接、
任务后重新开始、依赖于此（可类比于主持人控制流程，不同人上台表演）
PPID：
PID：
name：
...
哪里停止，哪里重新开始
&lt;/code>&lt;/pre>
&lt;p>4、MMU（memory management unit）内存管理单元：&lt;/p>
&lt;pre>&lt;code>进程的页面数据对应到物理内存（页框）的位置，每一次转换都是由MMU负责完成
&lt;/code>&lt;/pre>
&lt;p>5、进程上下文切换（context switch）&lt;/p>
&lt;pre>&lt;code>VSZ（virtual size）虚拟内存集
RSS（resident size）常驻内存集
&lt;/code>&lt;/pre>
&lt;p>6、cpu 多核也不能同时执行指令，而是在每一个 cpu 核心排队的队列减少&lt;/p>
&lt;pre>&lt;code>多线程CPU（mysql多个用户同时发出请求为例）
一个进程下面分为多个线程
&lt;/code>&lt;/pre>
&lt;p>7、线程及进程的区别&lt;/p>
&lt;pre>&lt;code>线程的优势：还是以mysql为例，三个线程可以共用打开的文件，三个进程则在内存中需要打开文件三次，占用三倍空间
线程的劣势：多个线程在共用一个文件，一个线程在写文件，该文件则被锁，其余线程需要等待释放，cpu不断检查浪费资源
&lt;/code>&lt;/pre>
&lt;p>8、进程状态&lt;/p>
&lt;pre>&lt;code>uninterruptable sleep：不可中断睡眠，需要调用的外部资源仍然未得到满足，进程等待内存加载I/O设备中的数据，进入到、
睡眠状态，防止资源浪费
interruptable sleep：可中断睡眠，standby状态，当有外部请求进来时进入到活跃状态
判断差别主要看是否调用外部I/O来进行
zombie：僵尸进程，进程结束了，但是内存中占用的空间无法释放
进程包含父子关系，子进程结束由父进程回收资源
&lt;/code>&lt;/pre>
&lt;h2 id="bash-进程管理-2">bash 进程管理 2&lt;/h2>
&lt;p>## 2018-01-23 ##&lt;br>
1、进程有优先级概念：&lt;/p>
&lt;pre>&lt;code>linux中有0-139共140个优先级，数字越小，优先级越高
100-139用户可控制
0-99仅由内核进行控制
&lt;/code>&lt;/pre>
&lt;p>进程的分类：&lt;/p>
&lt;pre>&lt;code> 跟终端相关的进程
跟终端无关的进程
&lt;/code>&lt;/pre>
&lt;p>2、O 标准：队列长度变长，选取优先执行进程的时间（时间，队列长度）&lt;/p>
&lt;pre>&lt;code>O（1）：一条平行于Y轴的直线
O（n）：一条斜线，线性变化
O（logn）：logn曲线
O（2^n）：2^n曲线
&lt;/code>&lt;/pre>
&lt;p>3、优先级更高：&lt;/p>
&lt;pre>&lt;code>a、获得更多的CPU运行时间
b、更优先获得运行的机会
nice值（-20——19）--&amp;gt; （100——139）
普通用户仅能调大自己进程的nice值
&lt;/code>&lt;/pre>
&lt;p>4、每一个进程的 pid 号是唯一的，可能已经退出，但不会被其他新建进程占用&lt;/p>
&lt;pre>&lt;code>每个进程所有的信息保存在/proc目录下以pid号命名的文件夹中
目录下的文件为内核信息的映射，proc为伪文件系统，参数被映射成为名字
&lt;/code>&lt;/pre>
&lt;p>5、相关命令&lt;/p>
&lt;pre>&lt;code>ps（process state）：进程状态
linux分为两个版本--&amp;gt; system V风格 （命令需要－）&amp;amp;&amp;amp;　ＢＳＤ风格（不能有－）
ａ：显示所有跟终端有关的进程
ｕ：显示进程的用户相关信息
ｘ：显示所有与终端无关的进程
-e：显示所有进程
-F：显示更详细的信息
-l：长格式
-o：自己组合输出内容
aux，-elF，-ef，-eF几种组合
ps aux显示的内容当中
TIME：显示的是该进程实际占用CPU的时长
COMMAND：包含有[]表示为内核线程
进程状态：
Ｄ：不可中断的睡眠
Ｒ：运行或停止
Ｓ：可中断的睡眠
Ｔ：停止
Ｚ：僵死态
＜：高优先级进程
Ｎ：低优先级进程
＋：前台进程组中的进程
ｌ：多线程进程
ｓ：会话进程首进程
pstree：显示进程树
pgrep：仅显示特定进程的进程号
-u（euid）：指定是哪个用户的进程
-U：指定哪个用户的进程
pidof：根据程序名查找进程号
top：实时显示系统上运行的进程状态
c：显示详细的进程命令
-b：批处理模式，分屏列出所有进程信息
-n：在批模式下，指定显示几批
-d：指定刷新时长
&lt;/code>&lt;/pre>
&lt;p>6、进程间通信（IPC：inter process communication）&lt;/p>
&lt;pre>&lt;code>共享内存：
信号（signal）：
重要的信号：
1：sighup --&amp;gt; 让一个进程不用重启，就可以重读其配置文件，并让新的配置文件生效
2：sigint --&amp;gt; ctrl+c 中止
9：sigkill --&amp;gt; 杀掉一个正在进行的进程（直接杀死，不留时间）
15：sigterm --&amp;gt; 终止一个正在进行的进程（提前通知，有反应时间）--&amp;gt; 默认信号
指定一个信号：
信号号码：kill -1
信号名称：kill -SIGKILL
信号名称简写：kill -KILL
semaphore：旗语
&lt;/code>&lt;/pre>
&lt;p>7、终止进程&lt;/p>
&lt;pre>&lt;code>kill PID：指定pid号
killall command：指定command
&lt;/code>&lt;/pre>
&lt;p>8、调整 nice 值&lt;/p>
&lt;pre>&lt;code>调整已经启动的进程的nice值：renice NI PID
启动时指定进程的nice值：nice -n NI COMMAND
&lt;/code>&lt;/pre>
&lt;p>9、前端后端 bg、fg&lt;/p>
&lt;pre>&lt;code>前台：占据了命令提示符
后台：启动之后，释放了命令提示符，后续的操作在后台完成
前台--&amp;gt; 后台：
ctrl+z：把正在前台的作业送往后台运行，默认发送STOP信号
command &amp;amp;：让命令在后台运行
bg：让后台停止的作业继续运行
bg [[%]JOBID]
jobs：查看后台的所有作业
作业号，不同于进程号
+：命令将默认操作的作业
-：命令将默认操作的第二个作业
fg：将后台的作业调回前台
fg [[%]JOBID]
kill %JOBID：终止某作业
&lt;/code>&lt;/pre>
&lt;p>10、vmstat（系统状态查看命令）&lt;/p>
&lt;pre>&lt;code>r：运行队列长度
b：阻塞队列长度
buff：缓冲
cache：缓存
si：换进
so：换出
bi：读入
bo：写出
in：interrupt
cs：context switch（上下文切换，进程数据切换次数）
&lt;/code>&lt;/pre>
&lt;p>11、/proc/meminfo&lt;/p>
&lt;pre>&lt;code>查看memory相关信息
cat /proc/meminfo
查看进程相关内存使用
cat /proc/pid/maps
&lt;/code>&lt;/pre>
&lt;h2 id="bash-boot-process-1">bash boot process 1&lt;/h2>
&lt;p>## 2018-01-23 ##&lt;br>
1、启动流程&lt;/p>
&lt;pre>&lt;code>POST--&amp;gt; BIOS（boot sequence按照指定的启动顺序执行）--&amp;gt; MBR（bootloader，446字节）（grub stage1）
--&amp;gt; grub stage2 --&amp;gt; kernel --&amp;gt; initrd --&amp;gt; init
a、加载mbr的同时加载了kernel和initrd，kernel使用initrd生成ROOTFS
b、init：
&lt;/code>&lt;/pre>
&lt;p>2、root 文件系统 rootfs&lt;/p>
&lt;pre>&lt;code>所有的挂载根源为/
&lt;/code>&lt;/pre>
&lt;p>3、内核设计风格：&lt;/p>
&lt;pre>&lt;code>单内核：linux（LWP：light weight process）
核心：ko（kernel object）
RedHat，SUSE，Debian：
1、动态加载，内核模块
2、内核：/lib/modules/“内核版本号命名的目录”/
3、!$/kernel/*
arch：平台相关
crypto：加密相关
drivers：驱动相关
fs：文件系统相关
kernel：内核其他相关的功能
lib：库文件
mm：内存管理
net：网络相关
sound：声卡
微内核：windows，solaris（实现真正的多线程）
&lt;/code>&lt;/pre>
&lt;p>4、initramfs 用于过渡的虚拟文件系统&lt;/p>
&lt;pre>&lt;code>在系统安装程序即将完成系统安装时，自动判断需要加载哪些模块才能让内核识别到文件系统，从而打包生成过渡文件系统\
加载了initramfs文件，其下包含有/sbin，/bin等目录
&lt;/code>&lt;/pre>
&lt;p>5、chroot 命令，用户切换之独立的目录下，并以该目录作为根目录运行系统&lt;/p>
&lt;pre>&lt;code>chroot /PATH/TO/TEMPROOT [COMMAND...]
ldd /PATH/TO/BINARY_FILE 显示二进制文件依赖的共享库文件
测试：
a、mkdir /virroot/bin;mkdir /virroot/lib
b、cp /bin/bash /virroot/bin;
c、ldd /bin/bash
d、cp 上一步找出的依赖库文件，复制至相应目录
e、chroot /virroot可以切换，但仅可使用内置命令
initramfs切换机制同上，但不是使用chroot命令;完完全全的切换，但会搬移三个文件夹，在initramfs阶段已经映射好，没有
必要再次映射
/proc
/sys
/dev
&lt;/code>&lt;/pre>
&lt;p>6、initramfs 为一个文件，可以将物理内存当中的一部分模拟成硬盘来使用&lt;/p>
&lt;pre>&lt;code>rhel5：ramdisk --&amp;gt; initrd
rhel6：ramfs --&amp;gt; initramfs
内核访问根一般需要两个模块：
识别磁盘的模块
识别根目录文件系统的模块
&lt;/code>&lt;/pre>
&lt;p>7、启动过程详解&lt;/p>
&lt;pre>&lt;code>bootloader（MBR) --&amp;gt; 硬盘级别的程序
lilo：linux loader
grub：grand unified bootloader;
rhel5和rhel6使用的grub版本不一样
grub本身是一个程序，需要装在MBR的bootloader（446字节）当中，用来引导操作系统;grub分为两段，是一个两阶段的程序
stage1：装在MBR当中，主要作用是用来引导第二阶段
stage1.5：用来帮助识别不同的文件系统的
stage2：/boot/grub/; 主要作用是用来引导操作系统
/etc/grub.conf 文件是一个链接，链接到/boot/grub/grub.conf
grub.conf:
全局配置：
default=×：设定默认启动的title编号，从0开始
timeout=×：等待用户选择的超时世间，单位为秒
splashimage=（hd0,0）/grub/xxxx：grub的背景图片
hiddenmenu：隐藏菜单
password：后接字符串（明文密码），后接--md5 字符串（加密密码）
使用命令grub-md5-crypt得到密码的加密输出，填入上面的md5后即可
单独的系统设置：
title 后版本号 --&amp;gt;内核版本，或操作系统名称，纯字符串，可自由更改
root（hd0,0）：内核文件所在的设备;对grub而言，所有类型的硬盘一律识别为hd×，最后的0表示对应磁盘的分区，，隔开
kernel /vmlinux××××××：内核文件路径，及传递给内核的参数
initrd /initrd-×××：ramdisk文件路径
所有的内容都可以单独更改，重启后生效;image需要注意的是，格式为xpm，像素为14,需要使用gzip压缩
boot单独分区和boot不单独分区，在系统引导时访问的路径不一样
单独分区时，/vmlinuzxxx
不单独分区时，/boot/vmlinuz
文件系统的结构数据是放在磁盘上的
虚拟机重启时（vcenter上），不要按重启按钮直接重启，可能导致文件丢失，要这样做的时候，先执行sync命令
看一下马哥的博客
&lt;/code>&lt;/pre>
&lt;h2 id="bash-boot-process-2">bash boot process 2&lt;/h2>
&lt;p>## 2018-01-31 ##&lt;br>
1、grub 界面的使用&lt;/p>
&lt;pre>&lt;code>e edit
进入到内核行，空格后输入1、s、S、single都可进入到单用户模式
password字段可以放在顶部全局配置，也可以放在某个title下，用作启动内核输入密码（输入密码才能启动系统）
c command
b boot
&lt;/code>&lt;/pre>
&lt;p>2、查看当前系统运行级别&lt;/p>
&lt;pre>&lt;code>runlevel
who -r
&lt;/code>&lt;/pre>
&lt;p>3、安装 grub stage1，要判断是哪块磁盘&lt;/p>
&lt;pre>&lt;code>第一种方式：
a、命令行界面下输入grub，进入grub命令行界面
b、指定root位置;
grub&amp;gt; root （hd0,0）无报错内容
c、直接键入setup （hd0,0），在正确的分区上重新生成grub
grub&amp;gt; setup （hd0,0）
d、执行成功
第二种方式：
grub-install --root-directory=/path/to/boot‘s parent directory/ /PATH/TO/DEVICE
确保内核所在分区挂载在root目录下0
&lt;/code>&lt;/pre>
&lt;p>4、在删除了 grub.conf 的系统上怎样手动引导进入操作系统&lt;/p>
&lt;pre>&lt;code>a、启动操作系统后会进入到grub界面
grub&amp;gt;
b、键入各个root组合，判断是否可用
grub&amp;gt; root （hd0,0）
c、查找vmlinux和initrd文件的具体路径和名字，可以在grub界面下使用find命令
grub&amp;gt; find （hd0,0）/
输出结果中会将该分区下的文件显示出来
d、输入kernel行内容
grub&amp;gt; kernel /vmlinuzxxx tab建可以补全
e、键入initrd行内容
grub&amp;gt; initrd /initramfsxx tab键可以补全
f、键入boot进入系统
grub&amp;gt; boot
&lt;/code>&lt;/pre>
&lt;p>5、kernel 初始化的过程&lt;/p>
&lt;pre>&lt;code>a、设备探测
b、驱动初始化（可能会从initrd（initramfs）文件中装载驱动模块）
c、以只读方式挂载根文件系统 --&amp;gt; 出于安全考虑，防止启动过程bug导致根文件系统崩溃，后续init进程会重新以读写方式挂载
d、装载第一个进程init（PID：1）
&lt;/code>&lt;/pre>
&lt;p>6、/sbin/init：（/etc/inittab）&lt;/p>
&lt;pre>&lt;code>过往较早的unix init启动速度很慢
由ubuntu开发的upstart可以并行启动，速度变快很多，基于D-bus来完成各进程间的通信，event-driven，rhel6中使用
systemd：完整意义上并行启动多个进程的方式，rhel7中使用
以下为rhel5中的机制，inittab：
id：runlevels：action：process
id：标识符
runlevels：在哪个运行级别运行此行
action：在什么情况下执行此行
initdefault：设定默认运行级别
sysinit：系统初始化
wait：等待级别切换至此级别时完成
respawn：一旦程序终止，进程重新启动，登录错误（用户，密码错误） --&amp;gt; 在登录界面的时候使用，用于控制终端的××××
process：要运行的程序
&lt;/code>&lt;/pre>
&lt;p>7、/etc/rc.d/rc.sysinit 完成的任务有哪些&lt;/p>
&lt;pre>&lt;code>a、激活udev和selinux
b、根据/etc/sysctl.conf来设定内核参数
c、设定系统时钟
d、装载键盘映射
e、启用交换分区
f、设置主机名
g、根文件系统检测，并以读写方式重新挂载
h、激活软raid和LVM设备
i、启用磁盘配额（quota）
j、根据/etc/fstab，检查并挂载其他文件系统
k、清理过期的锁和PID文件
&lt;/code>&lt;/pre>
&lt;p>8、rhel5 中/etc/inittab 文件&lt;/p>
&lt;pre>&lt;code>l0：0：wait：/etc/rc.d/rc 0
l1：0：wait：/etc/rc.d/rc 1
l2：0：wait：/etc/rc.d/rc 2
...
一行的意思为，等待进入系统后，执行/etc/rc×.d/下K×，S×的文件（使用脚本判断出来的）
&lt;/code>&lt;/pre>
&lt;p>9、/etc/init.d/ /etc/rc.d/init.d/是同一个位置，前一个是后一个的链接&lt;/p>
&lt;h2 id="bash-boot-sysv-scripts">bash boot sysv scripts&lt;/h2>
&lt;p>## 2018-02-01 ##&lt;br>
1、由/etc/rc.d/rc.sysinit 脚本完成系统的初始化&lt;br>
2、/etc/rc.d/init.d/目录下的脚本称为服务类脚本，符合 sysV 风格&lt;/p>
&lt;pre>&lt;code>每个脚本至少要接受四个参数
主要的：start|stop|restart|status
选用的：reload|configtest
&lt;/code>&lt;/pre>
&lt;p>3、在 init.d 目录下的脚本都必须包含以下的内容：&lt;/p>
&lt;pre>&lt;code># chkconfig：runlevels SS KK
a、当chkconfig命令来为此脚本在rc×.d目录创建链接时，runlevels表示默认创建为S×开口的链接，除此之外的级别默认创建
为K*开头的链接;-表示没有级别默认为S*开头的链接。
b、S后面的启动优先级为SS所表示的数字;
c、K后面关闭优先次序为KK所表示的数字;
d、一般而言，先开启的后关闭，后开启的先关闭，考虑的是程序之间的依赖关系
# description：××××
a、用于说明次脚本的简单功能;当描述较长时，使用’\‘续行
&lt;/code>&lt;/pre>
&lt;p>4、一般情况下，当一个程序运行起来后，会在/var/lock/[subsys/]目录下创建一个.lock 结尾的文件，锁文件&lt;br>
5、chkconfig&lt;/p>
&lt;pre>&lt;code>--list --&amp;gt; 查看所有独立守护服务的启动设定;独立守护进程;
--add SERVICE_NAME --&amp;gt; 将某个服务加入到chkconfig管理
--del SERVICE_NAME --&amp;gt; 删除，服务不由chkconfig管理
[--level RUNLEVELS] SERVICE_NAME {on|off} --&amp;gt; 特定级别的启动和关闭，如果省略了runlevels，默认指定为2345
将自定义的服务类脚本加入到chkconfig管理的步骤：
a、编写好服务启动类脚本（确保包含chkconfig和description这两行内容）
b、将脚本放到/etc/init.d/目录下
c、chkconfig --add SERVICE_NAME
d、chkconfig --list SERVICE_NAME即可发现，在相应的rc×.d目录下已经生成了K*，S*链接了
&lt;/code>&lt;/pre>
&lt;p>6、/etc/rc.d/rc.local：系统最后启动的一个服务，准确说，应该执行的一个脚本&lt;/p>
&lt;pre>&lt;code>a、默认在rc×.d目录下会有一个S99local（系统服务器最后启动）的链接，指向/etc/rc.local
/etc/rc.local --&amp;gt; /etc/rc.d/rc.local
&lt;/code>&lt;/pre>
&lt;p>7、/etc/inittab 的任务（rhel5）：&lt;/p>
&lt;pre>&lt;code>a、设定默认运行级别
b、运行系统初始化脚本
c、运行指定运行级别对应目录下的脚本
d、设定ctrl+alt+del组合键的操作
e、定义UPS在电源故障/恢复时执行的操作;
f、启动虚拟终端（2345级别）
g、启动图形化终端（5级别）
&lt;/code>&lt;/pre>
&lt;p>8、守护进程的类型：&lt;/p>
&lt;pre>&lt;code>独立守护进程
xinetd：超级守护进程，代理人（可类比于超级商城内的小店面）
瞬时守护进程：不需要关联至运行级别
&lt;/code>&lt;/pre>
&lt;h2 id="how-to-customed-system-os-1">how to customed system os 1&lt;/h2>
&lt;p>## 2018-02- ##&lt;br>
1、系统&lt;/p>
&lt;pre>&lt;code>核心：/boot/vmlinuz-version
内核模块（ko）：/lib/modules/version
&lt;/code>&lt;/pre>
&lt;p>2、模块装载&lt;/p>
&lt;pre>&lt;code>insmod
modprobe
&lt;/code>&lt;/pre>
&lt;p>3、用户空间访问、监控内核的方式&lt;/p>
&lt;pre>&lt;code>通过修改和查看以下两个目录下的文件来实现的
/proc/
a、该目录下的文件基本为只读文件
b、/proc/sys/此目录中的文件很多是可读写的，通过修改该目录下的文件内容来修改内核运行的特性
eg：
echo 1 &amp;gt; /proc/sys/vm/drop_cache
/sys/
a、该目录下很多文件都可读写，大部分与硬件相关
&lt;/code>&lt;/pre>
&lt;p>4、设定内核参数值的方法：&lt;/p>
&lt;pre>&lt;code>a、echo VALUE &amp;gt; /proc/sys/TO/SOMEFILE
echo 1 &amp;gt; /proc/sys/vm/drop_cache
b、sysctl -w kernel.hostname='mylab.com' --&amp;gt; 省略/proc/sys/路径，后面每多一层目录则使用.连接
sysctl -w kernel.hostname='liawne'
以上两种方式更改后能够立即生效，但不能永久有效，重启即失效
c、永久有效，但不能立即生效：更改/etc/sysctl.conf
1、修改文件完成后，执行sysctl -p让更改立即生效
2、sysctl -a 打印所有内核参数
&lt;/code>&lt;/pre>
&lt;p>5、内核模块管理&lt;/p>
&lt;pre>&lt;code>a、lsmod：显示系统所加载的模块
b、modprobe --&amp;gt; 探测模块
modprobe MODNAME：装载某模块 --&amp;gt; 自动到/lib/modules/version/下找到相对应的模块名字
modprobe -r MODNAME：卸载某模块
c、modinfo：查看模块的信息
modinfo MODNAME
d、insmod：装载模块
insmod /PATH/TO/MODULE/FILE
e、rmmod：移除模块
rmmod MODULE/FILE
f、depmod /PATH/TO/MODULES_DIR：生成特定目录下各模块之间的依赖关系，并将生成的依赖文件保存在该目录下
&lt;/code>&lt;/pre>
&lt;p>6、内核中的功能除了核心功能之外，在编译时，大多数功能都有三种选择&lt;/p>
&lt;pre>&lt;code>a、不使用此功能
b、编译成内核模块
c、编译进内核
&lt;/code>&lt;/pre>
&lt;p>7、如何手动编译内核&lt;/p>
&lt;pre>&lt;code>make gconfig：Gnome桌面环境才能使用，需要安装图形开发库GNOME Software Development
make kconfig：KDE桌面环境使用，需要安装图形开发库
make menuconfig：在内核目录下使用
a、tar xf linux-xxxx.tar.xz -C /usr/src
解压完成后，需要复制一个可参考的config文件去到linux目录下
cp /boot/config××× /usr/src/.config
b、ln -sv /usr/src/linux-xxxx /usr/src/linux
c、cd /usr/src/linux
d、make menuconfig
1、*做进内核
2、M做成模块
3、什么都不选，就什么都不做
e、编辑目录下的.config文件，设定自己系统的特性
f、make开始进行编译，维持时间会比较长，超过半小时
g、make modules_install 模块编译
i、make install 开始编译
不要在远程连接的时候编译内核，中断了之后需要完全从头开始
&lt;/code>&lt;/pre>
&lt;p>8、screen 命令&lt;/p>
&lt;pre>&lt;code>screen -ls：查看当前已经建立的screen屏幕
screen：直接打开一个新的屏幕
ctrl+a，d：拆除屏幕
在screen界面下直接使用exit会退出当前的screen屏幕
screen -r ID：通过上一条命令查看到有哪些打开的screen，通过这个进行切换回该screen
使用场景：
a,需要共享操作界面，模拟环境之后，让别人协助解决问题：
1,screen -S help打开一个名为help的screen窗口
2,另外一个人通过screen -x help连接进入到同一个窗口
3,一方敲的任何命令在另一方都能正常显示
&lt;/code>&lt;/pre>
&lt;p>9、二次编译时清理，如果有需要请备份配置文件.config&lt;/p>
&lt;pre>&lt;code>make clean：清理此前编译好的二进制模块
make mrproper：清理此前编译所残留的编译参数，包括config文件;建议执行该命令前先备份config文件
&lt;/code>&lt;/pre>
&lt;h2 id="how-to-customed-system-os-2">how to customed system os 2&lt;/h2>
&lt;p>## 2018-02-07 ##&lt;br>
1、在一个新盘上手动创建一个可以启动的系统：&lt;/p>
&lt;pre>&lt;code>a、fdisk -l /dev/sdb
--&amp;gt; /dev/sdb1
--&amp;gt; /dev/sdb2
--&amp;gt; partprobe
b、mkfs.ext3 /dev/sdb{1,2}
c、mkdir /mnt/{boot,sysroot}
d、mount /dev/sdb1 /mnt/boot
mount /dev/sdb2 /mnt/sysroot
e、grub-install --root-directory=/mnt /dev/sdb ---&amp;gt; 生成grub
f、cp /boot/vmlinuz- /mnt/boot/vmlinuz ---&amp;gt; 生成vmlinuz文件
g、更改initrd（更改mkrootdev那一行内容，若有swap内容，将swap那一行注释掉，重新压缩成initrd文件）内容后，
将文件放到/mnt/boot目录下（步骤参照3） ---&amp;gt; 生成initrd文件
# rhel5: mkinitrd /boot/initrd-$(uname -r).img $(uname -r)
# rhel6: dracut /boot/initramfs-$(uname -r).img $(uname -r)
h、vim /mnt/boot/grub/grub.conf ---&amp;gt; 配置grub.conf文件
# default=0
# timeout=5
# title Test Linux (Liawne Test)
# root (hd0,0)
# kernel /vmlinuz
# initrd /initrd.gz
i、cd /mnt/sysroot;mkdir proc sys dev etc/rc.d lib bin sbin home boot var/log usr/{bin,sbin} root tmp -pv
j、cp /sbin/init /mnt/sysroot/sbin/;cp /bin/bash /mnt/sysroot/bin/;
k、ldd /bin/bash --&amp;gt; 复制相应的依赖库文件到对应的/mnt/sysroot/lib目录下
ldd /sbin/init --&amp;gt; 复制相应的依赖库文件到对应的/mnt/sysroot/lib目录下
l、chroot /mnt/sysroot --&amp;gt; 试验是否可以使用
m、vim /mnt/sysroot/etc/inittab 编辑该文件，设定启动级别等
# id:3:initdefault:
# si::sysinit:/etc/rc.d/rc.sysinit
n、vim /mnt/sysroot/etc/rc.d/rc.sysinit; chmod +x !$
# #!/bin/bash
# echo &amp;quot;Welcome to test linux !&amp;quot;
## insmod /lib/modules/mii.ko &amp;lt;--- 后面新加内容
## insmod /lib/modules/pcnet32.ko &amp;lt;---
## ifconfig 192.168.110.99/24 &amp;lt;---
## ifconfig 127.0.0.1/8 &amp;lt;---
# /bin/bash
o、sync;sync;sync
p、将盘卸载，在其他机器上挂载，并以该盘启动，系统可以正常运行 ！！
&lt;/code>&lt;/pre>
&lt;p>2、grub --&amp;gt; kernel --&amp;gt; initrd --&amp;gt; ROOTFS（/sbin/init，/bin/bash）&lt;br>
3、/boot/initrd 文件为一个 gzip 压缩文件（file 查看），查看内部包含的内容：&lt;/p>
&lt;pre>&lt;code>第一种解压方式：
a、cp /boot/initrd-×××× /root/
b、mv /root/initrd-×××× /root/initrd-××××.gz
c、gunzip /root/initrd-××××.gz
d、ls /root/initrd-×××× （cpio文件）
e、mkdir /root/test &amp;amp;&amp;amp; cd /root/test
f、cpio -id &amp;lt; /root/initrd-×××× /root/test
-i：读入
-d：展开到当前目录下
第二种解压方式：
a、mkdir /root/iso &amp;amp;&amp;amp; cd /root/iso
b、zcat /boot/initrd-××××.img | cpio -id
更改initrd文件内容后，重新压缩：
a、cd /root/iso
b、find . | cpio -H newc --quiet -o | gzip -9 &amp;gt; /mnt/boot/initrd.gz
&lt;/code>&lt;/pre>
&lt;p>4、创建脚本，设定复制命令需要的 lib 库文件在执行脚本后直接可以满足需求&lt;/p>
&lt;pre>&lt;code>a、脚本已经创建，名字为bincopy.sh
b、在启动单独当作一个可以启动的磁盘之前，复制两个文件到/mnt/sysroot/lib/modules/目录下
mii --&amp;gt; （被pcnet32依赖）
pcnet32
文件作用是在系统开启启动的时候可以赋予ip地址（参照上面编辑rc.sysinit文件内容）
&lt;/code>&lt;/pre>
&lt;p>5、exec 命令的使用&lt;/p>
&lt;pre>&lt;code>a、exec的作用为使启动的进程直接替换掉父进程来执行，例如在当前shell下执行一个命令，加上exec后，命令所产生的进程起来
bash进程终止
b、在rhel中，使用软链接链接到同一个脚本，实现关机/重启的功能
&lt;/code>&lt;/pre>
&lt;p>6、mingetty 的作用&lt;/p>
&lt;pre>&lt;code>a、mingetty是一个命令，rhel/centos系统使用这个命令来登录系统，执行/sbin/mingetty后打开一个tty，然后在这个tty上
执行login命令，提示登录
b、可使用stty设置终端的size和属性
stty -F /dev/console size|speed --&amp;gt; 查看终端属性，显示横纵字符数|速度
&lt;/code>&lt;/pre>
&lt;p>7、修复文件系统的参考方式（文件系统错乱），在修复过程中，会将检查出错的文件直接删除的&lt;/p>
&lt;pre>&lt;code>a、在执行fsck修复之前，将文件先打包备份
find . | cpio -H newc --quiet -o | gzip &amp;gt; /root/sysroot.gz
b、umount 相应的设备
c、mkfs重新格式化后挂载
d、将之前打包的文件解压后放回
zcat /root/sysroot.gz | cpio -id
&lt;/code>&lt;/pre>
&lt;h2 id="script-knowledge">script knowledge&lt;/h2>
&lt;p>## 2018-02-27 ##&lt;br>
1，脚本编程知识点&lt;/p>
&lt;pre>&lt;code>变量中的字符长度：${#var}
&lt;/code>&lt;/pre>
&lt;h2 id="how-to-customed-system-os-two-bash-script-threeteen">how to customed system os two (bash script threeteen)&lt;/h2>
&lt;p>## 2018-02-28 ##&lt;br>
1、系统刚开机启动时显示的内容，默认就是/etc/issue 中的内容，可以自己定制内容&lt;/p>
&lt;pre>&lt;code>a、agetty，stty，mingetty都可以实现
1、系统上默认以mingetty为例，cat /etc/issue的内容存在/r及/m的内容，表示uname -r/-m的输出内容
可以在mingetty的man文档中查看到
2、stty和agetty同样也有自己相应的用法
&lt;/code>&lt;/pre>
&lt;p>2、系统用户设置&lt;/p>
&lt;pre>&lt;code>绕过pam进行登录
a、/bin/login到文件passwd和group存在一个中间层，为nsswitch（network service switch）
b、在nsswitch中定义一个框架，去哪里找到用户信息
c、nsswitch有一堆的库文件，还有自己的配置文件（库：libnss_file.so,libnss_nis.so,libnss_ldap.so）
d、配置文件nsswitch.conf，在这个文件中定义去哪里找认证信息，这就是所谓的框架的意义
e、/lib目录下以libnss开头的库文件，实现不同的用户名解析的方式
&lt;/code>&lt;/pre>
&lt;p>3、复制一个文件，保留链接地址不变&lt;/p>
&lt;pre>&lt;code>cp
-d --&amp;gt; 复制文件，保留链接
--&amp;gt; 复制链接，直接就复制了链接对应的文件本身
vim
:.,$d --&amp;gt; 当前行到文件末尾全部删除
:1,.d --&amp;gt; 从第一行到当前行全部删除
&lt;/code>&lt;/pre>
&lt;h2 id="busybox-setting-15_03">busybox setting 15_03&lt;/h2>
&lt;p>## 2018-03-06 ##&lt;br>
1，busybox：一个二进制文件，模拟实现了许许多多的命令&lt;br>
2，RHEL5.8+initrd（busybox）+rootfs（busybox）&lt;br>
3，查看本机硬件信息&lt;/p>
&lt;pre>&lt;code>a、查看cpu信息：
cat /proc/cpuinfo
b、查看usb信息：
lsusb
c、查看pci信息
lspci
d、硬件抽象层
hal-device（rhel5）
e、dmidecode（rhel6）
&lt;/code>&lt;/pre>
&lt;p>4，实现部分编译&lt;/p>
&lt;pre>&lt;code>a、只编译某子目录下的相关代码
make dir/
make arch/
make drivers/net/
b、只编译部分模块
make M=drivers/net/
c、只编译某一个模块
make drivers/net/pcnet32.so
d、将编译完成的结果放至其他目录
make O=/tmp/kernel
&lt;/code>&lt;/pre>
&lt;p>5,如何编译 busybox&lt;/p>
&lt;h2 id="bash-signal-16_01">bash signal 16_01&lt;/h2>
&lt;p>## 2020-11-25 ##&lt;br>
1, 交叉编译(用于在一个平台上编译可在多个平台上运行的程序)
make ARCH=
2, bash 中变量的赋值
${param:-word}: 如果 param 为空或者未定义,则展开变量为&amp;quot;word&amp;quot;,否则,展开为 param 的值
${param:+word}: 如果 param 为空或者未定义,不做任何操作,否则,展开为&amp;quot;word&amp;quot;的值
${param:=word}: 弱国 param 为空或者未定义,则变量展开为&amp;quot;word&amp;quot;,并将展开之后的值赋值给 param
${param:offset}: 偏移多少后,取剩下的 param 变量值
${param:offset:length}: 偏移 offset 之后,再取 length 长度的 param
3, 脚本配置文件
/etc/rc.d/init.d/服务脚本
服务脚本支持配置文件,/etc/sysconfig/服务脚本同名的配置文件&lt;/p>
&lt;h2 id="system-problem-solving-17_02">system problem solving 17_02&lt;/h2>
&lt;p>## 2018-03-06 ##&lt;br>
1，常见系统故障排除&lt;/p>
&lt;pre>&lt;code>a、确定问题的故障特征
b、重现故障
c、使用工具收集进一步信息，确定故障的真正原因
d、排除不可能的原因
e、定位故障
1、从最简单的问题入手
2、一次尝试一种方式
&lt;/code>&lt;/pre>
&lt;p>2,故障排除中的一些原则&lt;/p>
&lt;pre>&lt;code>a、任何涉及到修改源文件的操作时，都需要备份源文件
b、尽可能的借助于工具
&lt;/code>&lt;/pre>
&lt;p>3，可能出现的故障&lt;/p>
&lt;pre>&lt;code>a、管理员密码忘记
b、系统无法启动
1、grub损坏（MBR损坏，grub配置文件丢失）
MBR损坏：
模拟环境：
dd if=/dev/sda of=/root/mbr.backup bs=512 count=1 --&amp;gt; 备份操作
dd if=/dev/zero of=/dev/sda count=1 bs=200 --&amp;gt; bs小于446,否则分区表被损坏，文件系统无法使用
解决方法：
a、借助别的主机修复
b、使用紧急救援模式
1、boot.iso
2、使用完整的系统安装光盘
3、进入到grub交互界面
4、填入grub的启动root（hd0,0），find （hd0,0）2×tab，确认后执行setup（hd0,0）
grub.conf丢失
模拟环境：
mv /boot/grub/grub.conf /root
解决方法：
a、系统无法启动，进入到grub界面
b、find （hd0,0）2×tab，填入root×××回车，kernel×××回车，initrd×××回车，boot启动系统
c、进入系统后，看看能否找回配置文件，找不回则手动建立
手动建立--&amp;gt;1222
2、系统初始化故障（某文件系统无法正常挂载，驱动不兼容）
grub：编辑模式
emergency mode：系统启动过程不执行rc.sysinit脚本，在emergency模式下对系统进行修改
3、服务故障
某些服务无法启动导致系统卡住也无法启动
a、单用户模式下设置该服务不启动
b、单用户模式下更改该服务配置是其能够正常启动
c、在内核行敲击‘I'来进入交互式模式指定系统服务的启动与否（交互式模式）
4、图形界面出现故障
5、用户无法登录系统（帐号密码输入错误，bash程序故障）
bash文件被删除后，系统连1级别也无法进入
mingetty文件被删除，可以进入到单用户模式下，修复文件
PATH环境变量被损坏，可以手动export进行设定
c、命令无法运行
d、编译过程无法继续（开发环境缺少基本组件）
e、kernel panic（内核恐慌）
f、另外的故障
把默认启动级别设置为0或者6 --&amp;gt; 进入单用户模式，编辑inittab文件
/etc/init.d/rc*.d/目录被删除了 --&amp;gt; 进入单用户模式，编辑inittab文件
&lt;/code>&lt;/pre>
&lt;p>4,使用 rescue 进入救援模式后，chroot 切换至原有的根文件系统，缺少了脚本 rc.sysinit 脚本的执行，相应的就缺少了部分功能&lt;/p>
&lt;pre>&lt;code>a、常见的情况，无法识别挂载的光盘，因为缺少了udev的激活过程（/dev目录下缺少设备文件）
手动创建设备文件 --&amp;gt; mknod
&lt;/code>&lt;/pre>
&lt;p>5,系统启动过程回顾&lt;/p>
&lt;pre>&lt;code>POST --&amp;gt; BIOS（启动设备顺序依次找其MBR中的bootloader）--&amp;gt; kernel（加载initrd，挂载根文件系统rootfs，\
执行/sbin/init脚本）--&amp;gt; /etc/inittab
&lt;/code>&lt;/pre>
&lt;h2 id="sudo-settings-17_03">sudo settings 17_03&lt;/h2>
&lt;p>## 2018-03-06 ##&lt;br>
1、sudo 的功能是某个用户能够以哪一个用户的身份通过哪些主机执行哪些命令&lt;br>
2、不要使用 vi/vim /etc/sudoers，保存后无法检查编辑的语法&lt;br>
3、sudoers 文件中的语法格式&lt;/p>
&lt;pre>&lt;code>一、用户条目
who which_host = (runas) commands
which user 哪些主机可以连上来 以谁的身份连上来 允许使用哪些命令
二、default设定一些默认属性
别名：类似于组的概念，别名必须全部而且只能使用大写英文字母的组合，必须先定义才能使用，均可使用’！‘取反
a、user_alias：用户别名，可以将一些用户统一起来，用一个别名统称
User_Alias USERNAME =
用户的用户名
组名，使用%引导
还可以包含其他已经用户别名
b、host_alias：主机别名，可以将一些主机统一起来，用一个别名统称
Host_Alias
主机名
IP
网络地址
其他主机别名
c、runas：以哪个用户的身份来执行的
Runas_Alias
用户名
%组名
#uid
其他主机别名
d、cmnd_alias：命令别名，将一些命令统一起来
Cmnd_Alias
命令路径
目录（表示该目录下的所有命令）
其他事先定义过的命令别名
三、可在命令前增加标签，定义命令使用的方式
a、最常用的方式为在命令前增加NOPASSWD： --&amp;gt; 不再需要用户在使用命令前输入密码
b、对特定命令需要使用密码，某些不要使用，则在各个命令前增加（PASSWD：|NOPASSWD：）做限定
&lt;/code>&lt;/pre>
&lt;p>4、示例&lt;/p>
&lt;pre>&lt;code>a、为hadoop用户增加useradd，usermod权限
# visudo
# hadoop ALL=(root) /usr/sbin/userdel,/usr/sbin/usermod
b、增加别名，不需要使用密码
User_Alias USERADMIN = hadoop, %hadoop, %useradmin
Cmnd_Alias USERNAMECMD = /usr/sbin/usermod,/usr/sbin/userdel,/usr/sbin/useradd,/usr/bin/passwd,! /usr/bin/passwd root
USERADMIN ALL=(root) NOPASSWD:USERNAMECMD
&lt;/code>&lt;/pre>
&lt;p>5、sudo 命令的用法&lt;/p>
&lt;pre>&lt;code>-k：使认证信息失效
-l：列出当前用户所有sudo能够使用的命令列表
-i：切换至root用户
&lt;/code>&lt;/pre>
&lt;p>6、sudo 及/etc/sudoers 文件的具体使用方法都可以在 man 文档中找到&lt;br>
7、sudo 的日志文件保存在/var/log/secure 日志中，权限设置为 600&lt;/p>
&lt;h2 id="bash-array-31-01">bash array 31-01&lt;/h2>
&lt;p>## 2018-03-13 ##&lt;br>
1、变量：命名的内存空间，bash 中所有的变量均被以字符型的类型存储&lt;br>
2、数组：内存中存储连续变量&lt;br>
3、如何声明一个数组：&lt;/p>
&lt;pre>&lt;code>declare -a AA --&amp;gt;声明数组AA
赋值方法一：
AA[0]=tom
AA[1]=jerry
AA[2]=cat
AA[6]=natasa
赋值方法二：
AA=(tom jerry cat)
赋值方法三：
AA=([0]=tom [1]=jerry [2]=cat [6]=natasa)
&lt;/code>&lt;/pre>
&lt;p>4、一些特殊使用情景&lt;/p>
&lt;pre>&lt;code>查看数组中某个元素的长度
echo ${#AA[0]} --&amp;gt; 显示数组中第一个元素的长度
echo ${#AA[*]} --&amp;gt; 显示数组中不为空的元素的个数
echo ${#AA[@]} --&amp;gt; 显示数组中不为空的元素的个数
&lt;/code>&lt;/pre>
&lt;p>5、在脚本中捕捉信号，并且可以实现特定处理&lt;/p>
&lt;pre>&lt;code>trap --&amp;gt; 捕捉信号，用户替换执行用户发出的指令
trap ‘’ SIG --&amp;gt; 将捕捉到的SIG替换成‘’中的命令（函数也可）执行
使用的场景：用户使用ctrl + C终止脚本执行，将之前定义的变量和生成的文件删除
9/15一般不可被捕捉，
&lt;/code>&lt;/pre>
&lt;h2 id="getopts-31-02">getopts 31-02&lt;/h2>
&lt;p>## 2018-03-23 ##&lt;br>
1，getopts&lt;/p>
&lt;pre>&lt;code>shell的内置命令，使用help getopts查看相应的使用方法
a、getopts只能获取一个选项
b、命令格式：getopts optstring name [arg]
1,getopts 'bd' OPT &amp;amp;&amp;amp; echo $OPT --&amp;gt; 可接受-b，-d选项，接受的内容存在变量OPT中
2,getopts 'bd:' OPT &amp;amp;&amp;amp; echo $OPT &amp;amp;&amp;amp; echo $OPTARG --&amp;gt; d可接受参数（b缺少：，不可以接受参数），
使用shell内置变量OPTARG可显示参数的内容（使用选项不同的时候，变量对应的值不同）
3,getopts只可接受一个选项，不接受同时接多个选项（-b -d同时用）
c、可使用循环来让getopts接受多个选项
while getopts &amp;quot;:d:&amp;quot; OPT; do
case $OPT in
d)
echo $OPT
echo $OPTARG
;;
?)
echo &amp;quot;Wrong choice&amp;quot;
echo &amp;quot;USAGE : mkscript [-d DESCRIPTIONS] FILENEME&amp;quot;
;;
esac
done
d、接了：之后，后面必须接上参数，不然返回值为错误
e、getopts还有一个内置的函数OPTIND（选项索引）
作用:执行了命令./mkscripts -b -d -c /tmp/testfile，$OPTIND取完了-b之后取-d..，一直到将所有的参数取完
注意点：使用不同参数时，对应的OPTIND对应的值也不同
f、getopts命令的具体使用方法可参见定制命令vims,attach-scripts/getinterface
&lt;/code>&lt;/pre>
&lt;h2 id="vnc-31-03">vnc 31-03&lt;/h2>
&lt;p>## 2018-03-24 ##&lt;br>
1，vnc：virtual network computing 虚拟网络计算&lt;br>
2，vnc 能够实现跨平台共享桌面，桌面的打开可基于客户端实现也可基于浏览器实现&lt;br>
3, 能够实现本机没有开启任何图形化界面的情况下，远端的 windows 或者 linux 打开本机的图形界面&lt;br>
4,vnc 的传输是明文的，跨越网络实现 vnc 链接不安全&lt;br>
5，实现连接：&lt;/p>
&lt;pre>&lt;code>a，查看是否安装vnc-server
rpm -qa |grep vnc
b，同样的用户登录ｖｎｃ，使用的密码不一定是该用户的系统登录密码，为ｖｎｃ专用密码，保存密码是加密的，但登录认证的
过程不是加密的
ｃ，设定当前用户基于ｖｎｃ协议访问当前主机的ｖｎｃ密码
vncpasswd
d，启动服务
第一次启动vnc服务：vncserver &amp;amp;，稍等片刻会出现c6u6test1：1 desktop for root的提示，表示现在是第一
个桌面（root），类似于使用screen命令，每个用户只能用一个桌面，需要两个用户登录最少要开启两个桌面
再次执行vncserver &amp;amp;
以后启动使用：service vncserver start
e，登录桌面
打开windows上的vncviewer，在服务器行输入172.16.100.1：1，确认之后再输入密码
f，默认打开的桌面是xterm，仍类似于文本界面，twm（著名的桌面管理器），若需要打开图形化，则需要进行配置;
在需要进行vnc链接的用户家目录下会生成一个.vnc的文件夹，该目录下存在文集那xstartup文件，进行编辑，将
twm &amp;amp; 改为gnome-session，去掉注释unset SESSION_MANAGER和exec /etc/X11/xinit/xinitrc
g，重启服务，vncserver -kill ：2; vncserver -kill ：1关掉刚才打开的session;重新打开vncserver &amp;amp;
&lt;/code>&lt;/pre>
&lt;h2 id="iptables-1-28-01">iptables-1 28-01&lt;/h2>
&lt;p>## 2018-03-24 ##&lt;br>
1,linux 网络防火墙&lt;/p>
&lt;pre>&lt;code>netfilter：Frame（网络过滤器）
iptables：生成防火墙规则，并且能够将其附加在netfilter上，真正实现数据报文过滤，NAT，mangle等规则生成的工具
&lt;/code>&lt;/pre>
&lt;p>2,iptables 依赖于网络的相关内容，分别是 IP 报文首部，TCP 报文首部&lt;/p>
&lt;pre>&lt;code>a、以http数据包为例：IP报文&amp;lt;TCP首部&amp;lt;http首部
&lt;/code>&lt;/pre>
&lt;p>3,iptables 使用规则&lt;/p>
&lt;pre>&lt;code>a、iptables [-t TABLE] COMMAND CHAIN [num] 匹配条件 -j 处理办法
b、匹配条件：
通用匹配
-s:源地址
-d:目标地址
-p:匹配协议&amp;lt;tcp|udp|icmp&amp;gt;
扩展匹配
隐含扩展
-p tcp当指定了某个协议之后,就可以使用该协议的相应扩展功能
--sport PORT[-port]:源端口(port不能使离散的端口,只能是连续的端口)
--dport PORT[-port]:目标端口
--tcp-flags mask comp:只检查mask指定的标志位,是逗号分割的标志位列表;comp:此列表中出现在mask中,标记为必须为1,而mask中剩下的必须为0
--tcp-flags SYN,FIN,ACK,RST SYN,ACK == --syn(匹配tcp三次握手中的第一次)(31:30)
命令示例:
1,放行来自172.16.0.0/24到达172.16.100.7的ssh连接(注意应该有两条规则 ,一进一出)
iptables -t filter -A INPUT -s 172.16.0.0/24 -d 172.16.100.7 -p tcp --dport 22 -j ACCEPT --&amp;gt;要注意sport和dport的使用
iptables -t filter -A OUTPUT -s 172.16.100.7 -d 172.16.0.0/24 -p tcp --sport 22 -j ACCEPT
-p icmp
--icmp-type:icmp是有类型的,ping命令需要用到的是code为0和8两种
0:echo reply(响应报文)
8:echo request(请求报文)
命令示例:
1,设置filter所有鏈的默认策略为DROP,放行172.16.100.7 ping其他主机(自己能ping别人,别人ping不了你)
iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -i lo -j ACCEPT
iptables -A OUTPUT -s 127.0.0.1 -d 127.0.0.1 -o lo -j ACCEPT
iptables -A OUTPUT -s 172.16.100.7 -p icmp --icmp-type 8 -j ACCEPT
iptables -A INPUT -d 172.16.100.7 -p icmp --icmp-type 0 -j ACCEPT
-p udp
--sport
--dport
命令示例:
1,设置filter所有鏈的默认策略为DROP;主机作为一台DNS服务器,相应来自客户端的DNS请求(能联网的主机)
总共需要8条规则,tcp和udp各占一半,剩余四条分别是作为DNS服务端,接收并响应客户端请求;以及需要联网查询的时候,作为客户端时,请求并接收外部主机
显示扩展:使用额外的匹配机制
-m EXTENSION --spec-opt
state:状态扩展,结合ip_conntrack追踪会话的状态(根据IP来追踪状态的,不是根据tcp来追踪)
NEW:新连接请求
ESTABLISH:已经建立的连接,对新请求的响应
INVALID:非法连接请求
RELATED:相关联的,由命令连接激活的另一个连接,两个连接之间的关系叫做related
-m state --state NEW,ESTABLISHED -j ACCEPT
命令示例:
1,只允许http的外部连接请求进来,不允许主机发送新连接请求到其他主机(为了防止反弹木马--&amp;gt;主动连接外部主机)
iptables -A INPUT -d 172.16.100.7 -p tcp --dport 80 -m state --state NEW,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -s 172.16.100.7 -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT
-m multiport:离散的多端口扩展匹配
--source-ports
--destination-ports
--ports
命令示例:
1,同时匹配三个规则
iptables -I INPUT -d 172.16.100.7 -p tcp -m multiport --destination-ports 21,22,80 -m state --state NEW -j ACCEPT
-m iprange:指定ip地址范围
--src-range
--dst-range
命令示例:
iptables -A INPUT -p tcp -m iprange --src-range 172.16.100.3-172.16.100.100 --dport 22 -m state --state NEW,ESTABLISHED -j ACCEPT
-m connlimit:连接数限制
! --connlimit-above n:指定连接的上限
命令示例:
1,限定本机连接到172.16.100.7的连接不能超过两个
iptables -A INPUT -d 172.16.100.7 -p tcp --dport 80 -m connlimit ! --connlimit-above 2 -j ACCEPT
iptables -A INPUT -d 172.16.100.7 -p tcp --dport 80 -m connlimit --connlimit-above 2 -j REJECT
-m limite:用于限制连接速率的
--limit RATE:限定速率
--limit-brust:限定次数
-m string:用来屏蔽请求返回内容包含匹配字符的
--algo {bm|kmp}
--string &amp;quot;string&amp;quot;
条件取反:加上!
&lt;/code>&lt;/pre>
&lt;p>4,常用命令:&lt;/p>
&lt;pre>&lt;code>a, 管理规则
-A:附加一条规则(鏈的尾部)
-I CHAIN [num]:插入一条规则(指定添加的位置),省略则为第一条
-D CHAIN [num]:删除指定鏈中的第num条规则,省略也可匹配
-R CHAIN [num]:替换指定的规则
b, 管理鏈
-F [CHAIN]: flush,清空指定规则鏈,如果省略CHAIN,则可以实现删除对应表中的所有鏈
-P CHAIN:设定指定鏈的默认策略;
-N:自定义一条新的空鏈
-X:删除一个自定义的空鏈(必须是空鏈,非空则需要先使用-F清空)
-Z:清空指定鏈中所有规则的计数器
-E:重命名一条自定义鏈
c,查看
-L:显示指定表中的规则
-n:以数字格式显示主机地址和端口
-v:显示鏈及规则详细信息(可接收-vv),显示的是可读形式
-x:显示精确值(exact)
--line-numbers:显示规则号码
d,可执行的动作(target):
ACCEPT:放行
DROP:丢弃
REJECT:明确告诉拒绝
DNAT:目标地址转换
SNAT:源地址转换
REDIRECT:端口重定向
MASQUERADE:地址伪装
LOG:日志
LOG还可以包含各种不同的参数,例如记录序列号,用户uid等
LOG与其他的动作结合使用时,需要把相应的规则放在前面,否则匹配了之后到不了LOG处
使用LOG作为记录使用时,最好结合速率限制一起使用,防止记录过多信息
MARK:给匹配的包打上标记,不放行也不拒绝
&lt;/code>&lt;/pre>
&lt;p>5,iptables 服务:&lt;/p>
&lt;pre>&lt;code>a,iptables不是服务,但有服务脚本;服务脚本的作用主要在于管理保存的规则
b,可以使用lsmod来查看iptables的相应模块是否被加载(ip_tables,ip_nat,ip_contract,iptable_nat等)
c,停止了iptables服务,其实就是将iptables的相应模块移除了
d,加载或者移除iptables/netfilter相关的内核模块
&lt;/code>&lt;/pre>
&lt;p>6,连接追踪功能 ip_conntrack&lt;/p>
&lt;pre>&lt;code>a,功能:客户端,服务端彼此之间建立的连接关系,并且能够追踪到一个连接与另外一个连接彼此之间处于什么样的一个状态,并且拥有什么样的关系
b,文件/proc/net/ip_conntrack,保存有当前系统上每一个客户端与当前主机建立的连接关系
c,使用命令iptstate查看当前系统的包追踪状态
-t:显示个数
d,内核参数ip_conntrack_max保存有当前系统最多可追踪的连接数,超出这个数字之后,新的连接会因超时而被丢弃
1,对于web服务器,连接数需要调大,否则可能导致连接错误
2,对于特别繁忙的服务器,尽量不要开启这个模块
3,使用iptables命令查看规则的时候(iptables -t nat -nL),会加载该模块,自动开始追踪
e,iptables的规则保存文件/etc/sysconfig/iptables
&lt;/code>&lt;/pre>
&lt;p>7,iptables 规则保存&lt;/p>
&lt;pre>&lt;code>a,service iptables save
默认保存在/etc/sysconfig/iptables
b,iptables-save &amp;gt; xxx
使用重定向的方式将规则保存起来
c,iptables-restore &amp;lt; xxx读取规则文件
&lt;/code>&lt;/pre>
&lt;h2 id="understanding-the-linux-operating-system-1">understanding the linux operating system 1&lt;/h2>
&lt;p>## 2018-04-09 ##&lt;br>
1、OS：operating system 本身就是一个虚拟机&lt;br>
2、计算机构成：五大部分&lt;/p>
&lt;pre>&lt;code>CPU：
运算器：负责运算，算数运算、逻辑运算
控制器：控制指令，数据的存取过程
寄存器：CPU计算数据来源及计算结果暂存位置（register）
&lt;/code>&lt;/pre>
&lt;p>3、程序就是指令加数据构成的&lt;br>
4、CPU 与内存的沟通（CPU、north bridge、RAM）&lt;/p>
&lt;pre>&lt;code>a、理解为CPU通过桥（总线）连接到North bridge，North bridge在通过桥（总线）连接到RAM;桥的宽度可以是32bit、64bit
桥的宽度影响CPU能够寻址的大小，32bit时为2^32=4GB大小;64bit时为4G×4GB大小。
b、CPU的控制指令、数据存取都是通过这个32bit、64bit，也即是线路复用的情况
&lt;/code>&lt;/pre>
&lt;p>5、PAE：物理地址扩展 physical address extension&lt;/p>
&lt;pre>&lt;code>作用：为32位的寻址总线加上了4bit;32bit，+4bit;增加了该功能够，使本身只支持4G的系统可以支持4GB×16=64GB
&lt;/code>&lt;/pre>
&lt;p>6、缓存的使用&lt;/p>
&lt;pre>&lt;code>a、程序：局部性
b、CPU的缓存：指令缓存，数据缓存;一级缓存、二级缓存各cpu独有，三级缓存一般是共享的;缓存的大小会影响系统性能
c、对于ram存取数据来说，保存有数据实际上就是ram中带有电荷，读取完成之后，电荷就消失了;ram需要不停的刷新来存取数据
&lt;/code>&lt;/pre>
&lt;p>7、缓存的置换策略&lt;/p>
&lt;pre>&lt;code>a、空间局部性：一个数据被使用到，则其旁边的数据被用到的概率更大
b、时间局部性：一个数据如果被用到，那他再次被用到的概率更大
&lt;/code>&lt;/pre>
&lt;p>8、若 CPU 有输出，有数据被更改，则可能对一级缓存、二级缓存、三级缓存、主存、硬盘都要进行写操作，这种方式称为通写（write through）;&lt;br>
9、若 CPU 有输出，有数据被更改，但是没有立即写入到各层级存储中去，只有数据在被丢弃的时候才写入后面的存储，这种方式称为回写（write back）;目前绝大多数情况都是回写的方式，性能相对而言高了很多;&lt;br>
10、一般情况下，显卡也是直接接到 North bridge 上的，需要使用到 CPU 对图像进行渲染和计算，数据交换量是非常大的;&lt;br>
11、IO 分为高速 IO 和低速 IO&lt;/p>
&lt;pre>&lt;code>a、高速IO一般是指PCI的IO，高速IO总线
b、南桥一般是把慢速IO汇总起来，一并交给北桥进行处理
c、PCI是连接到南桥的，速度其实不能算是很快;现有PCI-E口，直接接到北桥上，速度比PCI口快了不止一点点;
d、使用PCI-E口的USB速度会很快，带宽足够了，瓶颈可能变成了USB的读写能力，这个时候可以将多个USB设备整合成为一个存储
设备，并行读写，这种方式就是固态硬盘的方式;仍有选择使用PCI（SATA）口的固态硬盘，建议用PCI-E口的固态硬盘;
&lt;/code>&lt;/pre>
&lt;p>12、各种设备连接到南桥，南桥在连接到北桥，北桥在连接到 CPU;北桥和内存又相连;北桥给各种不同的设备分配地址（32bit/64bit）用做 CPU 来区分和识别&lt;/p>
&lt;pre>&lt;code>a、任何一个设备，为了能够和主机交互，在加电自检完成之后，每一个硬件都必须向CPU注册申请整个IO端口上一片连续的端口;
每一次注册的结果可能不一样;在开启后，CPU与这些设备交互都是通过这些端口来进行;
b、虽然各个设备已经注册了不同的端口与CPU交互，但仍然还是通过同一个总线进行 --&amp;gt; 总线复用
c、没一个硬件设备的内部线路可能与CPU不一致，但都会有各自的控制器（适配器），作用是将这个设备能够理解的信号转换成
总线上能够识别的信号，是个翻译官，还可能附带是司令官，控制校验，速率设定等;
&lt;/code>&lt;/pre>
&lt;p>13、（可编程）中断控制器（Interrupt Controller）&lt;/p>
&lt;pre>&lt;code>a、CPU上自带有一个中断控制器，用于接收处理中断信号的;
b、当硬件设备上来了信号之后（区别于IO端口），由这个硬件设备负责通知CPU（中断控制器）进行处理;
c、中断控制器帮助CPU识别是哪个硬件发过来的中断请求;中断控制器上有中断控制线（中断通路）;
d、硬件发送过来的中断信号，也即是中断向量
e、每一个硬件设备在启动的时候，必须要向中断控制器（可编程中断控制器）来申请注册使用一个中断向量 --&amp;gt; 有地址
的通知机制;当信号发送过来后，能够自动被CPU识别，即认识到是哪个硬件设备发送过来的。
f、一般将中断处理分为上半部和下半部;上半部，将请求接近来;下半部，处理中断请求。
&lt;/code>&lt;/pre>
&lt;p>14、直接内存访问 DMA（direct memory access）&lt;/p>
&lt;pre>&lt;code>a、cpu将数据从磁盘中读取写入的操作授权给其他助手使用（总线的使用），可能出现资源争抢的情况，容易出现争抢现象的
位置称为临界区
b、CPU告诉DMA有15M可以读取，将线路授权给DMA;DMA没有CPU那么打的总线带宽，一般系统会预留低地址的内存给DMA
使用（寻址限制）
&lt;/code>&lt;/pre>
&lt;p>15、BIOS 自举&lt;/p>
&lt;pre>&lt;code>a、系统启动之后，系统会将ROM空间内容映射到内存最开始的部分
b、CPU加电后，什么事都不干，先执行内存最初始部分的代码，完成自检，加载bootloader
c、内存的空间分配为ROM：DMA：left
&lt;/code>&lt;/pre>
&lt;p>16、系统启动之后，CPU 一直处于运行状态，区别只是有用的转和无用的转，运行称为时钟周期&lt;/p>
&lt;pre>&lt;code>a、CPU内部通常有一个称为时钟产生器的东西（晶体震荡器）
b、内存可能在一个CPU的时钟周期内只走了一点点
c、CPU以时间片来进行资源的利用和分配，通过时间的流逝来体现计算能力
&lt;/code>&lt;/pre>
&lt;p>17、操作系统的演变（所有的程序运行都要向监控程序申请资源）&lt;/p>
&lt;pre>&lt;code>a、有一个管理系统（管理程序），负责从磁盘中加载一个程序到内存中，然后加载程序到CPU进行运算，运算结果保存到内存
中，再把数据写回到硬盘;再加载另一个程序来运行，周而复始;这个程序早期叫做monitor，就是一个监控程序，其他程序的
监控程序
b、程序发展得越来越大，变成了OS（operating system）
c、OS把整个机器抽象出来，变成了一个虚拟机VM（virtual machine）
&lt;/code>&lt;/pre>
&lt;p>18、process：进程，一个独立的运行单位&lt;/p>
&lt;pre>&lt;code>a、进程无法直接在硬件上运行，由监控程序（OS）来监控运行
b、系统资源：CPU时间、存储空间
&lt;/code>&lt;/pre>
&lt;p>19、OS：VM&lt;/p>
&lt;pre>&lt;code> a、CPU：站在CPU的角度，以时间来进行区分
1、时间：切片来进行;一个10GHz的CPU可以虚拟看成是10个1GHz的虚拟CPU
2、缓存：缓存当前程序数据，在数据清空前需要进行回写
3、指令计数器：CPU当中包含的，当前的进程分配的时间用完了，但是进程仍未执行完，下次怎么继续处理呢，依赖于
指令计数器来实现
4、进程切换：进程切换的时候要保留现场，恢复现场;进程切换是有开销的，如缓存在切换的过程中被清掉了，恢复现场
的时候则需要重新加载数据，保存现场的数据保存在主存当中
b、MEM：站在内存的角度，以空间大小来进行区分，同样还是切片
1、内存的实现方式为：将内存切割，分成4K大小的存储槽，每个存储槽称作一个页框;每个槽能够存储的数据称为一个
页面（page），每一个页面的存储空间称为一个页框（page frame），在页框上增加一个页框和页的映射关系;
2、每一个进程都认为自己是有4G空间可用的
a、内存空间的分配：指令区（代码区），数据区，bss段，heap区 &amp;lt;--&amp;gt; stack区
-------------- | ----- | ---- | ----- | |------- --&amp;gt; 4G大小
只使用了有限的空间，中间为空
以上面的为例解释，假设指令区一个页，数据区一个页，bss一个页，heap一个页，stack一个页;通过映射，指
令区映射到一个页框，数据区映射到一个页框，bss映射到一个页框，heap映射到一个页框，stack映射到一个
页框（不一定连续）
b、虚拟出来的空间可以认为是一个进程描述结构
c、这个是有内核在内存中维护的，当进程需要使用时，内核告诉进程相应的映射关系
d、页目录，映射关系由一个芯片负责维护，在进程需要使用到自己的数据时，怎么样能够更快的找到虚拟地址（线
性地址）实际对应的物理地址呢;通过页目录来实现的，页目录分为一级、二级、三级。。来实现更高效率的
查找;用于方便建立线性地址到物理地址的对应关系
e、通过空间映射来完成
f、实现映射关系的芯片的引入还同时具有了内存保护的功能
c、IO设备：在进程层次上，IO设备不需要去做虚拟，IO设备在谁获得了当前的焦点，IO对应的切换就交给哪个进程了
1、IO只能是内核控制，一旦产生IO中断，一定是和内核交互，再由内核转给进程
2、内核，N×进程 --&amp;gt; 系统
a、内核运行时，是内核模式
b、进程运行时，是用户模式
c、在内存当中，内核占用空间是内核空间，进程占用空间是用户空间
d、进程是不能直接控制硬件的
&lt;/code>&lt;/pre>
&lt;p>20、早期 x86 架构的系统是不适合用来做虚拟机的，在后来 CPU 支持硬件虚拟化之后才实现了&lt;/p>
&lt;pre>&lt;code>a、在进程的层次上，资源已经被虚拟化过一次了
&lt;/code>&lt;/pre>
&lt;p>21、CPU 指令分为四个层级，环 0-3,环 0 为内核模式（特权模式），环 3 是用户模式（限制模式）&lt;br>
22、虚拟机的运行模式有多种，其中一种是仿真（模拟）出来硬件层，在虚拟机系统层面查看不出来是否是在虚拟机上运行&lt;/p>
&lt;pre>&lt;code>a、这种模式下，虚拟机上的内核运行特权指令时是通过虚拟机先翻译传给物理机内核，内核处理完再返还
b、在后来更改了一种机制，物理机上增加环-1（包含最最特权的指令），虚拟机可以运行环0的指令（不包含一些特权指令）
硬件虚拟化也就是提供了-1环
&lt;/code>&lt;/pre>
&lt;p>23、IO 准备的过程&lt;/p>
&lt;pre>&lt;code>a、进程空间交接给内核空间
b、内核开始调用，将辅存当中的数据读取出来，先放到内核空间的缓存中
c、内核空间缓存转移到用户空间缓存中
d、地址映射，物理内存映射完成
e、资源准备完成，内核唤醒进程
&lt;/code>&lt;/pre>
&lt;p>24、进程队列&lt;/p>
&lt;pre>&lt;code>a、就绪状态，sleeping状态（可中断、不可中断）
&lt;/code>&lt;/pre>
&lt;h2 id="understanding-the-linux-operating-system-2">understanding the linux operating system 2&lt;/h2>
&lt;p>## 2018-04-16 ##&lt;br>
1、操作系统、硬件、软件结构图&lt;/p>
&lt;pre>&lt;code> ----------------------------------------------------
| Applications |
|--------------------------- |
| Libraries | |
|----------------------------------------------------|
| |
| Kernel -------------------------|
| | Drivers |
| -------------------------- |
| | Firmware | |
|----------------------------------------------------|
| Hardware |
----------------------------------------------------
&lt;/code>&lt;/pre>
&lt;p>2、在 linux 中，进程是通过双向链表（list）来进行管理组织的&lt;/p>
&lt;pre>&lt;code>a、进程描述符：没一个进程都有其进程描述符
b、在创建一个进程的时候，首先一步就是要创建一个进程描述符，并将其添加到双向链表上
c、杀掉一个进程，就是将这个进程描述符删除，内核不在能够追踪此描述符
d、创建了一个进程后除了给进程分配CPU、内存等资源外，还需要在内核的内存空间中维护一个进程描述符文件，里面保存有进程
当前的所有相关信息
&lt;/code>&lt;/pre>
&lt;p>3、task_struct（进程描述）&lt;/p>
&lt;pre>&lt;code> task_struct
--------------
|status
|--------------
|thread_info
|--------------
|usage
|flags
|...
|--------------
|run_list
|
|tasks
|--------------
|... mm_struct
|-------------- --------------------
|mm -----&amp;gt; | pointers to memory |
|-------------- | aera descriptors |
| --------------------
|--------------
|real_parent
|parent
|--------------
|...
|--------------
|tty -----&amp;gt; ...
|--------------
|...
|--------------
|thread -----&amp;gt; ...
|--------------
|...
|-------------
|fs -----&amp;gt; ...
|--------------
|files -----&amp;gt; ...
|-------------
|
|-------------
|signals
|pending
|-------------
|
-------------
&lt;/code>&lt;/pre>
&lt;p>4、进程切换&lt;/p>
&lt;pre>&lt;code>a、进程切换也称为上下文切换（context switch）
b、进程A切换至进程B，A挂起，称为保存现场;B恢复，称为恢复现场
c、进程切换由内核进行管控;每次进程切换都需要经过内核，进程由用户模式切换至内核模式，内核模式在切换回用户模式
d、进程切换需要时间，分为用户模式需要占用的时间和内核模式需要占用的时间（分别对应top中的sys和usr）
e、进程切换太多不好（内核模式占用时间多，用于处理事件的用户模式占用时间就少了）;进程切换太少也不好（10个进程，
每个进程等待时间过长，影响用户体验）
f、linux支持进程抢占，linux有自己内部的系统时钟：tick（滴答），每一次tick即可产生一次时钟中断
&lt;/code>&lt;/pre>
&lt;p>5、linux 中进程分类&lt;/p>
&lt;pre>&lt;code>a、交互式进程（IO密集型，等待IO）：桌面型优先级相对高一些
b、批处理进程（CPU密集型）：服务器型优先级相对高一些
c、实时进程（real-time）：优先级特别高
d、分配策略：为CPU密集型进程设定时间片长，优先级低;为IO密集型设定CPU时间片短，优先级高
&lt;/code>&lt;/pre>
&lt;p>6、linux 优先级&lt;/p>
&lt;pre>&lt;code>a、实时优先级：1-99,数字越小，优先级越低
b、静态优先级：100-139,数字越小，优先级越高
c、实时优先级比静态优先级高
d、在top的输出结果中，表头显示PR（priority）的列中出现RT表示real time;riprio（实时优先级）
e、在top命令的输出结果中comm列包含[]的命令表示为内核线程
&lt;/code>&lt;/pre>
&lt;p>7、linux 调度类别&lt;/p>
&lt;pre>&lt;code>a、实时进程：
1、SCHED_FIFO：First In First Out
2、SCHED_RR ：Round Robin
3、SCHED_OTHER：用来调度100-139的进程
b、在top命令输出结果中的CLASS列表示的是该进程的调度类别
c、动态优先级：在内核当中，若某个进程长时间为被运行，内核会临时性的调高其优先级
d、chrt命令用来调整1-99的进程，nice/renice用于调整100-139的进程
1、chrt -f -p prio pid ：fifo
2、chrt -r -p prio pid ：rr
&lt;/code>&lt;/pre>
&lt;p>8、优先级算法 O（1）&lt;/p>
&lt;pre>&lt;code>2.6的内核使用方式为划分为1-139共140×2=280个队列（每个级别有两个队列，一个是活动队列，一个是过期队列），
将每个级别的进程分别加入各自对应的队列，每次需要选择进程进行执行，扫描队列的首部即可
&lt;/code>&lt;/pre>
&lt;h2 id="understanding-the-linux-operating-system-3">understanding the linux operating system 3&lt;/h2>
&lt;p>## 2018-04-16 ##&lt;br>
1、中断&lt;/p>
&lt;pre>&lt;code>a、硬中断：硬件产生的中断
b、软中断：由用户空间进入到内核空间
&lt;/code>&lt;/pre>
&lt;p>2、CPU 缓存&lt;/p>
&lt;pre>&lt;code>a、一级缓存有两个，分别是I1（指令缓存），D1（数据缓存）
&lt;/code>&lt;/pre>
&lt;p>3、SMP 对称多处理器：在一个主板上有多个 cpu 插槽，每一个插槽称为一个 socket&lt;/p>
&lt;pre>&lt;code>a、完成一次正常的内存访问，CPU至少需要三个时钟周期，分别是
1、向内存控制器传输一个寻址要求
2、完成地址确定后（内存地址的编址是由内存控制器来完成的），CPU找到内存地址并施加一定的请求机制（对内存施加锁）
3、完成读或者写的操作
b、内存节点只有一个，性能的提升是有限的（增加CPU），在于内存的争用
&lt;/code>&lt;/pre>
&lt;h2 id="iptables-4-28-04">iptables-4 28-04&lt;/h2>
&lt;p>## 2018-09-10 ##&lt;br>
1,iptables 创建自定义鏈(在包进入到主机前,先让其经过 clean_in 自定义鏈处理)&lt;/p>
&lt;pre>&lt;code>命令示例:自定义规则鏈,让其能够备主鏈调用
# iptables -N clean_in
# iptables -A clean_in -d 255.255.255.255 -p icmp -j DROP
# iptables -A clean_in -d 172.16.255.255 -p icmp -j DROP
# iptables -A clean_in -p tcp ! --syn -m state --state NEW -j DROP
# iptables -A clean_in -p tcp --tcp-flags ALL ALL -j DROP
# iptables -A clean_in -p tcp --tcp-flags ALL NONE -j DROP
# iptables -A clean_in -d 172.16.100.7 -j RETURN
# iptables -I INPUT -j clean_in
自定义鏈有一个reference属性,可以看出被其他主鏈引用的次数
&lt;/code>&lt;/pre>
&lt;p>2,利用 iptables 的 recent 来抵御 DOS 攻击&lt;/p>
&lt;pre>&lt;code># iptables -I INPUT -p tcp --dport 22 -m connlimit --connlimit-above 3 -j DROP
# iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --set --name SSH
# iptables -I INPUT -p tcp --dport 22 -m state --state NEW -m recent --update --seconds 300 --hitcount 3 --name SSH -j DROP
a.利用connlimit模块将单IP的并发设置为3；会误杀使用NAT上网的用户，可以根据实际情况增大该值；
b.利用recent和state模块限制单IP在300s内只能与本机建立3个新连接。被限制五分钟后即可恢复访问。
下面对最后两句做一个说明：
1.第二句是记录访问tcp 22端口的新连接，记录名称为SSH
--set 记录数据包的来源IP，如果IP已经存在将更新已经存在的条目
2.第三句是指SSH记录中的IP，300s内发起超过3次连接则拒绝此IP的连接
--update 是指每次建立连接都更新列表；
--seconds必须与--rcheck或者--update同时使用
--hitcount必须与--rcheck或者--update同时使用
3.iptables的记录：/proc/net/ipt_recent/SSH
&lt;/code>&lt;/pre>
&lt;p>3,NAT(network address translation)&lt;/p>
&lt;pre>&lt;code>a,DNAT(目标地址转换)
b,SNAT(源地址转换)(30:00)
&lt;/code>&lt;/pre>
&lt;h2 id="加密类型及其相关算法-18-01">加密类型及其相关算法 18-01&lt;/h2>
&lt;p>## 2021-06-08 ##&lt;/p>
&lt;ul>
&lt;li>TCP/IP 安全问题: 刚开始设计时,没有考虑安全性要求的深远
&lt;pre tabindex="0">&lt;code> a,以 A --&amp;gt; B 两台主机建立连接为例说明
- 机密性: 明文传输(ftp, http, smtp, telnet),所有经手人都能看到内容(明信片和信件的差异)
- 完整性: 传输时不能随意被篡改掉(交易时订单数目被修改)
- 身份验证: 保证访问的官网是真的官网
b,机密性的保证:
- 传输方: plaintext --&amp;gt; 转换规则 --&amp;gt; ciphertext
- 接收方: ciphertext --&amp;gt; 转换规则 --&amp;gt; plaintext
1,在互联网中安全设计体系结构中的基本法则: 保证数据机密性的核心不是算法本身,而是密钥
- 别人可以知道算法,加密依赖的不是算法,主要是密钥,主要是维护性的考虑(换一个密钥比换一个算法简单的多)
2,对称加密:提供算法本身,用户提供一个密钥;结合密钥和算法,能够将明文转换为密文;解密也使用的是同一个密钥,有加密算法和解密算法
- 对称加密的好处是算法计算速度很快,但安全性几乎完全依赖于密钥
- 对称加密的一个坏处是当通信对象过多时,无法有效的对密钥进行管理
c,完整性的保证:
- 单向加密算法: 提取数据特征码,A: plaintext:footprint --&amp;gt; B
a,输入一样,输出必然相同
b,雪崩效应:输入的微笑改变,将会引起结果的巨大改变
c,定长输出:无论原始数据多巨大,结果大小都是相同的
d,不可逆的:无法根据特征码还原原来的数据
- 攻击类型:
中间人攻击: E 截取了 A 发给 B 的内容,篡改了 plaintext 后,重新生成了 footprint &amp;gt;&amp;gt; A: plaintext:footprint --&amp;gt; E: plaintext2:footprint2 --&amp;gt; B
修复方式: 将 A 发送给 B 的 footprint 内容也使用密钥加密,B 接受到了之后使用密钥解密
- 密钥加密算法(协商密钥): 一种情况,A 和 B 从来没有见过面,也没有约定过加密解密密钥
- 协商生成密码: 密钥交换(Internet key-exchange: IKE),双方协商生成密码,但是不让第三方得到这个密码
- Diffie-Hellman 协议,按照如下方式协商密钥:
a,A --&amp;gt; B,A 和 B 准备建立连接
b,明文确认两个数 p, g(大素数, 生成数)
c,A 自己取一个随机数 x, B 自己取一个随机数 y
d,A(g^x%p) --&amp;gt; B; B(g^y%p) --&amp;gt; A(此时互联网上明文传输的有四个数,分别是 p/g/g^x%p/g^y%p),因为离散数学原理,无法获取到 x,y 的具体数值
e,协商的结果为,密钥是 g^xy%p
- 由软件自己实现
- 该方式仍然无法解决身份认证的问题(可能协商密钥已经被截取替换),为了解决这个问题,有了非对称加密,公钥加密算法
- 公钥加密算法(非对称加密算法):
- 密钥对(一般都是成对出现的):
a,公钥 p: 公钥不是独立的,公钥是从私钥中提取出来的
b,私钥 s: 为了保证安全性,私钥一般都特别长
c,公钥是所有人都可以知道的,私钥必须只能自己知道
- 用公钥加密的,只能用私钥解密;反之亦然
a,A --&amp;gt; B,使用 B 的公钥加密,能够解密的只可能是 B(这样就完成了机密性/身份验证的问题)
b,发送方用自己的私钥加密,可以实现身份认证; 发送方用对方的公钥加密,可以保证数据机密性
- 公钥加密算法很少用来加密数据: 主要是速度太慢了,一般来说公钥加密会比对称加密慢上三个数量级
- 公钥加密算法主要用在身份验证上
- 已下列传输方式说明:
a,A(plaintext/footprint): A 使用自己的私钥加密特征码,发送给 B
b,B 通过 A 的公钥解密特征码,验证是否正常是 A 的
c,假设中间有 E 截取了 A 发送给 B 的内容,E 能够获取到 A 的特征码,但是无法修改 plaintext 后再生成 footprint(特征码),因为此时生成特征吗只能使用 E 自己的私钥加密,B 在获取到之后,无法使用 A 的公钥解密 E 发送过来的特征码,这样就可以确保身份验证
d,主要保证的是身份验证,数据不被篡改(篡改了获取之后能判断出来,直接丢弃了);拿到特征码之后,要确认能够用 A 的公钥解密,不能解密就已经有问题
- 公钥加密主要用在身份验证上
- 涉及到另外一个问题,怎么获取到 A 的公钥
d,公钥签名(签名机构问题)
e,三重验证怎么完成问题
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;h2 id="the-differences-between-rhel6--rhel7">the differences between RHEL6 &amp;amp; RHEL7&lt;/h2>
&lt;p>## 2018-06-08 ##&lt;/p>
&lt;pre>&lt;code>-----------------------------------------------------------------------------------------------------------------
- RHEL6 - RHEL7
------------------------------------------------------------------------------------------------------------------
filesystem - ext4 - xfs
-------------------------------------------------------------------------------------------------------------------
kernel version - 2.6.x-x - 3.10.x-x
-------------------------------------------------------------------------------------------------------------------
kernel name - Santiago - Maipo
-------------------------------------------------------------------------------------------------------------------
release time - 2010-11-09 - 2014-06-09
-------------------------------------------------------------------------------------------------------------------
progress name - init - systemd
-------------------------------------------------------------------------------------------------------------------
- runlevel0 - runlevel0.target-poweroff.target
- runlevel1 - runlevel1.target-rescue.target
- runlevel2 - runlevel2.target-multi-user.target
runlevel - runlevel3 - runlevel3.target-multi-user.target
- runlevel4 - runlevel4.target-multi-user.target
- runlevel5 - runlevel5.target-graphical.target
- runlevel6 - runlevel6.target-reboot.target
- /etc/inittab - /etc/systemd/system/default.target
-------------------------------------------------------------------------------------------------------------------
hostname - /etc/sysconfig/network - /etc/hostname
-------------------------------------------------------------------------------------------------------------------
max file size - 16TB - 500TB
-------------------------------------------------------------------------------------------------------------------
filesystem check tool - e2fsck - xfs.repair
-------------------------------------------------------------------------------------------------------------------
boot tool - GRUB - GRUB2
-------------------------------------------------------------------------------------------------------------------
service start - upstart - systemd
-------------------------------------------------------------------------------------------------------------------
- service xxxx start - systemctl enable xxxx.service
- service xxxx stop - systemctl start xxxx.service
service control - service xxxx status - systemctl stop xxxx.service
- service xxxx restart - systemctl status xxxx.service
- chkconfig xxxx on|off - backwards compativility chkconfig service
-------------------------------------------------------------------------------------------------------------------
firewall - iptables - firewalld,iptables
-------------------------------------------------------------------------------------------------------------------
network bond - bonding - teaming,bonding
-------------------------------------------------------------------------------------------------------------------
time set - ntp - chrony,ntp
-------------------------------------------------------------------------------------------------------------------
nfs version - NFS4 - NFS4.1，支持NFSv3.0,4.0,4.1客户端
-------------------------------------------------------------------------------------------------------------------
cluster management - rgmanager - pacemaker
-------------------------------------------------------------------------------------------------------------------
load-balance tool - rgmanager - HAProxy，Keepalived
-------------------------------------------------------------------------------------------------------------------
desktop environment - GNOME2.0 - GNOME3.0,KDE4.10
-------------------------------------------------------------------------------------------------------------------
database - mysql - mariadb
------------------------------------------------------------------------------------------------------------------
the commands's differences between RHEL6 &amp;amp; RHEL7
-----------------------------------------------------------------------------------------------------------------
- RHEL6 - RHEL7
-------------------------------------------------------------------------------------------------------------------
GUI tool - system-config-* - gnome-control-center
-------------------------------------------------------------------------------------------------------------------
network tool - nmcli,nmtui,nm-connection-editor - system-config-network
-------------------------------------------------------------------------------------------------------------------
language tool - system-config-language - localectl
-------------------------------------------------------------------------------------------------------------------
time tool - system-config-date,date - timedatactl,date
-------------------------------------------------------------------------------------------------------------------
time synchronise - ntpdate,/etc/ntp.conf - ntpdate,/etc/chrony.conf
-------------------------------------------------------------------------------------------------------------------
keyboard tool - system-config-keyboard - localectl
-------------------------------------------------------------------------------------------------------------------
service list - service --status-all - systemctl -t status --state=active
-------------------------------------------------------------------------------------------------------------------
add service - chkconfig --add - systemctl daemon-reload
-------------------------------------------------------------------------------------------------------------------
get runlevel - runlevel - systemctl get-default
-------------------------------------------------------------------------------------------------------------------
change runlevel - init,runlevel - systemctl isolate name.target,init,runlevel
-------------------------------------------------------------------------------------------------------------------
log file - /var/log/ - /var/log/,journalctl
-------------------------------------------------------------------------------------------------------------------
single mode - 1,s,/bin/bash - rd.break,init=/bin/bash
-------------------------------------------------------------------------------------------------------------------
shutdown system - shutdown - systemctl shutdown
-------------------------------------------------------------------------------------------------------------------
poweroff host - poweroff - systemctl poweroff
-------------------------------------------------------------------------------------------------------------------
halt the system - halt - systemctl halt
-------------------------------------------------------------------------------------------------------------------
reboot the system - reboot - systemctl reboot
-------------------------------------------------------------------------------------------------------------------
modify runlevel - /etc/inittab - systemctl set-default
-------------------------------------------------------------------------------------------------------------------
configure grub - /boot/grub/grub.conf - /etc/default/grub,grub2-mkconfig,grub-set-default
-------------------------------------------------------------------------------------------------------------------
install packages - yum install,yum groupinstall - yum install,yum group install
-------------------------------------------------------------------------------------------------------------------
package information - yum info,yum groupinfo - yum info,yum group info
-------------------------------------------------------------------------------------------------------------------
lvm management - vgextend,lvextend,resize2fs - vgextend,lvextend,xfs_growfs
-------------------------------------------------------------------------------------------------------------------
- /etc/sysconfig/network - /etc/hosts
network configuration - /etc/hosts - /etc/resolve.conf
- /etc/resolve.conf - /etc/sysconfig/network-scripts/ifcfg*
- /etc/sysconfig/network-scripts/ifcfg* -
-------------------------------------------------------------------------------------------------------------------
hostname - hostname,/etc/sysconfig/network - hostnamectl,/etc/hostname,nmcli
-------------------------------------------------------------------------------------------------------------------
ip addr configure - ip a,ifconfig,brctl - ip a,nmcli dev show,teamdctl,brctl bridge
-------------------------------------------------------------------------------------------------------------------
port listing - ss,netstat,lsof - ss,lsof
-------------------------------------------------------------------------------------------------------------------
&lt;/code>&lt;/pre></content><category scheme="https://ruisum.top/tech/" term="tech" label="tech"/><category scheme="https://ruisum.top/tech/basics/" term="basics" label="basics"/><category scheme="https://ruisum.top/tech/basics/notes/" term="notes" label="notes"/><category scheme="https://ruisum.top/tags/linux/" term="linux" label="linux"/><category scheme="https://ruisum.top/tags/basic/" term="basic" label="basic"/><category scheme="https://ruisum.top/tags/note/" term="note" label="note"/></entry></feed>